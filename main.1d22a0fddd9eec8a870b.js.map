{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Loader.jsx","webpack:///./src/components/GraphSvg/constants.jsx","webpack:///./src/components/GraphSvg/mouseEvents.jsx","webpack:///./src/components/GraphSvg/algorithms.jsx","webpack:///./src/components/GraphSvg/util.jsx","webpack:///./src/components/TinyQueue.jsx","webpack:///./src/components/GraphSvg/graphActions.jsx","webpack:///./src/components/GraphSvg/edgeActions.jsx","webpack:///./src/components/GraphSvg/nodeActions.jsx","webpack:///./src/components/GraphSvg/keyboardEvents.jsx","webpack:///./src/components/GraphSvg/markerActions.jsx","webpack:///./src/components/GraphSvg/index.js","webpack:///./src/components/ClickAwayListenerV2.jsx","webpack:///./src/components/SidebarButton.jsx","webpack:///./src/components/PopupDialog.jsx","webpack:///./src/components/FabPopup.jsx","webpack:///./src/components/SidebarPopup.jsx","webpack:///./src/components/InnerNestedSidebarButton.jsx","webpack:///./src/components/NestedSidebarButton.jsx","webpack:///./src/components/SimpleSidebarButton.jsx","webpack:///./src/components/SidebarPanel.jsx","webpack:///./src/components/ClearButton.jsx","webpack:///./src/components/ShareButton.jsx","webpack:///./src/components/SelectorPanel.jsx","webpack:///./src/components/newData.js","webpack:///./src/components/App.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","loading","Loader","props","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","React","Component","previousProps","previousState","ready","parentState","setState","isReady","console","info","_this$props","classes","react_default","a","createElement","Fragment","className","Math","floor","random","withStyles","theme","root","constants","lineObjectClass","lineParentObjectClass","lineHitboxObjectClass","lineStylingPathClass","lineStylingArrowClass","lineStylingFullClass","overclockedTextClass","nodeVersionTextClass","nodeRequirementsIconClass","nodeSurplusIconClass","nodeRequirementsSubIconClass","nodeProducesClass","nodeSurplusClass","nodeProducesPerMinText","nodeLimitingThroughputText","nodeLimitingThroughputClass","lineLimitedThroughputText","lineLimitedThroughputClass","selectedClass","selectedNodeClass","selectedLineClass","connectableClass","graphNodeClass","graphNodeHoverClass","overclockedArcClass","graphNodeGrabbedClass","graphNodeIdBase","svgGraphClass","activeEditId","BACKSPACE_KEY","DELETE_KEY","ENTER_KEY","nodeRadius","round_up","x","factor","round","strongly_connected_components_standalone","graph","index_counter","stack","lowlink","index","keys","forEach","node","includes","_strong_connect","parseInt","toString","successor","undefined","Error","JSON","stringify","min","connected_component","pop","spliceUtil","item","indexOf","inflate","parse","pako","Base64","atob","to","enabledExperimentalFeatures","useExperimentalFeature","featureName","vars","location","href","replace","useExperimentalFeatures","split","TinyQueue","arguments","compare","defaultCompare","TinyQueue_classCallCheck","reheapify","_down","_up","top","bottom","pos","parent","current","halfLength","left","best","right","b","analyzeGraph","_this","optimize","nodeUnion","Set","nodeIn","nodeOut","add","nodeUnionArray","Array","from","nodeLookup","graphData","nodes","filter","elem","id","childProvides","hasSources","infiniteSource","containedItems","machine","allowedIn","allowedOut","nodeOutWithSets","map","componentsList","superNodeGraphLookup","singleToGroupNodeLookup","superNodeGraphLookupInflated","lookupArray","list","derivedGraphOutgoing","ids","thisNode","derivedGraphAccessor","thisId","derivedGraphIncoming","immutableDerivedGraphIncoming","myTinyQueue","concat","_toConsumableArray","size","providedThroughput","itemLookup","parentAccessor","state","recipe","icon","efficiency","itemThroughPut","itemsPerMinute","internalError","workaroundHack","rec","log","itemIconLookup","links","link","tempIndex","forceOverwritable","_loop","thisNodeInflated","outgoing","nodeGroupSource","nodeGroupTarget","origin","targets","nodeGroupSourceThroughput","throughput","nodeSpeed","instance","speed","overclock","provided","purity","fetchedPurity","purities","actualPurity","quantity","time","power","inputs","maxThroughput","source","_defineProperty","optimumOverclock","max","actual","resources","providedSet","provideRaw","provide","maxItemsPerSecLimiter","calculatedItemPerSecond","reconstructionMultiplier","itemPerSec","providedItem","resourceCount","localThroughput","itemid","quantityPerInfinite","timePerInfinite","missing","efficiencies","Infinity","overclocks","throughputWithoutOverclock","inp","providedQuantity","bestOverclock","ceil","has","resourceThroughputNeeded","calculatedThroughput","maxThroughputPerItem","totalItemThroughput","totalLinkThroughput","totalItemThroughputByItem","linkPairs","outgoingNode","sources","target","foundLink","localItemThroughput","q","e","tmp","reduce","sort","t1","t2","processingType","remainingItemProcessing","remainingLinkPairs","pair","limitedSpeed","fraction","itemsUsed","itemRaw","itemPerSecBeforeBeltLimiting","limitedItemPerSecByBelt","beltMaxForThisEntry","loopedNodes","itemPerNode","resultantResource","nodeInitial","initialItemPerSec","initialNode","previousOutput","outputIterator","_loop2","visitedNodes","_loop3","theseResources","outNode","delta","v","_ret","graphActions_typeof","visit","nodeId","linkSpeed","totalItems","outerNode","provideByItem","thisProvide","totalCalculated","localModifier","propagateNodeToEdgesRevised","delete","editEfficiencyArc","updateGraph","simulation","graphNodesGroup","graphLinksGroup","_this2","incoming","input_slots","output_slots","open_in_slots","open_out_slot","recalculateStorageContainers","drag","d3","clickDistance","on","debug","graphSvg","shiftHeld","mouseDragSource","active","alphaTarget","restart","wasFixed","fx","fy","dragLine","classed","attr","y","svgGroup","wasMoved","mouseOverNode","addPath","snapToGrid","graphNodesData","selectAll","graphNodesEnter","enter","append","wheelZoomCalculation","stopImmediatePropagation","node_clicked","remove_select_from_nodes","node_mouse_over","node_mouse_out","node_mouse_down","node_mouse_up","exit","remove","addEfficiencyArc","addNodeImage","insertNodeOverclock","insertNodeTier","insertComponents","merge","graphLinksData","graphLinksEnter","linkFullObject","insertEdgeLabel","pathMouseClick","handleTick","force","callback","deselect_path_and_nodes","selectedPath","selectedNode","k","alpha","calculateLabelPositions","each","vx","edgeActions_toConsumableArray","globalProvideMap","reverseTraversalStack","combinedProvides","combinedProvidesSource","containedItemsMap","allowed","nodeGroup","propagateNodeToEdgesReversed","passedThis","sourceChecker","targetChecker","specialSource","specialTarget","mergerTarget","mergerSource","targetSlotsUsed","error","path_type","path1","path2","rank","upgrades","path","newEdge","upgradeTypes","usedOut","usedIn","updateGraphHelper","removePath","sharedItems","parentElement","link_label","select","pathLength","getTotalLength","point","getPointAtLength","updateNodeTierExternal","edgeThis","definedColor","linkClass","style","text","previouslySelected","datum","shiftKey","sourceId","percentage_metric","offset","endOffset","endOffsetRaw","percentage","innerRadius","outerRadius","arc","startAngle","PI","endAngle","overClockCalculation","perc","g","updateAllOverclockCalculations","updateOverclock","overclockOverride","selectedElem","roughEstimate","deltaY","textElement","updateNodeTier","machine_version","representation","forceUpdateComponentLabel","elementsToUpdate","itemAccessor","allowedInRemaining","flat","element","fetchRemainingIn","findItem","outputtedItems","remaining","findSuitableSource","allowedOutRemaining","fetchRemainingOut","outputtedItemsIn","findSuitableTarget","nodeThis","containedItem","combinedSum","nodeClass","el","backgroundText","tspan","gEl","svgKeyDown","document","activeElement","nodeName","pressedKey","keyCode","appendMarkerAttributes","marker","GraphSvg","GraphSvg_classCallCheck","GraphSvg_getPrototypeOf","GraphSvg_defineProperty","GraphSvg_assertThisInitialized","nodeData","zoomData","parseSvg","viewCenter","bodyEl","getElementById","width","clientWidth","height","clientHeight","scaleX","translateX","scaleY","translateY","add_node","inputSvg","transition","duration","zoom_handler","transform","vy","GraphSvg_toConsumableArray","Number","NEGATIVE_INFINITY","graphObjects","zoom_actions","scaleExtent","defs","feMerge","distance","strength","radius","initialX","initialY","svg","clearGraphDataRaw","createGraph","compressedData","satisgraphtory","version","playerData","secret","btoa","deflate","Promise","resolve","reject","fetch","method","headers","Content-Type","body","then","response","json","uri","resp","encodeURIComponent","catch","message","saveHash","compressGraphData","loadGraphData","coreGraphData","analyze","prevProps","prevState","snapshot","ClickAwayListenerV2","ClickAwayListenerV2_classCallCheck","ClickAwayListenerV2_possibleConstructorReturn","ClickAwayListenerV2_getPrototypeOf","windowOnClobber","clobberList","clobberedElement","onClickAway","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","querySelectorAll","iterator","next","done","addEventListener","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeEventListener","index_es","children","propTypes","PropTypes","isRequired","string","func","SidebarButton","SidebarButton_classCallCheck","SidebarButton_getPrototypeOf","SidebarButton_defineProperty","SidebarButton_assertThisInitialized","event","anchorEl","currentTarget","label","appObject","items","Tooltip_default","tooltip","placement","title","src","tooltipIconFirst","tooltipIcon","tooltipText","MenuItem_default","onClick","machine_nodes","machine_node","node1","node2","machine_class","addNode","dict","handleClose","alt","itemListIcon","grow","_this3","open","Boolean","listItems","Paper_default","paper","Button_default","aria-owns","aria-haspopup","handleMenu","button","RemoveCircle_default","AddCircleOutline_default","Popper_default","popper","_ref","TransitionProps","Grow_default","_extends","transformOrigin","maxHeightPaper","components_ClickAwayListenerV2","clickAwayClose","MenuList_default","flex","justifyContent","padding","margin","spacing","unit","display","paddingLeft","zIndex","paddingRight","fontSize","overflowY","maxHeight","PopupDialog","PopupDialog_classCallCheck","PopupDialog_possibleConstructorReturn","PopupDialog_getPrototypeOf","contents","handleModalClose","Dialog_default","modal","onClose","DialogTitle_default","DialogContent_default","DialogActions_default","color","FabPopup","FabPopup_classCallCheck","FabPopup_getPrototypeOf","FabPopup_assertThisInitialized","dontShow","checked","localStorage","setItem","modalOpen","getItem","Fab_default","aria-label","fab","Help_default","components_PopupDialog","FormControlLabel_default","control","Checkbox_default","onChange","handleDontShow","position","SidebarPopup","SidebarPopup_classCallCheck","SidebarPopup_possibleConstructorReturn","SidebarPopup_getPrototypeOf","Icon","ListItem_default","ListItemIcon_default","icons","ListItemText_default","primary","marginRight","InnerNestedSidebarButton","InnerNestedSidebarButton_classCallCheck","InnerNestedSidebarButton_getPrototypeOf","InnerNestedSidebarButton_defineProperty","InnerNestedSidebarButton_assertThisInitialized","lastTarget","selectedButton","setTimeout","resource","machineIcon","selected","InnerNestedSidebarButton_extends","NestedSidebarButton","NestedSidebarButton_classCallCheck","NestedSidebarButton_getPrototypeOf","NestedSidebarButton_defineProperty","NestedSidebarButton_assertThisInitialized","NestedSidebarButton_extends","ClickAwayListener_default","returnDivList","components_InnerNestedSidebarButton","SimpleSidebarButton","SimpleSidebarButton_classCallCheck","SimpleSidebarButton_getPrototypeOf","SimpleSidebarButton_defineProperty","SimpleSidebarButton_assertThisInitialized","SimpleSidebarButton_extends","SidebarPanel","SidebarPanel_classCallCheck","SidebarPanel_getPrototypeOf","SidebarPanel_defineProperty","SidebarPanel_assertThisInitialized","options","getAttribute","selectedDrives","querySelector","showAllLines","playerUnlock","player_unlock","Typography_default","variant","handleCheckboxChange","checkbox","checkboxLabel","showHideLines","fullWidth","resetCamera","Replay_default","flexDirection","flexShrink","textField","paddingBottom","marginTop","textAlign","chips","flexWrap","chip","paddingTop","fontFamily","fontWeight","ClearButton","ClearButton_classCallCheck","ClearButton_getPrototypeOf","ClearButton_defineProperty","ClearButton_assertThisInitialized","handleModalOpen","Delete_default","dialogContainer","dialogButton","clearGraphData","ShareButton","ShareButton_classCallCheck","ShareButton_getPrototypeOf","ShareButton_defineProperty","ShareButton_assertThisInitialized","uploadDataWithResponse","port","url","protocol","hostname","pathname","join","Share_default","TextField_default","spellCheck","inputRef","ref","inlineDialogButton","execCommand","statusMessage","FileCopy_default","MenuProps","PaperProps","ITEM_HEIGHT","SelectorPanel","SelectorPanel_classCallCheck","SelectorPanel_getPrototypeOf","SelectorPanel_defineProperty","SelectorPanel_assertThisInitialized","wait","immediate","timeout","context","args","callNow","clearTimeout","sliderValue","el2","debounce","update","dummy","debouncedUpdate","infiniteSourceEligible","allowedInClobbered","updateContained","debouncedUpdateGraph","usedSet","contained","it","open_out_slots","SelectorPanel_toConsumableArray","selectedSource","hidden","itemMap","localeCompare","IconButton_default","downgrade","ArrowDownward_default","upgrade","ArrowUpward_default","Slider_default","slider","step","changeSlider","hasInfiniteSource","FormControl_default","InputLabel_default","htmlFor","Select_default","multiple","itemInput","handleChange","input","Input_default","renderValue","Chip_default","formGroup","handleTextChangeQuantity","type","inputProps","textMiddle","handleTextChangeSeconds","formControl","maxWidth","drawerWidth","minWidth","alignItems","marginBottom","schemaBuilder","lf","schema","createTable","addColumn","Type","INTEGER","addPrimaryKey","BOOLEAN","STRING","addNullable","OBJECT","getTableEntryIdByName","table","db","tableRef","getSchema","where","eq","exec","rows","getTableEntries","baseUrl","parseRecipeIngredients","recipes","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","sent","abrupt","stop","_x","generateSpringList","_ref2","_callee2","ret","types","machine_type_miner","machine_type_container","spring_type_miner","spring_type_container","purity_types","ore","structure","container","_context2","item_id","machine_class_id","spring_type_id","_x2","machine_version_id","plural","node_type_id","player_unlock_id","firebaseData","createMuiTheme","typography","useNextVariants","palette","main","secondary","contrastText","themeName","App","App_classCallCheck","App_possibleConstructorReturn","App_getPrototypeOf","loaded","fbdb","once","results","val","startingTable","starting","globalStructure","delegateYield","refKeysToProcess","refKey","tableName","recursiveFind","str","endsWith","getRefkeyTableFireBase","functionToApply","isArray","App_typeof","row","rowKey","refId","associatedData","possibleData","rowValue","id_name","startsWith","Image","ReactGA","search","reload","hash","decodeURIComponent","responseRaw","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","generate","cb","generateRecursiveStructureFireBase","wrappedFunction","isLoaded","_this4","recipesByMachineClass","machineClassPlural","thisList","components_SidebarButton","springByClass","purity_type","spring","spring_type","components_SimpleSidebarButton","_this5","generateUnlocksList","components_NestedSidebarButton","components_Loader","CssBaseline_default","styles","AppBar_default","appBar","Toolbar_default","logo","OfflineBolt_default","SettingsInputComponent_default","components_ShareButton","components_ClearButton","components_FabPopup","components_SelectorPanel","Drawer_default","drawer","drawerPaper","List_default","drawerTitle","generateNodeList","generateContainerList","Divider_default","components_SidebarPanel","components_SidebarPopup","InfoIcon","WarningIcon","content","components_GraphSvg","flexGrow","flexBasis","toolbar","mixins","pathIcon","pathText","clearButton","ReactDOM","render","components_App"],"mappings":"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","file":"main.1d22a0fddd9eec8a870b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([463,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport {withStyles} from '@material-ui/core';\nimport * as d3 from 'd3';\n\nconst loading = [\n    'Loading...',\n    'Burning Coal...',\n    'Deleting Steam Keys...',\n    'Exploiting Resources...',\n    'Petting Lizard Doggo...',\n    'Adding Pipes...',\n    'Adding Mana...',\n    'Spilling Coffee...',\n    'Becoming A Goat...',\n    'Charging Batteries...'\n];\n\nexport const styles = theme => ({\n    root: {},\n});\n\nclass Loader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidUpdate(previousProps, previousState) {\n        if (this.props.ready === true && !previousProps.ready) {\n            this.props.parentState.setState({isReady: true}, () => {\n                console.info('App set as \"Ready\"');\n            });\n        }\n    }\n\n    render() {\n        const {ready, parentState, classes} = this.props;\n        return (\n            <React.Fragment>\n                <div className=\"loader-spinner\"/>\n                <div className=\"align-loading\">\n                    <div\n                        className='loading-text align-loading-text'>{loading[Math.floor(Math.random() * loading.length)]}</div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(Loader);","const constants = {\n    lineObjectClass: 'line-object',\n    lineParentObjectClass: 'lineParentObjectClass',\n    lineHitboxObjectClass: 'line-object-hitbox',\n    lineStylingPathClass: 'line-object-path-styled',\n    lineStylingArrowClass: 'line-object-arrow-styled',\n    lineStylingFullClass: 'line-object-combined-styled',\n    overclockedTextClass: 'overclockedTextClass',\n    nodeVersionTextClass: 'nodeVersionTextClass',\n    nodeRequirementsIconClass: 'nodeRequirementsIconClass',\n    nodeSurplusIconClass: 'nodeSurplusIconClass',\n    nodeRequirementsSubIconClass: 'nodeRequirementsSubIconClass',\n    nodeProducesClass: 'nodeProducesClass',\n    nodeSurplusClass: 'nodeSurplusClass',\n    nodeProducesPerMinText: 'nodeProducesPerMinText',\n    nodeLimitingThroughputText: 'nodeLimitingThroughputText',\n    nodeLimitingThroughputClass: 'nodeLimitingThroughputClass',\n\n    lineLimitedThroughputText: 'lineLimitedThroughputText',\n    lineLimitedThroughputClass: 'lineLimitedThroughputClass',\n\n    selectedClass: 'selected',\n    selectedNodeClass: 'selected-node',\n    selectedLineClass: 'selected-line',\n    connectableClass: 'potential-connectable-node',\n    graphNodeClass: 'graphMachineNode',\n    graphNodeHoverClass: 'graphNodeHoverClass',\n    overclockedArcClass: 'overclockedArcClass',\n    graphNodeGrabbedClass: 'graphNodeGrabbedClass',\n    graphNodeIdBase: 'graph-svg-node-',\n    svgGraphClass: 'graph-svg',\n    activeEditId: 'active-editing',\n    BACKSPACE_KEY: 8,\n    DELETE_KEY: 46,\n    ENTER_KEY: 13,\n    nodeRadius: 50\n};\n\nexport default constants;","import {addPath} from './edgeActions';\nimport * as d3 from 'd3';\nimport constants from './constants';\n\n// V2 functions\nexport const drag_start = function (d, simulation, graphSvg) {\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n        //ignore drag...it's probably not important.\n        graphSvg.setState({mouseDragSource: d});\n    } else {\n        if (!d3.event.active)\n            simulation.alphaTarget(0.3).restart();\n        graphSvg.setState({wasFixed: d.fx !== null && d.fy != null});\n    }\n};\n\n\n//make sure you can't drag the circle outside the box\nexport const drag_drag = (d, graphSvg) => {\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n        //ignore drag...it's probably not important.\n        graphSvg.dragLine.classed('hidden', false).attr('d', 'M' + d.x + ',' + d.y + 'L' +\n            d3.mouse(graphSvg.svgGroup.node())[0] + ',' + d3.mouse(graphSvg.svgGroup.node())[1]);\n    } else {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n        graphSvg.setState({wasMoved: true});\n    }\n};\n\nconst round_up = function (x, factor) {\n    return Math.round(x / factor) * factor;\n};\n\nexport const drag_end = (d, graphSvg, simulation) => {\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n        if (graphSvg.state.mouseOverNode) {\n            const source = graphSvg.state.mouseDragSource;\n            const target = graphSvg.state.mouseOverNode;\n            addPath.call(this, graphSvg, graphSvg.state.mouseDragSource, graphSvg.state.mouseOverNode);\n        }\n        graphSvg.dragLine.classed('hidden', true).attr('d', 'M0,0L0,0');\n    } else {\n        if (graphSvg.state && graphSvg.state.wasMoved) {\n            if (graphSvg.state.snapToGrid) {\n                if (d.fx) {\n                    d.fx = round_up(d.fx, 100);\n                    d.fy = round_up(d.fy, 100);\n                }\n            }\n            d.x = d.fx;\n            d.y = d.fy;\n        } else if (graphSvg.state && !graphSvg.state.wasFixed) {\n            d.fx = null;\n            d.fy = null;\n        }\n    }\n    d3.select('.' + constants.graphNodeGrabbedClass).classed(constants.graphNodeGrabbedClass, false);\n    graphSvg.setState({shiftHeld: false, wasMoved: false, wasFixed: false});\n};","export const strongly_connected_components = function (graph) {\n    console.error(graph);\n    throw new Error('JKNFDKJNFDJN');\n    const index_counter = ['0'];\n    const stack = [];\n    const lowlink = {};\n    const index = {};\n    const result = [];\n\n    const _strong_connect = function (node) {\n        index[node] = index_counter[0];\n        lowlink[node] = index_counter[0];\n        index_counter[0] = (parseInt(index_counter[0]) + 1).toString();\n        stack.push(node);\n\n        const successors = graph[node] || [];\n        successors.forEach(successor => {\n            if (!Object.keys(index).includes(successor)) {\n                _strong_connect(successor);\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node]), parseInt(lowlink[successor])).toString();\n            } else if (stack.includes(successor)) {\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink) + ' ' + JSON.stringify(index));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node]), parseInt(index[successor])).toString();\n            }\n        });\n\n        if (lowlink[node] === index[node]) {\n            const connected_component = [];\n            /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n            while (true) {\n                const successor = stack.pop();\n                connected_component.push(successor);\n                if (successor === node) break;\n            }\n            result.push(connected_component.slice());\n        }\n    };\n    Object.keys(graph).forEach(node => {\n        if (!Object.keys(index).includes(node)) {\n            _strong_connect(node);\n        }\n    });\n\n    return result;\n};\n\nconst remove_node = function (G, target) {\n    delete G[target];\n    const values = Object.keys(G).map(key => G[key]);\n    values.forEach(value => {\n        value.delete(target);\n    });\n};\n\nconst subgraphs = function (G, vertices) {\n    const returnMap = {};\n    vertices.forEach(v => {\n        const gvarray = Array.from(G[v]);\n        const filtered = gvarray.filter(elem => vertices.has(elem));\n\n\n        returnMap[v] = new Set(filtered);\n    });\n    return returnMap;\n};\n\nexport const strongly_connected_components_standalone = function (graph) {\n    const index_counter = ['0'];\n    const stack = [];\n    const lowlink = {};\n    const index = {};\n    const result = [];\n\n    const _strong_connect = function (node) {\n        index[node] = index_counter[0];\n        lowlink[node] = index_counter[0];\n        index_counter[0] = (parseInt(index_counter[0], 10) + 1).toString();\n        stack.push(node);\n\n        const successors = graph[node] || [];\n        successors.forEach(successor => {\n            if (!Object.keys(index).includes(successor)) {\n                _strong_connect(successor);\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node], 10), parseInt(lowlink[successor], 10)).toString();\n            } else if (stack.includes(successor)) {\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink) + ' ' + JSON.stringify(index));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node], 10), parseInt(index[successor], 10)).toString();\n            }\n        });\n\n        if (lowlink[node] === index[node]) {\n            const connected_component = [];\n            /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n            while (true) {\n                const successor = stack.pop();\n                connected_component.push(successor);\n                if (successor === node) break;\n            }\n            result.push(connected_component.slice());\n        }\n    };\n    Object.keys(graph).forEach(node => {\n        if (!Object.keys(index).includes(node)) {\n            _strong_connect(node);\n        }\n    });\n\n    return result;\n};\n\nexport const simple_cycle = function (Ginput) {\n    const _unblock = function (thisnode, blocked, B) {\n        const stack = new Set([thisnode]);\n        while (stack.size) {\n            const node = stack.values().next().value;\n            stack.delete(node);\n            if (blocked.has(node)) {\n                blocked.delete(node);\n                if (!B[node]) {\n                    B[node] = new Set();\n                }\n                B[node].forEach(elem => {\n                    stack.add(elem);\n                });\n                B[node].clear();\n            }\n        }\n    };\n\n\n    const G = {};\n    Object.keys(Ginput).forEach(key => {\n        G[key] = new Set(Ginput[key].map(elem => elem.toString()));\n    });\n\n    const sccs = strongly_connected_components(G);\n    const returnValues = [];\n    while (sccs.length) {\n        const scc = sccs.pop();\n        const startnode = scc.pop();\n        const path = [startnode];\n        const blocked = new Set();\n        const closed = new Set();\n        blocked.add(startnode);\n        const B = {};\n        const stack = [[startnode, Array.from(G[startnode] || new Set())]];\n        while (stack.length) {\n            const [thisnode, nbrs] = stack[stack.length - 1];\n            if (nbrs && nbrs.length) {\n                const nextnode = nbrs.pop();\n                if (nextnode === startnode) {\n                    returnValues.push(path.slice().map(elem => parseInt(elem)));\n                    path.forEach(node => {\n                        closed.add(node);\n                    });\n                } else if (!blocked.has(nextnode)) {\n                    path.push(nextnode);\n                    stack.push([nextnode, Array.from(G[nextnode] || new Set())]);\n                    closed.delete(nextnode);\n                    blocked.add(nextnode);\n                }\n            } else {\n                if (closed.has(thisnode)) {\n                    _unblock(thisnode, blocked, B);\n                } else {\n                    (G[thisnode] || []).forEach(nbr => {\n                        B[nbr] = B[nbr] || new Set();\n                        if (!B[nbr].has(nbr)) {\n                            B[nbr].add(thisnode);\n                        }\n                    });\n                }\n\n                stack.pop();\n                path.pop();\n            }\n        }\n\n        remove_node(G, startnode);\n        const H = subgraphs(G, new Set(scc));\n        const toAdd = strongly_connected_components(H);\n        toAdd.forEach(elem => {\n            sccs.push(elem);\n        });\n    }\n    return returnValues;\n};\n\n// how to remove dups\n\n//to generate the specific indexes\n// pos = myArray.map(function(e) { return e.hello; }).indexOf('stevie');\n\n\n// var a = [1, 2, 3], b = [101, 2, 1, 10];\n// var c = a.concat(b);\n// var d = c.filter(function (item, pos) {return c.indexOf(item) == pos});","import {parse} from 'flatted/esm';\nimport pako from 'pako';\nimport Base64 from 'Base64';\n\nexport const spliceUtil = function (object, item) {\n    if (object.indexOf(item) === -1) return;\n    object.splice(object.indexOf(item), 1);\n};\n\nconst inflate = (data) => parse(pako.inflate(Base64.atob(data), {to: 'string'}));\n\nexport const saveHash = (data) => {\n    if (process.env.NODE_ENV && process.env.NODE_ENV !== 'production') {\n        console.log(data.data);\n    }\n    return new Promise((resolve, reject) => {\n        return fetch('https://api.myjson.com/bins/', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n            },\n            body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n        }).then(response => response.json()).then(function (response) {\n            if (response.uri) {\n                const resp = response.uri.replace('https:\\/\\/api.myjson.com/bins//', '');\n                return resolve(encodeURIComponent(Base64.btoa(resp)));\n            }\n            throw new Error(\"Invalid save\");\n        })\n            .catch(function (error) {\n                console.log('Fetch error:', error.message);\n                reject(error);\n            });\n    })\n};\n\nconst data = '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';\n\nexport const loadHash = () => {\n    return new Promise((resolve, reject) => {\n\n        if (window.location.hash) {\n            let location = null;\n            if (window.location.hash.indexOf('?') === -1) {\n                location = window.location.hash.slice(1);\n            } else {\n                location = window.location.hash.slice(1, window.location.hash.indexOf('?'));\n            }\n\n            return fetch('https://api.myjson.com/bins//' + Base64.atob(decodeURIComponent(location)), {\n                method: \"GET\"\n            }).then(response => response.json()).then(function (responseRaw) {\n                resolve(inflate(responseRaw.data));\n            })\n                .catch(function (error) {\n                    console.log('Fetch error:', error.message);\n                    resolve(inflate(data));\n                });\n        } else {\n            resolve(inflate(data));\n        }\n    })\n};\n\nexport const rebuildQueryParams = () => {\n    const vars = {};\n    window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        vars[key] = value;\n    });\n    if (Object.keys(vars).length) {\n        return '?' + Object.keys(vars).map(k => k + '=' + vars[k]).join('&');\n    }\n\n    return '';\n};\n\nconst enabledExperimentalFeatures = ['stg', 'opt'];\n\nexport const useExperimentalFeature = (featureName) => {\n    const vars = {};\n    window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        vars[key] = value;\n    });\n    vars.useExperimentalFeatures = vars.useExperimentalFeatures || '';\n    return (vars.useExperimentalFeatures || '').split(',').includes(featureName) || vars.useExperimentalFeatures === 'all' || enabledExperimentalFeatures.includes(featureName)\n};\n","import {spliceUtil} from \"./GraphSvg/util\";\n\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        this.reheapify();\n    }\n\n    reheapify() {\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    size() {\n        return this.data.length;\n    }\n\n    remove(item) {\n        spliceUtil(this.data, item);\n        this.length = this.data.length;\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}","import constants from './constants';\nimport * as d3 from 'd3';\nimport {\n    addEfficiencyArc,\n    addNodeImage,\n    editEfficiencyArc,\n    insertComponents,\n    insertNodeOverclock,\n    insertNodeTier,\n    node_clicked,\n    node_mouse_down,\n    node_mouse_out,\n    node_mouse_over,\n    node_mouse_up,\n    remove_select_from_nodes,\n    wheelZoomCalculation\n} from './nodeActions';\nimport {drag_drag, drag_end, drag_start} from './mouseEvents';\nimport {calculateLabelPositions, insertEdgeLabel, pathMouseClick, recalculateStorageContainers} from './edgeActions';\nimport {strongly_connected_components_standalone} from './algorithms';\nimport TinyQueue from '../TinyQueue';\nimport {useExperimentalFeature} from \"./util\";\n\n\nexport const analyzeGraph = function (optimize=false) {\n    const nodeUnion = new Set(Object.keys(this.nodeIn));\n    Object.keys(this.nodeOut).forEach(node => nodeUnion.add(node));\n    const nodeUnionArray = Array.from(nodeUnion);\n\n    const nodeLookup = {};\n\n    nodeUnionArray.forEach((value, index) => {\n        nodeUnionArray[index] = this.graphData.nodes.filter(elem => elem.id.toString() === value)[0];\n        nodeLookup[nodeUnionArray[index].id] = nodeUnionArray[index];\n        nodeUnionArray[index].childProvides = [];\n        nodeUnionArray[index].hasSources = new Set();\n        if (!nodeUnionArray[index].infiniteSource) {\n            nodeUnionArray[index].containedItems = [];\n        }\n\n        if (nodeUnionArray[index].machine.name !== 'Container' && nodeUnionArray[index].machine.name !== 'Logistic') {\n        } else {\n            nodeUnionArray[index].allowedIn = [];\n            if (!nodeUnionArray[index].infiniteSource) {\n                nodeUnionArray[index].allowedOut = [];\n            }\n\n        }\n    });\n\n    const nodeOutWithSets = {};\n    Object.keys(this.nodeOut).forEach(key => {\n        const value = this.nodeOut[key];\n        nodeOutWithSets[key] = new Set(value.map(elem => elem.id.toString()));\n    });\n\n    const componentsList = strongly_connected_components_standalone(nodeOutWithSets);\n    const superNodeGraphLookup = {};\n    this.singleToGroupNodeLookup = {};\n    const superNodeGraphLookupInflated = {};\n    const lookupArray = {};\n    componentsList.forEach((list, index) => {\n        superNodeGraphLookup[index] = list;\n        (list  || []).forEach(item => {\n            this.singleToGroupNodeLookup[item] = index\n        });\n\n        superNodeGraphLookupInflated[index] = list.map(id => nodeLookup[id]);\n        list.forEach(item => {\n            lookupArray[item] = index;\n        });\n    });\n    const derivedGraphOutgoing = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphOutgoing[thisNode] = derivedGraphOutgoing[thisNode] || new Set();\n        const derivedGraphAccessor = derivedGraphOutgoing[thisNode];\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n            derivedGraphAccessor.add(thisId);\n        });\n    });\n    const derivedGraphIncoming = {};\n    const immutableDerivedGraphIncoming = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphIncoming[thisNode] = derivedGraphIncoming[thisNode] || new Set();\n        immutableDerivedGraphIncoming[thisNode] = immutableDerivedGraphIncoming[thisNode] || new Set();\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n\n            if (!derivedGraphIncoming[thisId]) {\n                derivedGraphIncoming[thisId] = new Set();\n                immutableDerivedGraphIncoming[thisId] = new Set();\n            }\n\n            const derivedGraphAccessor = derivedGraphIncoming[thisId];\n            derivedGraphAccessor.add(thisNode);\n            immutableDerivedGraphIncoming[thisId].add(thisNode);\n        });\n    });\n    const myTinyQueue = new TinyQueue(Array.from(new Set([...Object.keys(derivedGraphOutgoing), ...Object.keys(derivedGraphIncoming)])), (a, b) => {\n        return (derivedGraphIncoming[a] || []).size - (derivedGraphIncoming[b] || []).size;\n    });\n\n    const providedThroughput = {};\n\n    const itemLookup = {};\n\n    this.props.parentAccessor.state.recipe.item.forEach(item => {\n        itemLookup[item.id] = item.icon;\n    });\n\n    this.graphData.nodes.forEach(node => {\n        delete node.efficiency;\n        delete node.itemThroughPut;\n        delete node.itemsPerMinute;\n        delete node.internalError;\n\n        if (node.data && node.data.recipe && !node.data.node && this.props.parentAccessor.state && this.props.parentAccessor.state.recipe && this.props.parentAccessor.state.recipe.recipe) {\n            if (useExperimentalFeature('forceRecalculate')) {\n                const workaroundHack = this.props.parentAccessor.state.recipe.recipe.filter(rec => rec.id === node.data.recipe.id);\n                if (workaroundHack.length > 0) {\n                    node.data.recipe = workaroundHack[0];\n                }\n                console.log('Replaced recipe', workaroundHack[0]);\n            }\n        }\n\n        node.itemIconLookup = itemLookup;\n    });\n\n    this.graphData.links.forEach(link => {\n        delete link.itemThroughPut;\n        delete link.tempIndex;\n        delete link.forceOverwritable;\n        link.itemIconLookup = itemLookup;\n    });\n\n\n    while (myTinyQueue.size()) {\n        const node = myTinyQueue.pop();\n\n        const thisNodeInflated = superNodeGraphLookupInflated[node];\n        const outgoing = Array.from(derivedGraphOutgoing[node] || new Set());\n        const outgoingInflated = outgoing.map(item => superNodeGraphLookupInflated[item]);\n\n        const propagateNodeToEdgesRevised = (nodeGroupSource, nodeGroupTarget, origin, targets) => {\n            const nodeGroupSourceThroughput = [];\n            if (nodeGroupSource.length === 1) {\n                const node = nodeGroupSource[0];\n                let throughput = null;\n                let efficiency = null;\n\n                const nodeSpeed = node.instance.speed / 100;\n                const overclock = node.overclock / 100;\n\n                const provided = providedThroughput[node.id] || [];\n\n                if (node.data.node) {\n                    // this is a purity calculation\n                    const recipe = node.data.recipe;\n                    const purity = node.data.purity;\n                    const fetchedPurity = recipe.purities.filter(item => item.name === purity);\n\n                    if (fetchedPurity.length !== 1) {\n                        throw new Error('Trying to get purity', purity, 'wtf?');\n                    }\n                    const actualPurity = fetchedPurity[0];\n\n                    throughput = {\n                        speed: nodeSpeed,\n                        overclock,\n                        quantity: actualPurity.quantity,\n                        item: recipe.item.id,\n                        time: 60,\n                        power: node.instance.power,\n                        inputs: []\n                    };\n                    efficiency = 1;\n\n                    const maxThroughput = (throughput.quantity / throughput.time) * 60 * node.instance.speed / 100 * throughput.overclock;\n                    nodeGroupSourceThroughput.push({throughput, efficiency, source: origin});\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = efficiency;\n                        node.itemsPerMinute = {[throughput.item]: maxThroughput};\n                        node.optimumOverclock = 2.5;\n                        // Comment this out if we should remove the display from nodes\n                        node.itemThroughPut = {[throughput.item]: {max: maxThroughput, actual: maxThroughput}};\n                    });\n                } else if (node.machine.name === 'Logistic' && node.instance.name === 'Splitter') {\n                    const resources = {};\n                    const providedSet = new Set();\n                    provided.forEach(provideRaw => {\n                        const provide = JSON.parse(JSON.stringify(provideRaw));\n\n                        //TODO: change the 3 to the actual number of links out\n                        provide.maxItemsPerSecLimiter = provide.calculatedItemPerSecond;\n                        // / ((this.nodeOut[nodeGroupSource[0].id] || []).length || 1);\n\n                        provide.reconstructionMultiplier = ((this.nodeOut[nodeGroupSource[0].id] || []).length || 1);\n\n                        const i = provide.throughput.item;\n                        providedSet.add(i);\n                        const itemPerSec = provide.calculatedItemPerSecond;\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = 1;\n                        node.itemsPerMinute = {};\n                        node.itemThroughPut = {};\n                        providedSet.forEach(providedItem => {\n                            const resourceCount = resources[providedItem];\n                            node.itemsPerMinute[providedItem] = resourceCount;\n                            node.itemThroughPut[providedItem] = {max: resourceCount, actual: resourceCount};\n                        });\n                    });\n                } else if (node.machine.name === 'Logistic' && node.instance.name === 'Merger') {\n                    const resources = {};\n                    const providedSet = new Set();\n                    provided.forEach(provideRaw => {\n                        const provide = JSON.parse(JSON.stringify(provideRaw));\n                        const i = provide.throughput.item;\n                        providedSet.add(i);\n                        const itemPerSec = provide.calculatedItemPerSecond;\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = 1;\n                        node.itemsPerMinute = {};\n                        node.itemThroughPut = {};\n                        providedSet.forEach(providedItem => {\n                            const resourceCount = resources[providedItem];\n                            node.itemsPerMinute[providedItem] = resourceCount;\n                            node.itemThroughPut[providedItem] = {max: resourceCount, actual: resourceCount};\n                        });\n                    });\n                } else if (node.machine.name === 'Container') {\n                    if (node.infiniteSource) {\n                        let maxThroughput = 0;\n                        let localThroughput = 0;\n                        (node.allowedOut || []).forEach(itemid => {\n                            throughput = {\n                                speed: 1,\n                                overclock: 1,\n                                quantity: node.quantityPerInfinite || 0,\n                                item: itemid,\n                                time: node.timePerInfinite || 1,\n                                power: 0,\n                                inputs: []\n                            };\n                            efficiency = 1;\n\n                            localThroughput = (throughput.quantity / throughput.time) * 60;\n                            maxThroughput += localThroughput;\n                            nodeGroupSourceThroughput.push({throughput, efficiency, source: origin});\n                        });\n\n                        const itemsPerMinute = {};\n                        const itemThroughPut = {};\n                        nodeGroupSourceThroughput.forEach(item => {\n                            itemThroughPut[item.throughput.item] = {max: localThroughput, actual: localThroughput};\n                            itemsPerMinute[item.throughput.item] = localThroughput;\n                        });\n\n                        nodeGroupSource.forEach(node => {\n                            node.efficiency = efficiency;\n                            node.itemsPerMinute = itemsPerMinute;\n                            node.optimumOverclock = 1.0;\n                            // Comment this out if we should remove the display from nodes\n                            node.itemThroughPut = itemThroughPut;\n                        });\n                    } else {\n                        const resources = {};\n                        const providedSet = new Set();\n                        provided.forEach(provide => {\n                            const i = provide.throughput.item;\n                            providedSet.add(i);\n                            const itemPerSec = provide.calculatedItemPerSecond;\n                            resources[i] = resources[i] || 0;\n                            resources[i] += itemPerSec * 60;\n                            nodeGroupSourceThroughput.push(provide);\n                        });\n\n                        nodeGroupSource.forEach(node => {\n                            node.efficiency = 1;\n                            node.itemsPerMinute = {};\n                            providedSet.forEach(providedItem => {\n                                const resourceCount = resources[providedItem];\n                                node.itemsPerMinute[providedItem] = resourceCount;\n                                node.itemThroughPut = {[providedItem]: {max: resourceCount, actual: resourceCount}};\n                            });\n                        });\n                    }\n                } else {\n                    throughput = {\n                        speed: nodeSpeed,\n                        overclock,\n                        quantity: node.data.recipe.quantity,\n                        item: node.data.recipe.item.id,\n                        time: node.data.recipe.time,\n                        power: node.data.recipe.power,\n                        inputs: node.data.recipe.inputs.map(elem => {\n                            return {item: elem.item.id, quantity: elem.quantity};\n                        })\n                    };\n\n                    const resources = {};\n\n                    const providedSet = new Set();\n\n                    provided.forEach(provide => {\n                        const i = provide.throughput.item;\n\n                        providedSet.add(i);\n\n                        const itemPerSec = provide.calculatedItemPerSecond;\n\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n                    });\n\n                    const missing = new Set();\n                    const efficiencies = [Infinity];\n                    const overclocks = [2.5];\n\n                    const throughputWithoutOverclock = (throughput.quantity / throughput.time) * 60 * node.instance.speed / 100;\n\n                    throughput.inputs.forEach(inp => {\n                        const item = inp.item;\n                        const quantity = inp.quantity;\n                        const providedQuantity = resources[item] || 0;\n                        const bestOverclock = Math.min((providedQuantity / (throughputWithoutOverclock || 1)) * (throughput.quantity / (quantity || 1)), 2.5);\n                        overclocks.push(bestOverclock);\n                    });\n\n                    const optimumOverclock = Math.ceil(Math.min(...overclocks) * 100);\n                    if (optimize) {\n                        throughput.overclock = optimumOverclock / 100;\n                    }\n\n                    const maxThroughput = (throughput.quantity / throughput.time) * 60 * node.instance.speed / 100 * throughput.overclock;\n\n                    throughput.inputs.forEach(inp => {\n                        const item = inp.item;\n                        const quantity = inp.quantity;\n                        const providedQuantity = resources[item] || 0;\n                        if (!providedSet.has(item)) {\n                            missing.add(item);\n                        }\n\n                        const resourceThroughputNeeded = maxThroughput * (quantity / throughput.quantity);\n\n                        const calculatedThroughput = maxThroughput * (Math.min(resourceThroughputNeeded, providedQuantity) / resourceThroughputNeeded);\n                        const maxThroughputPerItem = resourceThroughputNeeded;\n\n                        node.itemThroughPut = node.itemThroughPut || {};\n                        node.itemThroughPut[item] = node.itemThroughPut[item] || {max: 0, actual: 0};\n                        node.itemThroughPut[item].max += maxThroughputPerItem;\n                        node.itemThroughPut[item].actual += providedQuantity;\n\n                        const efficiency = calculatedThroughput / maxThroughput;\n\n                        efficiencies.push(Math.min(1, efficiency));\n                    });\n\n                    if (missing.size > 0) {\n                        efficiency = 0;\n                    } else {\n                        efficiency = Math.min(...efficiencies);\n                    }\n\n                    nodeGroupSourceThroughput.push({throughput, efficiency, source: origin});\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = efficiency;\n                        node.overclock = throughput.overclock * 100;\n                        node.optimumOverclock = optimumOverclock;\n                        node.itemsPerMinute = {[throughput.item]: maxThroughput * efficiency};\n                    });\n                }\n\n                let totalItemThroughput = 0;\n                let totalLinkThroughput = 0;\n                let totalItemThroughputByItem = {};\n\n                let linkPairs = [];\n\n                (derivedGraphOutgoing[origin] || []).forEach(outgoingNode => {\n                    const sources = nodeGroupSource.map(node => node.id);\n                    const targets = superNodeGraphLookupInflated[outgoingNode].map(node => node.id);\n\n                    sources.forEach(source => {\n                        targets.forEach(target => {\n                            const link = this.graphData.links.filter(link => link.source.id === source && link.target.id === target);\n                            let foundLink = null;\n                            if (link && link.length === 1) {\n                                foundLink = link[0];\n                            } else if (link && link.length > 1) {\n                                throw new Error('Too many links found!!!');\n                            } else {\n                                return;\n                            }\n\n                            linkPairs.push({source, target, speed: foundLink.instance.speed, link: foundLink});\n                            totalLinkThroughput += foundLink.instance.speed;\n                        });\n                    });\n                });\n\n                const localItemThroughput = nodeGroupSourceThroughput.map(throughput => {\n\n                    const q = throughput.throughput.quantity;\n                    const t = throughput.throughput.time;\n                    const e = throughput.efficiency;\n                    const o = throughput.throughput.overclock;\n                    const s = throughput.throughput.speed;\n                    const i = throughput.throughput.item;\n\n                    const maxItemsPerSecLimiter = throughput.maxItemsPerSecLimiter === undefined ? Infinity : throughput.maxItemsPerSecLimiter;\n                    const tmp = Math.min(q / t * e * o * s || 0, maxItemsPerSecLimiter);\n\n                    totalItemThroughputByItem[i] = totalItemThroughputByItem[i] || 0;\n                    totalItemThroughputByItem[i] += tmp;\n\n                    return tmp;\n                }).reduce((a, b = 0) => a + b, 0);\n\n                totalItemThroughput += localItemThroughput;\n\n                linkPairs.sort(\n                    (t1, t2) => {\n                        return t1.speed - t2.speed;\n                    }\n                );\n\n                let processingType = 1;\n                if (totalItemThroughput * 60 > totalLinkThroughput) {\n                    // split proportioanly the totalItemThroughput\n                } else {\n                    processingType = 0;\n                    //fill things sequentiually\n                }\n\n\n                let remainingItemProcessing = totalItemThroughput * 60;\n                let remainingLinkPairs = linkPairs.length;\n                linkPairs.forEach(pair => {\n                    const target = pair.target;\n                    const limitedSpeed = pair.speed;\n\n                    providedThroughput[target] = providedThroughput[target] || [];\n                    if (processingType === 1) {\n                        // split everything\n                        // fraction of this belt of ALL belts:\n                        const fraction = limitedSpeed / (totalLinkThroughput);\n                        pair.fraction = fraction;\n                    } else {\n                        if (remainingItemProcessing / remainingLinkPairs > limitedSpeed) {\n                            // there will be residuals\n                            const itemsUsed = limitedSpeed;\n                            remainingItemProcessing -= itemsUsed;\n                            const fraction = limitedSpeed / (totalItemThroughput * 60);\n                            pair.fraction = fraction;\n                        } else {\n                            // no residuals.\n                            const itemsUsed = remainingItemProcessing / remainingLinkPairs;\n                            remainingItemProcessing -= itemsUsed;\n                            const fraction = itemsUsed / (totalItemThroughput * 60);\n                            pair.fraction = fraction;\n                        }\n                    }\n                    remainingLinkPairs -= 1;\n                });\n\n                linkPairs.forEach(pair => {\n                    const source = pair.source;\n                    const target = pair.target;\n                    const speed = pair.speed;\n                    const foundLink = pair.link;\n                    const fraction = pair.fraction || 1;\n                    const limitedSpeed = speed;\n\n                    providedThroughput[target] = providedThroughput[target] || [];\n\n                    nodeGroupSourceThroughput.forEach(itemRaw => {\n                        const throughput = JSON.parse(JSON.stringify(itemRaw));\n                        const q = throughput.throughput.quantity;\n                        const t = throughput.throughput.time;\n                        const e = throughput.efficiency;\n                        const o = throughput.throughput.overclock;\n                        const s = throughput.throughput.speed;\n                        const i = throughput.throughput.item;\n                        //check propagated limited\n                        const maxItemsPerSecLimiter = throughput.maxItemsPerSecLimiter === undefined ? Infinity : throughput.maxItemsPerSecLimiter;\n\n                        let itemPerSecBeforeBeltLimiting = Math.min(q / t * e * o * s || 0, maxItemsPerSecLimiter);\n\n                        // need to do some weird math to constrain the items/psec to a PORTION of the belt limited\n                        const limitedItemPerSecByBelt = limitedSpeed / 60;\n\n                        const beltMaxForThisEntry = limitedItemPerSecByBelt * 60;\n\n                        throughput.maxItemsPerSecLimiter = Math.min(limitedItemPerSecByBelt * (maxItemsPerSecLimiter / totalItemThroughput), beltMaxForThisEntry * (maxItemsPerSecLimiter / totalItemThroughput), limitedItemPerSecByBelt, maxItemsPerSecLimiter, itemPerSecBeforeBeltLimiting * fraction);\n                        throughput.calculatedItemPerSecond = throughput.maxItemsPerSecLimiter;\n\n                        foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                        foundLink.itemThroughPut[i] = foundLink.itemThroughPut[i] || {max: 0, actual: 0};\n                        foundLink.itemThroughPut[i].max += (itemPerSecBeforeBeltLimiting / (totalItemThroughput || 1)) * beltMaxForThisEntry;\n                        foundLink.itemThroughPut[i].actual += itemPerSecBeforeBeltLimiting * 60 * fraction;\n\n                        providedThroughput[target].push(throughput);\n                    });\n                })\n            } else {\n                const loopedNodes = new Set();\n                nodeGroupSource.forEach((node) => {\n                    loopedNodes.add(node.id);\n                    const provided = providedThroughput[node.id] || [];\n                    provided.forEach(provideRaw => {\n                        const provide = JSON.parse(JSON.stringify(provideRaw));\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n                });\n\n                const visit = (nodeInitial, provide, loopedNodes) => {\n                    let i = 0;\n\n                    let initialItemPerSec = provide.calculatedItemPerSecond;\n\n                    let resources = {[nodeInitial.id]: initialItemPerSec * 60};\n                    const initialNode = nodeInitial.id;\n                    let previousOutput = {[nodeInitial.id]: initialItemPerSec * 60};\n                    let outputIterator = {[nodeInitial.id]: initialItemPerSec * 60};\n                    let iteratorTemp = initialItemPerSec * 60;\n                    while (i < 999) {\n                        const visitedNodes = new Set();\n                        const stack = [nodeInitial];\n                        visitedNodes.add(nodeInitial.id);\n                        while (stack.length) {\n                            const node = stack.pop();\n\n                            let theseResources = resources[node.id];\n\n                            if (node.machine.name === 'Logistic' && node.instance.name === 'Splitter') {\n                                theseResources = theseResources / ((this.nodeOut[node.id] || []).length || 1);\n                            } else if (node.machine.name === 'Logistic' && node.instance.name === 'Merger') {\n\n                            } else if (node.machine.name === 'Container') {\n\n                            }\n\n                            this.nodeOut[node.id].forEach(outNode => {\n                                if (!loopedNodes.has(outNode.id)) {\n                                    return;\n                                }\n\n                                const links = this.graphData.links.filter(link => link.source.id === node.id && link.target.id === outNode.id);\n                                if (links && links.length !== 1) {\n                                    throw new Error('Too many links found!!!');\n                                }\n                                const link = links[0];\n                                const limitedSpeed = link.instance.speed;\n                                resources[outNode.id] = resources[outNode.id] || 0;\n                                resources[outNode.id] += (theseResources);\n                            });\n\n                            (this.nodeOut[node.id] || []).forEach(outNode => {\n                                if (!visitedNodes.has(outNode.id) && loopedNodes.has(outNode.id)) {\n                                    visitedNodes.add(outNode.id);\n                                    stack.push(outNode);\n                                }\n                            });\n\n                        }\n\n                        const delta = resources[initialNode] - previousOutput[initialNode];\n\n                        if (!nodeGroupTarget.length || delta > previousOutput || Math.round(delta * 1000000) === 0 || i === 998) {\n                            Object.keys(resources).forEach(key => {\n                                outputIterator[key] = Math.round(100 * outputIterator[key]) / 100;\n                            });\n                            return outputIterator;\n                        } else {\n\n                            iteratorTemp += delta;\n\n                            resources[initialNode] -= previousOutput[initialNode];\n\n                            Object.keys(resources).forEach(key => {\n                                outputIterator[key] = outputIterator[key] || 0;\n                                outputIterator[key] += resources[key];\n                            });\n\n                            previousOutput[initialNode] = delta; // rabbit and the hare.\n                            resources = {[initialNode]: delta};\n                            i++;\n                        }\n                    }\n                };\n\n                const itemPerNode = {};\n                nodeGroupSource.forEach((node) => {\n                    const providedThroughputFromOthers = JSON.parse(JSON.stringify(providedThroughput[node.id] || []));\n                    providedThroughputFromOthers.forEach(provide => {\n                        const resultantResource = visit(node, provide, loopedNodes);\n                        const item = provide.throughput.item;\n                        Object.keys(resultantResource || []).forEach(nodeId => {\n                            itemPerNode[nodeId] = itemPerNode[nodeId] || {};\n                            itemPerNode[nodeId][item] = itemPerNode[nodeId][item] || 0;\n                            itemPerNode[nodeId][item] += resultantResource[nodeId];\n                        });\n                    });\n                });\n\n                nodeGroupSource.forEach((node) => {\n                    this.nodeOut[node.id].forEach(outNode => {\n\n                        if (!loopedNodes.has(outNode.id)) {\n                            return;\n                        }\n\n                        const links = this.graphData.links.filter(link => link.source.id === node.id && link.target.id === outNode.id);\n                        if (links && links.length !== 1) {\n                            throw new Error('Too many links found!!!');\n                        }\n                        const foundLink = links[0];\n                        const linkSpeed = foundLink.instance.speed;\n\n                        const totalItems = Object.keys(itemPerNode[node.id] || {}).map(item => itemPerNode[node.id][item]).reduce((a, b = 0) => a + b, 0);\n\n                        Object.keys(itemPerNode[node.id] || {}).forEach(item => {\n                            const q = itemPerNode[node.id][item];\n                            foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                            foundLink.itemThroughPut[item] = foundLink.itemThroughPut[item] || {max: 0, actual: 0};\n                            foundLink.itemThroughPut[item].max = (q / (totalItems || 1) * linkSpeed);\n                            foundLink.itemThroughPut[item].actual += (q / ((this.nodeOut[node.id] || []).length || 1));\n                            foundLink.forceOverwritable = true;\n                        });\n                    });\n                });\n\n                nodeGroupSource.forEach((outerNode) => {\n                    outerNode.itemsPerMinute = {};\n                    outerNode.efficiency = 1;\n                    nodeGroupSource.forEach((node) => {\n                        const provided = providedThroughput[node.id] || [];\n                        provided.forEach(provideRaw => {\n                            const provide = JSON.parse(JSON.stringify(provideRaw));\n                            const item = provide.throughput.item;\n                            outerNode.itemsPerMinute[item] = (itemPerNode[outerNode.id][item] || 0);\n                        });\n                    });\n                });\n\n                (derivedGraphOutgoing[origin] || []).forEach(outgoingNode => {\n                    const sources = nodeGroupSource.map(node => node.id);\n                    const targets = superNodeGraphLookupInflated[outgoingNode].map(node => node.id);\n\n                    sources.forEach(source => {\n                        targets.forEach(target => {\n\n                            const link = this.graphData.links.filter(link => link.source.id === source && link.target.id === target);\n\n                            let foundLink = null;\n                            if (link && link.length === 1) {\n                                foundLink = link[0];\n                            } else if (link && link.length > 1) {\n                                throw new Error('Too many links found!!!');\n                            } else {\n                                return;\n                            }\n\n                            const linkSpeed = foundLink.instance.speed;\n\n                            const totalItems = Object.keys(itemPerNode[source] || {}).map(item => itemPerNode[source][item]).reduce((a, b = 0) => a + b, 0);\n\n\n                            Object.keys(itemPerNode[source] || {}).forEach(item => {\n                                const q = itemPerNode[source][item];\n                                foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                                foundLink.itemThroughPut[item] = foundLink.itemThroughPut[item] || {max: 0, actual: 0};\n                                foundLink.itemThroughPut[item].max = (q / totalItems * linkSpeed);\n                                foundLink.itemThroughPut[item].actual += (q / ((this.nodeOut[source] || []).length || 1));\n                                foundLink.forceOverwritable = true;\n                            });\n\n\n                            nodeGroupSource.forEach((node) => {\n                                const provided = providedThroughput[node.id] || [];\n\n\n                                const provideByItem = {};\n\n                                provided.forEach(provide => {\n                                    const item = provide.throughput.item;\n                                    provideByItem[item] = provideByItem[item] || [];\n                                    provideByItem[item].push(provide);\n                                });\n\n                                Object.keys(provideByItem).forEach(item => {\n                                    const thisProvide = provideByItem[item];\n                                    const totalCalculated = thisProvide.map(item => item.calculatedItemPerSecond).reduce((a, b = 0) => a + b, 0);\n\n                                    thisProvide.forEach(provideRaw => {\n                                        const provide = JSON.parse(JSON.stringify(provideRaw));\n\n                                        const localModifier = provide.calculatedItemPerSecond / totalCalculated;\n\n                                        provide.calculatedItemPerSecond = localModifier / 60 * (itemPerNode[source][item] / ((this.nodeOut[source] || []).length || 1));\n\n                                        provide.calculatedItemPerSecond = Math.min(provide.calculatedItemPerSecond, linkSpeed / 60);\n                                        provide.maxItemsPerSecLimiter = provide.calculatedItemPerSecond;\n\n                                        const throughput = provide;\n                                        const q = throughput.throughput.quantity;\n                                        const t = throughput.throughput.time;\n                                        const e = throughput.efficiency;\n                                        const o = throughput.throughput.overclock;\n                                        const s = throughput.throughput.speed;\n\n                                        const rawCalculation = q / t * e * o * s || 0;\n\n                                        if (rawCalculation < provide.calculatedItemPerSecond) {\n                                            throughput.throughput.overclock = Infinity;\n                                        }\n\n                                        providedThroughput[target] = providedThroughput[target] || [];\n                                        providedThroughput[target].push(throughput);\n                                    });\n                                });\n                            });\n\n                        });\n                    });\n\n                });\n\n\n            }\n        };\n\n        propagateNodeToEdgesRevised(thisNodeInflated, outgoingInflated, node, outgoing);\n\n        Object.keys(derivedGraphIncoming).forEach(key => {\n            const accessor = derivedGraphIncoming[key];\n            accessor.delete(parseInt(node, 10));\n        });\n\n        myTinyQueue.reheapify();\n    }\n\n    editEfficiencyArc('efficiency', 59, 322);\n};\nexport const initSimulation = () => {\n    const bodyEl = document.getElementById('svgParent');\n    const width = bodyEl.clientWidth;\n    const height = bodyEl.clientHeight;\n    return d3.forceSimulation()\n        .force('link', d3.forceLink().id(function (d) {\n            return d.id;\n        }).distance(60))\n        .force('charge', d3.forceManyBody().strength(20))\n        // .force('center', d3.forceCenter(width / 2, height / 2))\n        .force('collision', d3.forceCollide().radius(function (d) {\n            return 120;\n        }))\n        .force('xAxis', d3.forceX().strength(0.1).x(function (d) {\n            return d.initialX || (width / 2);\n        }))\n        .force('yAxis', d3.forceY().strength(0.5).y(function (d) {\n            return d.initialY || (height / 2);\n        }));\n};\n\nexport const updateGraph = function (simulation, graphNodesGroup, graphLinksGroup) {\n    const t = this;\n    let nodes = this.graphData.nodes;\n    let links = this.graphData.links;\n\n    this.nodeIn = {};\n    this.nodeOut = {};\n\n    links.forEach(elem => {\n        const outgoing = elem.source.id;\n        const incoming = elem.target.id;\n        this.nodeOut[outgoing] = this.nodeOut[outgoing] || [];\n        this.nodeIn[incoming] = this.nodeIn[incoming] || [];\n\n        this.nodeOut[outgoing].push(elem.target);\n        this.nodeIn[incoming].push(elem.source);\n    });\n\n    nodes.forEach(node => {\n        const input_slots = node.instance.input_slots;\n        const output_slots = node.instance.output_slots;\n        node.open_in_slots = input_slots - (t.nodeIn[node.id] || []).length;\n        node.open_out_slot = output_slots - (t.nodeOut[node.id] || []).length;\n    });\n\n    recalculateStorageContainers.call(t);\n\n    const drag = d3.drag()\n        .clickDistance(10)\n        .on('start', (d) => {\n            console.debug(\"[Debug] Dragstart\");\n            drag_start.call(this, d, simulation, t);\n        }).on('drag', (d) => {\n            console.debug(\"[Debug] Dragging\");\n            drag_drag.call(this, d, t);\n        }).on('end', function (d) {\n            console.debug(\"[Debug] Drag end\");\n            // d3.event.sourceEvent.stopImmediatePropagation(); // REMOVEDNOW\n            drag_end.call(this, d, t, simulation);\n        });\n\n    let graphNodesData =\n        graphNodesGroup\n            .selectAll('.' + 'node-data-class')\n            .data(nodes, d => d.id);\n\n    let graphNodesEnter =\n        graphNodesData\n            .enter()\n            .append('g')\n            .classed('node-data-class', true)\n            .attr('id', d => d.id || null)\n            // .on('contextmenu', (d, i)  => {\n            //   t.remove(d);\n            //   d3.event.preventDefault();\n            // })\n            // .on('mouseover', d => console.log(`d.id: ${d.id}`))\n            // .on('click', d => t.handleNodeClicked(d))\n            .on('wheel.zoom', function (d) {\n                console.debug(\"Wheel zoom\");\n                wheelZoomCalculation.call(this, d);\n            })\n            .on('click', function (d) {\n                console.debug(\"Clicked\");\n                d3.event.stopImmediatePropagation();\n                //REMOVEDNOW\n                node_clicked.call(this, d, t);\n                // self.onNodeClicked.emit(d.id);\n            }).on('dblclick', function (d) {\n                console.debug(\"Double clicked\");\n            d3.event.stopImmediatePropagation();\n            remove_select_from_nodes(t);\n            //double click\n            // d.fx = null;\n            // d.fy = null;\n        }).on('mouseover', function (d) {\n            node_mouse_over.call(this, d, t);\n        }).on('mouseout', function (d) {\n            node_mouse_out.call(this, d, t);\n        }).on('mousedown', function (d) {\n            node_mouse_down.call(this, d, t);\n        }).on('mouseup', function (d) {\n            node_mouse_up.call(this, d, t);\n        }).call(drag);\n\n    let graphNodesExit =\n        graphNodesData\n            .exit()\n            .remove();\n\n    let graphNodeCircles =\n        graphNodesEnter\n            .append('circle')\n            .classed(constants.graphNodeClass, true)\n            .attr('cursor', 'pointer')\n            .attr('r', d => 50);\n\n    const callbacks = [];\n    addEfficiencyArc(graphNodesEnter, 'efficiency', 59, 322);\n    addNodeImage(graphNodesEnter);\n    insertNodeOverclock(graphNodesEnter);\n    insertNodeTier(graphNodesEnter);\n    insertComponents.call(t, graphNodesEnter);\n\n    // merge\n    graphNodesData =\n        graphNodesEnter.merge(graphNodesData);\n\n    // links\n    let graphLinksData =\n        graphLinksGroup\n            .selectAll('.' + 'link-data-class')\n            .data(links, function (d) {\n                return d.source.id + '-' + d.target.id;\n            });\n    let graphLinksEnter =\n        graphLinksData\n            .enter()\n            .append('g')\n            .classed('link-data-class', true);\n\n    let graphLinksExit =\n        graphLinksData\n            .exit()\n            .remove();\n\n\n    const linkFullObject = graphLinksEnter\n        .append('g')\n        .attr('id', function (d) {\n            return 'path-parent' + d.source.id + '-' + d.target.id;\n        })\n        .classed(constants.lineParentObjectClass, true);\n\n    // apply styling to each selected line\n    linkFullObject.append('path')\n        .classed(constants.lineStylingPathClass, true)\n        .classed(constants.lineStylingFullClass, true)\n        .attr('display', 'none')\n        .attr('stroke', 'orange')\n        .attr('stroke-width', 10);\n    linkFullObject.append('path')\n        .classed(constants.lineStylingArrowClass, true)\n        .classed(constants.lineStylingFullClass, true)\n        .attr('display', 'none')\n        .attr('stroke', null)\n        .attr('marker-end', 'url(#highlight-path-arrow-orange)')\n        .attr('stroke-width', 3);\n\n    linkFullObject\n        .append('path')\n        .classed(constants.lineObjectClass, true)\n        .attr('stroke', function (d) {\n            return d3.color('#000000');\n        })\n        .attr('marker-end', 'url(#default-path-arrow)');\n\n    insertEdgeLabel.call(this, linkFullObject);\n\n    // apply styling to each selected line\n    linkFullObject\n        .append('path')\n        .classed(constants.lineHitboxObjectClass, true)\n        .on('mouseover', function (d) {\n        }).on('mouseout', function (d) {\n    }).on('click', function (d) {\n        pathMouseClick.call(this, d, t);\n    });\n\n    // merge\n    graphLinksData =\n        graphLinksEnter.merge(graphLinksData);\n\n    simulation\n        .nodes(nodes)\n        .on('tick', () => {\n            handleTick.call(this, graphNodesData, graphLinksData, simulation);\n        })\n        .on('end', () => {\n            console.log('Simulation Ended!');\n        });\n\n    simulation\n        .force('link')\n        .links(links);\n    // simulation\n    // .force('link', d3.forceLink().links(forceLinks))\n    // experiment: weights>\n    // t.linkWeights = {}\n    // links.forEach(elem => {\n    //   t.linkWeights[elem.target.id] = t.linkWeights[elem.target.id] + 1 || 1;\n    //   // t.linkWeights[elem.source.id] = t.linkWeights[elem.source.id] + 1 || 1;\n    // })\n    //\n    // simulation.force('charge', d3.forceManyBody().strength(function(d) {\n    //   return 20 - (20 * t.linkWeights[d.id]);\n    // }));\n    callbacks.forEach(callback => callback());\n    simulation.alphaTarget(0.3).restart();\n\n//     //get svg element.\n//     var svg = document.getElementById(\"mainRender\");\n//\n// //get svg source.\n//     var serializer = new XMLSerializer();\n//     var source = serializer.serializeToString(svg);\n//\n// //add name spaces.\n//     if(!source.match(/^<svg[^>]+xmlns=\"http\\:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n//         source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n//     }\n//     if(!source.match(/^<svg[^>]+\"http\\:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n//         source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n//     }\n//\n// //add xml declaration\n//     source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n//\n// //convert svg source to URI data scheme.\n//     var url = \"data:image/svg+xml;charset=utf-8,\"+encodeURIComponent(source);\n//\n// //set url value to a element's href attribute.\n//\n//     var download = document.createElement('a');\n//     download.href = url;\n//     download.download = 'reddot.png';\n//     download.click();\n};\n\nexport const deselect_path_and_nodes = function (t) {\n    t.setState({selectedPath: null, selectedNode: null});\n    d3.selectAll('.' + constants.lineStylingFullClass).attr('display', 'none');\n    remove_select_from_nodes(t);\n};\n\nexport const zoom_actions = (graphObjects) => {\n    graphObjects.attr('transform', d3.event.transform);\n};\n\nexport const handleTick = function (graphNodesData, graphLinksData, simulation) {\n    //update circle positions each tick of the simulation\n    const k = 100 * simulation.alpha();\n    graphNodesData\n        .attr('transform', function (d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        })\n        .attr('cx', function (d) {\n            return d.x;\n        })\n        .attr('cy', function (d) {\n            return d.y;\n        });\n\n    //update link positions\n    graphLinksData.selectAll('line')\n        .attr('x1', function (d) {\n            return d.source.x;\n        })\n        .attr('y1', function (d) {\n            return d.source.y;\n        })\n        .attr('x2', function (d) {\n            return d.target.x;\n        })\n        .attr('y2', function (d) {\n            return d.target.y;\n        });\n\n    //update link positions\n    graphLinksData.selectAll('path')\n        .attr('d', function (d) {\n            return 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y;\n        });\n\n    calculateLabelPositions.call(this, graphLinksData);\n\n    graphLinksData.selectAll('.' + constants.lineObjectClass)\n        .each(function (d) {\n            d.source.vx += k;\n            d.target.vx -= k;\n        });\n};","import constants from './constants';\nimport {deselect_path_and_nodes} from './graphActions';\nimport * as d3 from 'd3';\nimport TinyQueue from '../TinyQueue';\nimport {strongly_connected_components_standalone} from './algorithms';\nimport {spliceUtil} from './util';\nimport {updateNodeTierExternal} from \"./nodeActions\";\n\nexport const recalculateStorageContainers = function () {\n\n    const nodeUnion = new Set(Object.keys(this.nodeIn));\n    Object.keys(this.nodeOut).forEach(node => nodeUnion.add(node));\n    const nodeUnionArray = Array.from(nodeUnion);\n\n    const nodeLookup = {};\n\n    nodeUnionArray.forEach((value, index) => {\n        nodeUnionArray[index] = this.graphData.nodes.filter(elem => elem.id.toString() === value)[0];\n        nodeLookup[nodeUnionArray[index].id] = nodeUnionArray[index];\n        nodeUnionArray[index].childProvides = [];\n        nodeUnionArray[index].hasSources = new Set();\n        if (!nodeUnionArray[index].infiniteSource) {\n            nodeUnionArray[index].containedItems = [];\n        }\n\n        if (nodeUnionArray[index].machine.name !== 'Container' && nodeUnionArray[index].machine.name !== 'Logistic') {\n        } else {\n            nodeUnionArray[index].allowedIn = [];\n            if (!nodeUnionArray[index].infiniteSource) {\n                nodeUnionArray[index].allowedOut = [];\n            }\n\n        }\n    });\n\n    const nodeOutWithSets = {};\n    Object.keys(this.nodeOut).forEach(key => {\n        const value = this.nodeOut[key];\n        nodeOutWithSets[key] = new Set(value.map(elem => elem.id.toString()));\n    });\n\n    const componentsList = strongly_connected_components_standalone(nodeOutWithSets);\n    const superNodeGraphLookup = {};\n    const superNodeGraphLookupInflated = {};\n    const lookupArray = {};\n    componentsList.forEach((list, index) => {\n        superNodeGraphLookup[index] = list;\n        superNodeGraphLookupInflated[index] = list.map(id => nodeLookup[id]);\n        list.forEach(item => {\n            lookupArray[item] = index;\n        });\n    });\n    const derivedGraphOutgoing = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphOutgoing[thisNode] = derivedGraphOutgoing[thisNode] || new Set();\n        const derivedGraphAccessor = derivedGraphOutgoing[thisNode];\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n            derivedGraphAccessor.add(thisId);\n        });\n    });\n    const derivedGraphIncoming = {};\n    const immutableDerivedGraphIncoming = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphIncoming[thisNode] = derivedGraphIncoming[thisNode] || new Set();\n        immutableDerivedGraphIncoming[thisNode] = immutableDerivedGraphIncoming[thisNode] || new Set();\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n\n            if (!derivedGraphIncoming[thisId]) {\n                derivedGraphIncoming[thisId] = new Set();\n                immutableDerivedGraphIncoming[thisId] = new Set();\n            }\n\n            const derivedGraphAccessor = derivedGraphIncoming[thisId];\n            derivedGraphAccessor.add(thisNode);\n            immutableDerivedGraphIncoming[thisId].add(thisNode);\n        });\n    });\n\n    const myTinyQueue = new TinyQueue(Array.from(new Set([...Object.keys(derivedGraphOutgoing), ...Object.keys(derivedGraphIncoming)])), (a, b) => {\n        return (derivedGraphIncoming[a] || []).size - (derivedGraphIncoming[b] || []).size;\n    });\n\n    const globalProvideMap = {};\n\n    const reverseTraversalStack = [];\n\n    while (myTinyQueue.size()) {\n        const node = myTinyQueue.pop();\n\n        reverseTraversalStack.push(node);\n\n        const thisNodeInflated = superNodeGraphLookupInflated[node];\n        const outgoing = Array.from(derivedGraphOutgoing[node] || new Set());\n        const outgoingInflated = outgoing.map(item => superNodeGraphLookupInflated[item]);\n\n        const propagateNodeToEdges = (nodeGroupSource, nodeGroupTarget, origin, targets) => {\n            //gather this node\n            const combinedProvides = [];\n            const combinedProvidesSource = new Set();\n            nodeGroupSource.forEach(node => {\n                if (node.machine.name !== 'Container' && node.machine.name !== 'Logistic') {\n                    combinedProvides.push({item: node.data.recipe, source: origin});\n                } else {\n                    if (node.infiniteSource) {\n                        node.childProvides = [];\n                    } else {\n                        node.childProvides = globalProvideMap[origin] || [];\n                        node.childProvides.forEach(provide => {\n                            if (!combinedProvidesSource.has(provide.source)) {\n                                combinedProvides.push(provide);\n                                combinedProvidesSource.add(provide.source);\n                            }\n                        });\n                        node.allowedIn = node.childProvides.map(elem => elem.item.item.id);\n                        node.allowedOut = node.childProvides.map(elem => elem.item.item.id);\n                        node.containedItemsMap = node.childProvides.map(elem => { return {item: elem.item.item, source: elem.source}});\n                        node.containedItems = node.childProvides.map(elem => elem.item.item);\n                    }\n                }\n            });\n\n            targets.forEach(target => {\n                if (!globalProvideMap[target]) {\n                    globalProvideMap[target] = [];\n                }\n\n                combinedProvides.forEach(provide => {\n                    if (!new Set(globalProvideMap[target].map(elem => elem.source)).has(provide.source)) {\n                        globalProvideMap[target].push(provide);\n                    }\n                });\n            });\n        };\n\n        propagateNodeToEdges(thisNodeInflated, outgoingInflated, node, outgoing);\n\n        Object.keys(derivedGraphIncoming).forEach(key => {\n            const accessor = derivedGraphIncoming[key];\n            accessor.delete(parseInt(node, 10));\n        });\n\n        myTinyQueue.reheapify();\n    }\n\n    while (reverseTraversalStack.length) {\n        const node = reverseTraversalStack.pop();\n\n        const thisNodeInflated = superNodeGraphLookupInflated[node];\n\n        const outgoing = Array.from(derivedGraphOutgoing[node] || new Set());\n        const outgoingInflated = outgoing.map(item => superNodeGraphLookupInflated[item]);\n\n        const propagateNodeToEdgesReversed = (nodeGroupSource, nodeGroupTarget, origin, targets) => {\n\n            const allowed = new Set();\n            nodeGroupTarget.forEach(nodeGroup => nodeGroup.forEach(node => {\n                if (node.infiniteSource) {\n                    return;\n                }\n                node.allowedIn.forEach(item => allowed.add(item))\n            }));\n\n            nodeGroupSource.forEach(node => {\n                if (node.machine.name !== 'Container' && node.machine.name !== 'Logistic') {\n                    // NoOp\n                } else {\n                    if (node.allowedIn.length === 0 && node.allowedOut.length === 0) {\n                        if (!node.infiniteSource) {\n                            node.allowedIn = Array.from(allowed);\n                        }\n                        node.allowedOut = Array.from(allowed);\n                    }\n                }\n            });\n        };\n        propagateNodeToEdgesReversed(thisNodeInflated, outgoingInflated, node, outgoing);\n    }\n};\n\nexport const addPath = function (passedThis, source, target) {\n\n    if (source.id === target.id) {\n        return;\n    }\n\n    const sourceChecker = (source.allowedIn || []).length > 0 || (source.allowedOut || []).length > 0;\n    const targetChecker = (target.allowedIn || []).length > 0 || (target.allowedOut || []).length > 0;\n    const specialSource = ['Container', 'Logistic'].includes(source.machine.name);\n    const specialTarget = ['Container', 'Logistic'].includes(target.machine.name);\n    const mergerTarget = ['Logistic'].includes(source.machine.name) && ['Merger'].includes(source.instance.name);\n    const mergerSource = ['Logistic'].includes(target.machine.name) && ['Merger'].includes(target.instance.name);\n    const targetSlotsUsed = target.instance.input_slots === (passedThis.nodeIn[target.id] ? passedThis.nodeIn[target.id].length : 0);\n    const sourceSlotsUsed = source.instance.output_slots === (passedThis.nodeOut[source.id] ? passedThis.nodeOut[source.id].length : 0);\n\n    console.error(sourceChecker, targetChecker, specialSource, specialTarget, targetSlotsUsed);\n\n    const path_type = passedThis.props.parentAccessor.state.path_type.path_type;\n    path_type.sort((path1, path2) => path1.rank - path2.rank);\n    const upgrades = path_type.filter(path => path.rank >= 0);\n\n    // TODO: Set the correct instance by default\n    const instance = upgrades[0];\n\n    const newEdge = {source: source, target: target, instance, upgradeTypes: upgrades};\n\n    if (((specialSource && !sourceChecker) || (specialTarget && !targetChecker)) || (mergerTarget || mergerSource)) {\n        // special handling if the source is a container\n        if (target.infiniteSource) {\n            return;\n        }\n        // check if there are open slots\n        const outgoing = source.id;\n        const incoming = target.id;\n\n        const usedOut = (passedThis.nodeOut[outgoing] ? passedThis.nodeOut[outgoing].length : 0);\n        const usedIn = (passedThis.nodeIn[incoming] ? passedThis.nodeIn[incoming].length : 0);\n\n        // return early if we can't do anything with this node,\n        if (usedOut >= source.instance.output_slots || usedIn >= target.instance.input_slots) {\n            passedThis.updateGraphHelper();\n            return;\n        }\n\n        const filterResult = passedThis.graphData.links.filter(function (d) {\n            if (d.source.id === newEdge.target.id && d.target.id === newEdge.source.id) {\n                removePath(d, passedThis);\n            }\n            return (d.source.id === newEdge.source.id && d.target.id === newEdge.target.id) || newEdge.source.id === newEdge.target.id;\n        });\n\n        if (filterResult.length === 0) {\n            passedThis.graphData.links.push(newEdge);\n        }\n        passedThis.updateGraphHelper();\n    } else {\n        //checked\n\n        if (target.infiniteSource) {\n            return;\n        }\n\n        // Check if there are items you can shove in\n        const sharedItems = target.allowedIn.filter(value => source.allowedOut.includes(value));\n\n        // check if there are open slots\n        const outgoing = source.id;\n        const incoming = target.id;\n\n        const usedOut = (passedThis.nodeOut[outgoing] ? passedThis.nodeOut[outgoing].length : 0);\n        const usedIn = (passedThis.nodeIn[incoming] ? passedThis.nodeIn[incoming].length : 0);\n\n        // return early if we can't do anything with this node.\n        if (usedOut >= source.instance.output_slots || usedIn >= target.instance.input_slots ||\n            sharedItems.length <= 0) {\n            passedThis.updateGraphHelper();\n            return;\n        }\n\n\n\n        const filterResult = passedThis.graphData.links.filter(function (d) {\n            if (d.source.id === newEdge.target.id && d.target.id === newEdge.source.id) {\n                removePath(d, passedThis);\n            }\n            return (d.source.id === newEdge.source.id && d.target.id === newEdge.target.id) || newEdge.source.id === newEdge.target.id;\n        });\n\n        if (filterResult.length === 0) {\n            passedThis.graphData.links.push(newEdge);\n        }\n        passedThis.updateGraphHelper();\n    }\n};\n\nexport const pathMouseClick = function (d, t) {\n    d3.event.stopImmediatePropagation();\n    const parentElement = d3.select(this.parentElement);\n    // const styledLine = parentElement.select('.' + constants.lineStylingPathClass);\n    // const styledMarker = parentElement.select('.' + constants.lineStylingArrowClass);\n\n    if (t.state && t.state.selectedPath && t.state.selectedPath === d) {\n        // set the new selected one to this one\n        deselect_path_and_nodes.call(this, t);\n    } else {\n        deselect_path_and_nodes.call(this, t);\n        d3.selectAll('.' + constants.lineStylingFullClass).attr('display', 'none');\n        t.setState({selectedPath: d});\n        const both = parentElement.selectAll('.' + constants.lineStylingFullClass);\n        both.attr('display', 'inherit');\n    }\n};\n\nexport const removePath = function (d, t) {\n    if (t.graphData.links.indexOf(d) === -1) {\n        throw new Error('d not found in graph links: ' + JSON.stringify(d));\n    }\n    const outgoing = d.source.id;\n    const incoming = d.target.id;\n\n\n    if (d.target.machine.name === 'Container' || d.target.machine.name === 'Logistic') {\n        d.target.childProvides = d.target.childProvides.filter(item => item.source !== '' + outgoing);\n\n        if (d.target.containedItemsMap) {\n            d.target.containedItemsMap = d.target.containedItemsMap.filter(item => item.source !== '' + outgoing);\n            d.target.containedItems =  d.target.containedItemsMap.map(item => item.item);\n        }\n\n        d.target.allowedIn =  d.target.childProvides.map(elem => elem.item.item.id);\n        d.target.allowedOut =  d.target.childProvides.map(elem => elem.item.item.id);\n    }\n\n    spliceUtil(t.nodeOut[outgoing], d.target);\n    spliceUtil(t.nodeIn[incoming], d.source);\n    spliceUtil(t.graphData.links, d)\n\n    if ((d.source.machine.name === 'Container' || d.source.machine.name === 'Logistic') && (t.nodeIn[d.source.id] || []) .length === 0) {\n        d.source.childProvides = [];\n        d.source.containedItems =  [];\n        d.source.containedItemsMap = [];\n        d.source.allowedIn =  [];\n        d.source.allowedOut =  [];\n    }\n\n};\n\n\nexport const calculatePathTooltipPosition = function (link_label, d3) {\n    link_label.attr('x', function (d) {\n        const node = d3.select(link_label.node().parentElement).selectAll('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x - (d3.select(this).attr('width') / 2);\n    }).attr('y', function (d) {\n        return d.point.y - (d3.select(this).attr('height') / 2);\n    });\n};\n\n\nexport const calculateLabelPositions = function (link_label) {\n    const text = link_label.selectAll('.' + constants.nodeVersionTextClass);\n    text.attr('x', function (d) {\n        const node = d3.select(d3.select(this).node().parentElement.parentElement).select('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x;\n    }).attr('y', function (d) {\n        return d.point.y;\n    });\n\n    const image = link_label.selectAll('.' + constants.lineLimitedThroughputClass);\n    image.attr('x', function (d) {\n        const node = d3.select(d3.select(this).node().parentElement.parentElement).select('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x - 44;\n    }).attr('y', function (d) {\n        return d.point.y + d.tempIndex[d3.select(this).attr('data-key')] * 20 + 15;\n    });\n\n    const secondarytext = link_label.selectAll('.' + constants.lineLimitedThroughputText);\n    secondarytext.attr('x', function (d) {\n        const node = d3.select(d3.select(this).node().parentElement.parentElement).select('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x - 20;\n    }).attr('y', function (d) {\n        return d.point.y + d.tempIndex[d3.select(this).attr('data-key')] * 20 + 24;\n    });\n\n\n};\n\n\nexport const insertEdgeLabel = function (elem) {\n\n    // Perhaps not needed!\n    const link_label = elem.append('g').attr('class', 'textLabel');\n\n\n    updateNodeTierExternal(link_label, 0, 0);\n\n    const link_label2 = elem.append('g').attr('class', 'resourceThroughput');\n\n    d3.selectAll('.' + constants.lineLimitedThroughputText).remove();\n    d3.selectAll('.' + constants.lineLimitedThroughputClass).remove();\n\n    d3.selectAll('.resourceThroughput').each(function (d) {\n\n        const edgeThis = d3.select(this);\n\n        let index = 0;\n        d.tempIndex = {};\n        Object.keys(d.itemThroughPut || {}).forEach((key) => {\n            const item = d.itemThroughPut[key];\n\n            if (!d.itemIconLookup) return;\n\n            // d.tempIndex\n            d.tempIndex[key] = index++;\n\n            let definedColor = 'LightCoral';\n            let linkClass = 'link-has-problems';\n\n            if (d.forceOverwritable) {\n                definedColor = 'LightBlue';\n            }\n\n            if (item.actual <= item.max) {\n                definedColor = 'white';\n                linkClass = null;\n            }\n\n            const icon = d.itemIconLookup[key];\n\n            edgeThis.classed('link-has-problems', false);\n            edgeThis.classed('link-has-no-problems', true);\n            if (linkClass) {\n                edgeThis.classed('link-has-problems', true);\n                edgeThis.classed('link-has-no-problems', false);\n            }\n\n            edgeThis.append('svg:image')\n                .classed(constants.lineLimitedThroughputClass, true)\n                .attr('xlink:href', function (d) {\n                    return icon;\n                })\n                .attr('data-key', key)\n                .attr('height', 20)\n                .attr('width', 20);\n\n\n            edgeThis.append('text')\n                .attr('fill', 'black')\n                .attr('class', 'overclockFont')\n                .classed(constants.lineLimitedThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('stroke', 'black')\n                .attr('stroke-width', 4)\n                .attr('font-size', 20)\n                .attr('data-key', key)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n\n            edgeThis.append('text').attr('fill', definedColor)\n                .attr('class', 'overclockFont')\n                .classed(constants.lineLimitedThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('font-size', 20)\n                .attr('data-key', key)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n        });\n    });\n};","import constants from './constants';\nimport {addPath, removePath} from './edgeActions';\nimport * as d3 from 'd3';\nimport {deselect_path_and_nodes} from './graphActions';\nimport {spliceUtil} from './util';\n\nimport {parseSvg} from 'd3-interpolate/src/transform/parse';\n\nexport const add_node = (d, t) => {\n\n    const zoomData = parseSvg(d3.select('#svgGroup').attr('transform'));\n    console.error(zoomData);\n\n    var viewCenter = [];\n\n\n    const bodyEl = document.getElementById('svgParent');\n    const width = bodyEl.clientWidth;\n    const height = bodyEl.clientHeight;\n\n    viewCenter[0] = (0.5) * (width / zoomData.scaleX) - (zoomData.translateX / zoomData.scaleX);\n    viewCenter[1] = (0.5) * (height / zoomData.scaleY) - (zoomData.translateY / zoomData.scaleY);\n\n    d.id = d.id || t.id++;\n    d.x = d.x || 0;\n    d.y = d.y || 0;\n\n    d.fx = viewCenter[0];\n    d.fy = viewCenter[1];\n    console.error(viewCenter);\n\n    d.overclock = d.overclock || 100;\n    t.graphData.nodes.push(d);\n    t.updateGraphHelper();\n};\n\nexport const delete_node = function (d, t) {\n    // unselect currently selected node\n    const selectedNode = t.state.selectedNode;\n    remove_select_from_nodes(t);\n\n    const toSplice = t.graphData.links.filter(function (l) {\n        return l.source.id === selectedNode.id || l.target.id === selectedNode.id;\n    });\n\n    toSplice.map(function (l) {\n        removePath(l, t);\n    });\n    spliceUtil(t.graphData.nodes, selectedNode);\n};\n\n\nexport const node_clicked = function (d, t) {\n    // unselect currently selected node\n    const previouslySelected = t.state.selectedNode;\n    remove_select_from_nodes(t);\n    if (previouslySelected !== d) {\n        deselect_path_and_nodes(t);\n        t.setState({selectedNode: d});\n\n        d3.select(this).classed(constants.graphNodeHoverClass, true)\n            .classed(constants.graphNodeGrabbedClass, false)\n            .classed(constants.selectedNodeClass, true);\n    }\n};\n\nexport const remove_select_from_nodes = function (graphSvg) {\n    d3.select('.' + constants.selectedNodeClass)\n        .classed(constants.selectedNodeClass, false)\n        .classed(constants.graphNodeGrabbedClass, false);\n    graphSvg.setState({selectedNode: null});\n};\n\n\nexport const node_mouse_over = function (d, graphSvg) {\n\n    graphSvg.setState({mouseOverNode: d3.select(this).datum()});\n    d3.select(this).classed(constants.graphNodeHoverClass, true);\n};\n\nexport const node_mouse_out = function (d, graphSvg) {\n    graphSvg.setState({mouseOverNode: null});\n    d3.select(this).classed(constants.graphNodeHoverClass, false);\n};\n\nexport const node_mouse_down = function (d, graphSvg) {\n    if (d3.event.shiftKey) {\n        graphSvg.setState({shiftHeld: true, sourceId: d3.select(this).datum().id});\n    } else {\n        d3.select(this).classed(constants.graphNodeGrabbedClass, true);\n    }\n};\n\nexport const node_mouse_up = function (d, graphSvg) {\n    // Only triggered if it's not a drag\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n    } else {\n        //probably can't get to this case\n    }\n    graphSvg.setState({shiftHeld: false});\n};\n\n\nconst overClockCalculation = (d, percentage_metric, offset, endOffsetRaw) => {\n    const endOffset = endOffsetRaw + offset;\n    const percentage = d[percentage_metric] * 100 || 0;\n    const arc = d3.arc()\n        .innerRadius(50)\n        .outerRadius(50);\n\n    const m = (endOffset - offset) / 100;\n    const b = offset;\n\n    const start = b / 180 * Math.PI;\n    const end = (m * percentage + b) / 180 * Math.PI;\n    return arc({startAngle: start, endAngle: end});\n};\n\n\nexport const addEfficiencyArc = (parent, percentage_metric, offset, endOffset) => {\n    parent.append('path').filter(function (d) {\n        return !['Container', 'Logistic'].includes(d.machine.name)\n    })\n        .attr('class', constants.overclockedArcClass)\n        .attr('fill', 'none')\n        .attr('stroke-width', 8);\n\n    editEfficiencyArc(percentage_metric, offset, endOffset);\n};\n\nexport const editEfficiencyArc = (percentage_metric, offset, endOffset) => {\n    d3.selectAll('.' + constants.overclockedArcClass)\n        .attr('d', function (d) {\n            return overClockCalculation(d, percentage_metric, offset, endOffset);\n        })\n        .attr('stroke', function (d) {\n\n            function perc2color(perc) {\n                var r, g, b = 0;\n                if(perc < 50) {\n                    r = 255;\n                    g = Math.round(5.1 * perc);\n                }\n                else {\n                    g = 255;\n                    r = Math.round(510 - 5.10 * perc);\n                }\n                var h = r * 0x10000 + g * 0x100 + b * 0x1;\n                return '#' + ('000000' + h.toString(16)).slice(-6);\n            }\n\n            const p =  100 * (d[percentage_metric] || 0);\n            return perc2color(p)\n        });\n};\n\nexport const addNodeImage = (parent) => {\n    parent.append('svg:image')\n        .attr('class', function (d) {\n            if (d.machine && d.machine.icon) {\n                return 'machine-icon';\n            }\n            return 'dev-icon';\n        })\n        .attr('xlink:href', function (d) {\n            if (d.instance && d.instance.icon) {\n                return d.instance.icon;\n            }\n            if (d.machine && d.machine.icon) {\n                return d.machine.icon;\n            }\n            return 'https://raw.githubusercontent.com/rhocode/rhocode.github.io/master/img/satoolsfactory_icons/Smelter.png';\n        })\n        .attr('x', function (d) {\n            return -50;\n        })\n        .attr('y', function (d) {\n            return -50;\n        })\n        .attr('height', 100)\n        .attr('width', 100);\n};\n\nexport const updateAllOverclockCalculations = () => {\n    updateOverclock(d3.selectAll('.' + constants.overclockedTextClass));\n};\n\nexport const wheelZoomCalculation = function (d, overclockOverride = null, selectedElem = null) {\n    if (overclockOverride === null) {\n        d3.event.stopImmediatePropagation();\n        let roughEstimate = -1;\n\n        if (d3.event.deltaY < 0) {\n            roughEstimate = 1;\n        }\n\n        d.overclock = (d.overclock + (roughEstimate));\n        if (d.overclock < 0) {\n            d.overclock = 251 + d.overclock;\n        } else if (d.overclock > 250) {\n            d.overclock = d.overclock - 251;\n        }\n        updateOverclock(d3.select(this).select('.' + constants.overclockedTextClass));\n    } else {\n        d.overclock = overclockOverride;\n        updateOverclock(selectedElem);\n    }\n\n\n};\n\nexport const updateOverclock = function (textElement) {\n    textElement.text(function (d) {\n        return Math.round(d.overclock);\n    });\n};\n\nexport const updateNodeTier = function (textElement) {\n    textElement.text(function (d) {\n        let name = d.instance.machine_version.representation;\n        if (process.env.NODE_ENV && process.env.NODE_ENV !== 'production') {\n            name +=  (d.id ? '(' + d.id + ')' : '' );\n        }\n        return name;\n    });\n};\n\nexport const updateComponents = function (elementsToUpdate) {\n    const t = this;\n    const itemAccessor = t.props.parentAccessor.state.recipe.item;\n    elementsToUpdate.each(function (d) {\n        const allowedInRemaining = d.allowedIn.slice();\n        const provided = t.nodeIn[d.id] || [];\n        const actualIn = provided.map(node => node.allowedOut).flat(1);\n\n        actualIn.forEach(id => {\n            spliceUtil(allowedInRemaining, id);\n        });\n\n        const element = d3.select(this);\n\n        element.selectAll('.' + constants.nodeRequirementsSubIconClass).remove();\n\n        if (allowedInRemaining.length > 0) {\n            element.append('text').attr('class', 'fas fa-arrow-right')\n                .classed(constants.nodeRequirementsSubIconClass, true)\n                .attr('x', function (d) {\n                    return -56 - 25;\n                })\n                .attr('y', function (d) {\n                    return 3;\n                })\n                .attr('height', 25)\n                .attr('width', 25);\n            const fetchRemainingIn = allowedInRemaining.map(item =>\n                itemAccessor.filter(findItem => item === findItem.id)[0]\n            );\n\n            const outputtedItems = new Set();\n\n            let index = 0;\n            fetchRemainingIn.forEach((remaining) => {\n                if (outputtedItems.has(remaining.icon)) {\n                    return;\n                }\n                outputtedItems.add(remaining.icon);\n                element.append('svg:image')\n                    .classed(constants.nodeRequirementsSubIconClass, true)\n                    .on('mousedown', function (d) {\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .on('click', function (d) {\n                        const findSuitableSource = t.graphData.nodes.filter(node => node.id !== d.id && node.open_out_slot > 0\n                            && node.allowedOut.includes(remaining.id));\n                        const thisNode = t.graphData.nodes.filter(node => node.id === d.id);\n                        if (findSuitableSource.length > 0) {\n                            addPath(t, findSuitableSource[0], thisNode[0]);\n                        }\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .attr('xlink:href', function (d) {\n                        return remaining.icon;\n                    })\n                    .attr('x', function (d) {\n                        return -58 - 28 - 28 - (28 * index++);\n                    })\n                    .attr('y', function (d) {\n                        return 3;\n                    })\n                    .attr('height', 25)\n                    .attr('width', 25);\n            });\n        }\n        const allowedOutRemaining = d.allowedOut.slice();\n        const provides = t.nodeOut[d.id] || [];\n        const actualOut = provides.map(node => node.allowedIn).flat(1);\n        actualOut.forEach(id => {\n            spliceUtil(allowedOutRemaining, id);\n        });\n\n        if (allowedOutRemaining.length > 0) {\n            element.append('text').attr('class', 'fas fa-arrow-right')\n                .classed(constants.nodeRequirementsSubIconClass, true)\n                .attr('x', function (d) {\n                    return 58;\n                })\n                .attr('y', function (d) {\n                    return -28;\n                })\n                .attr('height', 25)\n                .attr('width', 25);\n            const fetchRemainingOut = allowedOutRemaining.map(item =>\n                itemAccessor.filter(findItem => item === findItem.id)[0]\n            );\n\n            const outputtedItemsIn = new Set();\n\n            let index = 0;\n            fetchRemainingOut.forEach((remaining) => {\n                if (outputtedItemsIn.has(remaining.icon)) {\n                    return;\n                }\n                outputtedItemsIn.add(remaining.icon);\n                element.append('svg:image')\n                    .classed(constants.nodeRequirementsSubIconClass, true)\n                    .on('mousedown', function (d) {\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .on('click', function (d) {\n                        const findSuitableTarget = t.graphData.nodes.filter(node => node.id !== d.id && node.open_in_slots > 0\n                            && node.allowedIn.includes(remaining.id));\n                        const thisNode = t.graphData.nodes.filter(node => node.id === d.id);\n                        if (findSuitableTarget.length > 0) {\n                            addPath(t, thisNode[0], findSuitableTarget[0]);\n                        }\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .attr('xlink:href', function (d) {\n                        return remaining.icon;\n                    })\n                    .attr('x', function (d) {\n                        return 85 + (28 * index++);\n                    })\n                    .attr('y', function (d) {\n                        return -28;\n                    })\n                    .attr('height', 25)\n                    .attr('width', 25);\n            });\n        }\n    });\n};\n\nexport const forceUpdateComponentLabel = function () {\n    updateComponents.call(this, d3.selectAll('.' + constants.nodeRequirementsIconClass));\n};\n\n\nexport const insertComponents = function (parentElement) {\n\n    const el1 = parentElement.append('g').classed(constants.nodeRequirementsIconClass, true);\n\n    el1.each(function (d) {\n        if (d.machine && ['Container', 'Logistic'].includes(d.machine.name)) {\n            // save this for later...\n        } else {\n            d3.select(this).append('svg:image')\n                .classed(constants.nodeProducesClass, true)\n                .attr('xlink:href', function (d) {\n                    return d.data.recipe.item.icon;\n                })\n                .attr('x', function (d) {\n                    return -55;\n                })\n                .attr('y', function (d) {\n                    return 18;\n                })\n                .attr('height', 40)\n                .attr('width', 40);\n        }\n    });\n\n    d3.selectAll('.' + constants.nodeRequirementsIconClass).each(function (d) {\n        if (d.machine && ['Container', 'Logistic'].includes(d.machine.name)) {\n            const nodeThis = d3.select(this);\n            nodeThis.selectAll('.' + constants.nodeProducesClass).remove();\n            const outputtedItems = new Set();\n            let i = 0;\n            (d.containedItems || []).forEach((containedItem, index) => {\n                if (outputtedItems.has(containedItem.icon)) {\n                    return;\n                }\n                outputtedItems.add(containedItem.icon);\n                nodeThis.append('svg:image')\n                    .classed(constants.nodeProducesClass, true)\n                    .attr('xlink:href', function (d) {\n                        return d.containedItems[index].icon;\n                    })\n                    .attr('x', function (d) {\n                        return -55;\n                    })\n                    .attr('y', function (d) {\n                        return 18 + (30 * i++);\n                    })\n                    .attr('height', 40)\n                    .attr('width', 40);\n            });\n        }\n    });\n\n\n    parentElement.append('g').classed(constants.nodeSurplusIconClass, true);\n\n    d3.selectAll('.' + constants.nodeSurplusIconClass).each(function (d) {\n        const nodeThis = d3.select(this);\n        nodeThis.selectAll('.' + constants.nodeProducesPerMinText).remove();\n\n        nodeThis.append('text')\n            .attr('fill', 'white')\n            .attr('class', 'overclockFont')\n            .classed(constants.nodeProducesPerMinText, true)\n            .style('text-anchor', 'end')\n            .style('dominant-baseline', 'central')\n            .attr('stroke', 'black')\n            .attr('stroke-width', 4)\n            .attr('x', -5).attr('y', -37)\n            .attr('font-size', 30)\n            .text(function (d) {\n                let combinedSum = 0;\n                Object.keys(d.itemsPerMinute || {}).forEach(item => {\n                    combinedSum += d.itemsPerMinute[item];\n                });\n\n                return ((Math.round(combinedSum * 100) / 100) || 0) + '/m';\n            });\n\n\n        nodeThis.append('text').attr('fill', 'white')\n            .attr('class', 'overclockFont')\n            .classed(constants.nodeProducesPerMinText, true)\n            .style('text-anchor', 'end')\n            .style('dominant-baseline', 'central')\n            .attr('x', -5).attr('y', -37)\n            .attr('font-size', 30)\n            .text(function (d) {\n                let combinedSum = 0;\n                Object.keys(d.itemsPerMinute || {}).forEach(item => {\n                    combinedSum += d.itemsPerMinute[item];\n                });\n\n                return ((Math.round(combinedSum * 100) / 100) || 0) + '/m';\n            });\n    });\n\n    const el3 = parentElement.append('g').classed(constants.nodeLimitingThroughputClass, true);\n\n\n    d3.selectAll('.' + constants.nodeLimitingThroughputClass).each(function (d) {\n        const nodeThis = d3.select(this);\n        nodeThis.selectAll('.' + constants.nodeLimitingThroughputText).remove();\n\n        Object.keys(d.itemThroughPut || {}).forEach((key, index) => {\n            const item = d.itemThroughPut[key] || {actual: 0, max: 0};\n            if (!d.itemIconLookup) return;\n\n            let definedColor = 'LightCoral';\n            let nodeClass = 'node-has-problems';\n\n            if (item.actual === item.max) {\n                definedColor = 'white';\n                nodeClass = null;\n            } else if (item.actual < item.max) {\n                definedColor = 'gold';\n            }\n\n            const icon = d.itemIconLookup[key];\n\n            nodeThis.classed('node-has-problems', false);\n            nodeThis.classed('node-has-no-problems', true);\n            if (nodeClass) {\n                nodeThis.classed('node-has-problems', true);\n                nodeThis.classed('node-has-no-problems', false);\n            }\n\n            nodeThis.append('svg:image')\n                .classed(constants.nodeLimitingThroughputText, true)\n                .attr('xlink:href', function (d) {\n                    return icon;\n                })\n                .attr('x', -49 + 35).attr('y', 59 + (index * 20))\n                .attr('height', 20)\n                .attr('width', 20);\n\n            nodeThis.append('text')\n                .attr('fill', 'black')\n                .attr('class', 'overclockFont')\n                .classed(constants.nodeLimitingThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('stroke', 'black')\n                .attr('stroke-width', 4)\n                .attr('x', -25 + 35).attr('y', 68 + (index * 20))\n                .attr('font-size', 20)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n\n\n            nodeThis.append('text').attr('fill', definedColor)\n                .attr('class', 'overclockFont')\n                .classed(constants.nodeLimitingThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('x', -25 + 35).attr('y', 68 + (index * 20))\n                .attr('font-size', 20)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n\n        });\n\n    });\n\n    forceUpdateComponentLabel.call(this);\n};\n\nexport const updateNodeTierExternal = function (el, x = 35, y = 35) {\n    el.selectAll('.' + constants.nodeVersionTextClass).remove();\n\n    const backgroundText = el.append('text')\n        .attr('fill', 'white')\n        .attr('class', 'overclockFont')\n        .classed(constants.nodeVersionTextClass, true)\n        .style('text-anchor', 'middle')\n        .style('dominant-baseline', 'central')\n        .attr('stroke', 'black')\n        .attr('stroke-width', 4)\n        .attr('x', x).attr('y', y)\n        .attr('font-size', 30);\n\n    updateNodeTier(backgroundText);\n\n    const tspan = el.append('text').attr('fill', 'white')\n        .attr('class', 'overclockFont')\n        .classed(constants.nodeVersionTextClass, true)\n        .style('text-anchor', 'middle')\n        .style('dominant-baseline', 'central')\n        .attr('x', x).attr('y', y)\n        .attr('font-size', 30);\n\n    updateNodeTier(tspan);\n\n\n};\n\nexport const insertNodeTier = (gEl) => {\n    // const el = gEl.append('g').attr('text-anchor', 'middle').attr('dy', '-' + (nwords - 1) * 7.5);\n    const el = gEl.append('g').attr('id', function (d) {\n        return 'node-level-accessor-' + d.id;\n    });\n    updateNodeTierExternal(el);\n};\n\nexport const insertNodeOverclock = (gEl) => {\n    // const el = gEl.append('g').attr('text-anchor', 'middle').attr('dy', '-' + (nwords - 1) * 7.5);\n    const el = gEl\n        .filter(function (d) {\n            return !['Container', 'Logistic'].includes(d.machine.name)\n        })\n        .append('g').attr('text-anchor', 'middle').attr('dy', 0);\n\n    el.append('circle').attr('r', 17).attr('fill', '#FFFFFF').attr('cx', 32).attr('cy', -38).attr('stroke', 'black').attr('stroke-width', 1);\n\n    const tspan = el.append('text').attr('fill', 'black')\n        .attr('class', 'overclockFont')\n        .classed(constants.overclockedTextClass, true)\n        .attr('x', 32).attr('dy', -32)\n        .attr('font-size', 20)\n        .attr('id', function (d) {\n            return 'node-overclock-accessor-' + d.id;\n        })\n\n    updateOverclock(tspan);\n};","import constants from './constants';\nimport {delete_node} from './nodeActions';\nimport {removePath} from './edgeActions';\n\nimport * as d3 from 'd3';\n\nexport const svgKeyUp = function (d, t) {\n    t.setState({pressedKey: null});\n};\n\nexport const svgKeyDown = function (d, t) {\n    // make sure repeated keyd presses don't register for each keydown\n    if (document.activeElement && document.activeElement.nodeName === 'INPUT') return;\n    if (t.state.pressedKey) return;\n    t.setState({pressedKey: d3.event.keyCode});\n    // this.lastKeyDown = d3.event.keyCode;\n    // const selectedNode = this.selectedNode,\n    //   selectedEdge = this.selectedEdge;\n    //\n    switch (d3.event.keyCode) {\n        case constants.BACKSPACE_KEY:\n        case constants.DELETE_KEY:\n            if (t.state.selectedPath) {\n                removePath.call(this, t.state.selectedPath, t);\n                t.setState({selectedPath: null});\n                t.updateGraphHelper();\n            } else if (t.state.selectedNode) {\n                delete_node.call(this, d, t);\n                t.setState({selectedNode: null});\n                t.updateGraphHelper();\n            }\n            break;\n    }\n};","export const appendMarkerAttributes = (marker) => {\n    return marker.attr('viewBox', '0 -5 10 10')\n        .attr('markerWidth', 10)\n        .attr('markerHeight', 10)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5');\n};","import React, {Component} from 'react';\nimport {svgKeyDown, svgKeyUp} from './keyboardEvents';\nimport {analyzeGraph, deselect_path_and_nodes, initSimulation, updateGraph, zoom_actions} from './graphActions';\nimport {appendMarkerAttributes} from './markerActions';\n\nimport * as d3 from 'd3';\nimport {add_node, updateAllOverclockCalculations} from './nodeActions';\nimport {parse, stringify} from 'flatted/esm';\nimport pako from 'pako';\nimport Base64 from 'Base64';\nimport {saveHash} from \"./util\";\n\nconst styles = theme => ({\n    tooltip: {\n        position: 'absolute',\n        textAlign: 'center',\n        padding: 2,\n        font: '12px sans-serif',\n        background: 'lightsteelblue',\n        border: 0,\n        borderRadius: 8,\n        pointerEvents: 'none',\n        zIndex: 1202\n    }\n});\n\nclass GraphSvg extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            snapToGrid: true\n        };\n    }\n\n    static inflateGraphData(data) {\n        return parse(pako.inflate(Base64.atob(data), {to: 'string'}));\n    }\n\n    addNode(nodeData) {\n        add_node(nodeData, this);\n\n        console.log(JSON.stringify(nodeData));\n    }\n\n    resetCamera() {\n        this.inputSvg.transition()\n            .duration(750)\n            .call(this.zoom_handler.transform, d3.zoomIdentity);\n\n        this.updateGraphHelper();\n    }\n\n    jiggle() {\n        this.graphData.nodes.forEach(node => {\n            node.x = 0;\n            node.y = 0;\n        });\n\n        this.updateGraphHelper();\n    }\n\n    fixNodes() {\n        this.graphData.nodes.forEach(node => {\n            node.fx = node.x;\n            node.fy = node.y;\n        });\n\n        this.updateGraphHelper();\n    }\n\n    unfixNodes() {\n        this.graphData.nodes.forEach(node => {\n            node.fx = null;\n            node.fy = null;\n            node.vx = 0;\n            node.vy = 0;\n        });\n\n        this.updateGraphHelper();\n    }\n\n    createGraph(inputSvg, nodes = [], links = [], data = {}) {\n        this.graphData = {\n            nodes: nodes,\n            links: links\n        };\n\n        this.id = Math.max(...(this.graphData.nodes.map(elem => elem.id))) + 1;\n        if (this.id === Number.NEGATIVE_INFINITY) {\n            this.id = 0;\n        }\n        this.inputSvg = inputSvg;\n\n        //add encompassing group for the zoom\n        this.svgGroup = inputSvg.append('g')\n            .attr('class', 'objects')\n            .attr('id', 'svgGroup');\n\n        const graphObjects = this.svgGroup;\n\n        const t = this;\n\n        inputSvg.on('click', function (d) {\n            deselect_path_and_nodes.call(this, t);\n        });\n\n        d3.select(window).on('keydown', function (d) {\n            svgKeyDown.call(this, d, t);\n        }).on('keyup', function (d) {\n            svgKeyUp.call(this, d, t);\n        });\n\n        //add zoom capabilities\n        this.zoom_handler = d3.zoom()\n            .on('zoom', () => zoom_actions(graphObjects))\n            .scaleExtent([0.1, 6]);\n        this.zoom_handler(inputSvg);\n        inputSvg.on('dblclick.zoom', null);\n\n        //Create definitions for the arrow markers showing relationship directions\n        const defs = graphObjects.append('defs');\n        appendMarkerAttributes(defs.append('svg:marker')\n            .attr('id', 'default-path-arrow')\n            .attr('refX', 35));\n\n        appendMarkerAttributes(defs.append('svg:marker')\n            .attr('id', 'highlight-path-arrow-orange')\n            .attr('fill', 'orange')\n            .attr('refX', 24));\n\n        appendMarkerAttributes(defs.append('svg:marker')\n            .attr('id', 'dragged-end-arrow')\n            .attr('refX', 7));\n\n        const filter = defs.append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', '130%')\n            .attr('width', '130%')\n            .attr('filterUnits', 'userSpaceOnUse');\n\n        filter.append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 5)\n            .attr('result', 'blur');\n\n        filter.append('feOffset')\n            .attr('in', 'blur')\n            .attr('result', 'offsetBlur');\n\n        filter.append('feFlood')\n            .attr('in', 'offsetBlur')\n            .attr('flood-color', 'white')\n            .attr('flood-opacity', '1')\n            .attr('result', 'offsetColor');\n\n        filter.append('feComposite')\n            .attr('in', 'offsetColor')\n            .attr('in2', 'offsetBlur')\n            .attr('operator', 'in')\n            .attr('result', 'offsetBlur');\n\n        const feMerge = filter.append('feMerge');\n\n        feMerge.append('feMergeNode')\n            .attr('in', 'offsetBlur');\n        feMerge.append('feMergeNode')\n            .attr('in', 'SourceGraphic');\n\n\n        //The dragged line\n        this.dragLine = graphObjects.append('g').append('svg:path')\n            .attr('class', 'link dragline line-object hidden')\n            .attr('d', 'M0,0L0,0')\n            .attr('stroke', function (d) {\n                return d3.color('#000000');\n            })\n            .style('marker-end', 'url(#dragged-end-arrow)');\n\n        const graphLinksGroup = graphObjects.append('g') //graphLinksData\n            .attr('class', 'links-g-group');\n\n        const graphNodesGroup = graphObjects\n            .append('g')\n            .attr('class', 'nodes-g-group');\n\n        let simulation = initSimulation();\n\n        this.graphNodesGroup = graphNodesGroup;\n        this.graphLinksGroup = graphLinksGroup;\n        this.simulation = simulation;\n        this.updateGraphHelper();\n    }\n\n    updateGraphHelper() {\n        updateGraph.call(this, this.simulation, this.graphNodesGroup, this.graphLinksGroup);\n    }\n\n    clearGraphDataRaw() {\n        const parent = d3.select(d3.select('#mainRender').node().parentElement);\n        d3.select('#mainRender').selectAll('*').remove();\n        d3.select('#mainRender').remove();\n\n        return parent.append('svg').attr('id', 'mainRender');\n    }\n\n    clearGraphData(t) {\n        deselect_path_and_nodes.call(this, t);\n        const svg = this.clearGraphDataRaw();\n        this.createGraph(svg);\n    }\n\n    loadGraphData(data) {\n        const svg = this.clearGraphDataRaw();\n        //nodes, links, data\n        this.createGraph(svg, data.graphData.nodes, data.graphData.links);\n    }\n\n    compressGraphData() {\n        const compressedData = {\n            satisgraphtory: {\n                version: 0.01\n            },\n            graphData: this.graphData,\n            playerData: {},\n            secret: {}\n        };\n        return Base64.btoa(pako.deflate(stringify(compressedData), {to: 'string'}));\n    }\n\n    uploadDataWithResponse() {\n        const data = {data: this.compressGraphData()};\n        return saveHash(data);\n    }\n\n    analyze = () => {\n        analyzeGraph.call(this);\n        this.updateGraphHelper();\n    };\n\n    optimize = () => {\n        analyzeGraph.call(this, true);\n        updateAllOverclockCalculations();\n        this.updateGraphHelper();\n    };\n\n    componentDidMount() {\n        // // const data = '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';\n        // const data = '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';\n        // // const data = 'eJzFWllv4zgS/iuBnr0O7yOP07uLDbYzk50MZh8aDUNjy44QW/JKcvcEQf/3IYu6KFOJkzjaRsemrqriVwf5lfzlKfqWFGWaZ9EVmiM8izZFvL//e1zF0VWEo1m038aPSVGfIOZEmSyLpDIHNPoxe4qyfJWU5oiZS9s0e7Bjbq/A/y+RMOel+VPmT5s/jOwHjr6aa9jKw9R+2Mcxtx/2ASzN9adoVZthn93Fy/s0S+yhFRNvt/n3ZHWdWatQd+KXgzWNWMvTrKzibGkfIVbRYW/mtkp+e9yDwcTqTVfRlZn0n9GVkHouNMWUEkIFEWoWPUZXTNI5QZgLjRCnGkk+i3KD2HKbLx/MowiZ432SLdJsUW7zyghuzuSHCk6BgjRbJX/CtW+P7sscUYM4/MNEUqmRmEVmjtvVbZF/Sx2qxOJyH5d3+aFYujMWpGWeVbFBY3VdJTs4a1Fbh6exHplHap69NpI+5/nDYW+FSPBojTp5CXU9RJ0iH3WKj1GnpEadAOoU6zlhWjMqlGScSAawc8TmClGJqDLzYNxHXasj0PER6KgFHXug/+1NqFMaQp2yGvXQNNbhebyAOuUe6lQMUKfyCHU1QF0fo85QjTp1sa5NkCCkOMKUE4wkgC4VnQuplKaMKXOZvCvUyatRZ3iIOiMh1BltYv14GuvwPEKgu7O/3Rf5YXN/C1Ay689kvU6XaZItnfX2pvI2KW7S7FBZfBnv+4sJz19MDvzF1NBfTPv+4ujYXxzX/mLgL4LMjJDUklv0TFK74iSZnisizeypyWkl9Rsc1qUJfW1t4mToLx7MEt5kSWga6/A8wg7ruwYHXMN5yKtc9B3GpecwrgYO40dlTQzKmgiUNdGUNQkOY9IupgpLiTklJv85OIxSMacIIyWkRAwT9qLDnqtr7MUMW4+Ysg7b8nIZFEEHCxa9WNeEX9fEsK6Jo7omBnVNBOqabOoaRg53oedSM4G45pKZIuAqG8ZoLogyIJgLTCii3pUp/LWZIo8qmwxWNtlUttA81iMTeVuqSBZKFelqWwl22mNzUxUXG9jvCd8fUgT8AWW13evs8zQDsWokQIz0ZLe/dg9EUvvaRV/7IBpUoGoqHPUX/Ua7IidpV9TXrvva5QnaWdRf/FrtfFT7EfxKDG2SzyCCB3VJqYBROuoX+MYojU6CRGNfPWgcxSSgXpOoX65a9fQ09WygHr92+ppH/axt9YvTfaKPrFJgVZEs033NLYAHxTuIGg2c6VDEW7ARjFxaemUOoAykq1ViDtfxtkzqNcPwJDxDX+vPVhZGwLf2SWJu0vBvICzN9nV9qteKQ9U7QYPazG2Wsy2qx71TQrvKvGjJoDnPeueX27gsHQuwpM7MGfgbAsaGhGVrP+CEhBMK6BsCMUD6wHsWCwIjazuFkZ0hg5E1g8PIKhYw4kAe7UgAhbQjCUTSjpSjk3aoHak0QyCDGNQAC8SgBwggBkXA+zBoggUOgyqgVRh0AZfCoAxCAoM2oEMEtAHzIaANKA8BbcB2CGgDkkNAG6V+tFCbUmFvA5sY8TblQ2/Tobdx0NvkRG9TMe5tisP+bSeFqeznAAZK0iUBMJJmJkBFAoZSC4sBhfUhAUpQQwKrtCfl+egP48FPxAOoxxAPKhweEG2GhhhzHTDWZogH5kqWcT2y3z36zKwHrWo4sGh38MG1/aFIq0c49NFkPpqsjyYfQRODURbQTg4fgrk3m60CIPHEebCi02Cl74EV5vvFESHMyRGsArAEfPkgnQT+sOI7STpyFsaJ8wBOXAFOYiQde8HGRS/YgPF0wQbXPiLY0P8r2EZBVAEQhcthYBPYkD0v2FATbFDnDfHrQyN6UzJs1WAaZw/g0rCjAxYJAsph+4iBTMEuGgu3ELn+Z72aPnm6ZadbtKpRUDUay7zXqD71TpeWwu2JcF32zmd1HfKwt8POZ8D5MFAqDDQKS9o3++y3umCQrrIjmGL0Od+kZZUuo25Y2uSoqn15dXlZxN/nm7S6P/xxKA3NNDwvyar5Mt9dFvf50sRu813fNU/zy11cVklxme42l2Vc5fm2XMfLKi8eFzZhysu7/TatzB3zfbYxqprDqIe35OEE9ZwCznSeELYu7IukNNbFVQ05XA8XyifYHrcrVrcxl66INFehxPSuKi+PZL+m4PGa0j2hvEKuRyf5ofh/yvf7pFj8UiS1Bz5S2XWRZxOp+pzukrLKsyl0fcrj7VToXWebvJpkThAXU6mDud1u42qyMPw1X02g6m5ZJN8n0PPfdJKs+hT/sZ0mozL7OnYKVb8mabbOTU1fLSYNwpt8ddjGxeKfhVkOpphnbg4mCRFzOT3sJqrzrbqpKtV/Duny4fs06XZXJcl2spk5bT8l8W4yZbeGvU2g7B/ZMi5tgmerQ1kVaTzhNONp0u5fSfztcTF1UbnpFZWbpNjYjfvHKgQlTmNvJ43bzb8Mbf7VSJdEedtx0hB3aBIqSxGr1F4jLc9ns+h/hziroMsQpvEo2GCbtSxCWcYV3e2SLdCcZvThPMupaWiWO7q4eZhjD0ge9fhsAMgRFuXzGjlsjDbtBdQjyVVxSE5odlrp4sQ2nAp1Rqh7T76L4aXmLDKoHGwXCNgjNIzSxDl8hIHhzndIBhQw1w4o0mzTWqj9Hgvc0gWOCPcKDIjRz3mxM9aZbDIqiub7o4MDlCxu/o2bVLbHR8Ghcc+vmgz82nXCnvFwqBVW/yDk7R6ue33gYdHzsPAbBKd0Ed5VSPrBBO8Cw02+NphG+njHwcTeFkxnTusJ3T/W+tSh/rEQ4+6P7G8QLn4yxc5E8wX1orlrGJEQJvCGNPxGpydE9frBpO0FhlcGPBbSnkTdSWS8lRh+6UlDEo07+hIJ6jV4hUCtSBYUycIiiS+SdiJ1J5EHJfKwRFgGPfdAsXkhi88AuOZn7n8TxM/uQnF+F8qzu1A9k3g37v6Ln+3rGrPhiGbwM2ur1dLsC8MOzdB1meqDm+YaEJ7IvpBHOvp6tEVreqwjJZZZ7bB0Rdf+Vof08p9Ai7aNnqP8J3ik1BP4pYD7jTe88CSYekbCu6aRTm67sJKJVnTiVnRrsfstugSL+akWnwUv6w5w/LV1iJfzZHiCeT7qajQN6hyp0WxYWrgnVUW9BApIHdkI8qFU0ZdKOnx4SCoZwUf8OPOi9B7UzgLSmTDxiFZvB+7iCQLn2nMA8fZFdOSFnGcf9R6BBSUcwhOpsTOzeXr9ewRju9+ph9apv0P+7MxG09bLW/v19S8VHsvx';\n        // // const data = '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';\n        // // const data = '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';\n        this.loadGraphData(this.props.parentAccessor.state.coreGraphData);\n        this.analyze();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.selectedPath !== prevState.selectedPath || this.state.selectedNode !== prevState.selectedNode) {\n            this.props.parentAccessor.setState({\n                selectedPath: this.state.selectedPath,\n                selectedNode: this.state.selectedNode\n            });\n        }\n    }\n\n\n    render() {\n        return <svg id=\"mainRender\"/>;\n    }\n}\n\nexport default GraphSvg;","import React from 'react';\nimport {ClickAwayListener, withStyles} from '@material-ui/core';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({});\n\nclass ClickAwayListenerV2 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.windowOnClobber = null;\n        this.clobberList = [];\n    }\n\n    componentDidMount() {\n        this.windowOnClobber = d3.select(this.props.clobberedElement).on('click');\n        d3.select(this.props.clobberedElement).on('click', this.props.onClickAway);\n\n        for (let elem of document.querySelectorAll('*')) {\n            this.clobberList.push(elem);\n            elem.addEventListener('click', this.props.onClickAway, true);\n        }\n    }\n\n    componentWillUnmount() {\n        d3.select(this.props.clobberedElement).on('click', this.windowOnClobber);\n        for (let elem of this.clobberList) {\n            elem.removeEventListener('click', this.props.onClickAway, true);\n        }\n        this.clobberList = [];\n    }\n\n    render() {\n        const {onClickAway} = this.props;\n\n        return (\n            <ClickAwayListener onClickAway={onClickAway}>\n                {this.props.children}\n            </ClickAwayListener>\n        );\n    }\n}\n\nClickAwayListenerV2.propTypes = {\n    classes: PropTypes.object.isRequired,\n    clobberedElement: PropTypes.string.isRequired,\n    onClickAway: PropTypes.func.isRequired,\n    children: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ClickAwayListenerV2);","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport {withStyles} from '@material-ui/core';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport ClickAwayListenerV2 from \"./ClickAwayListenerV2\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    button: {\r\n        flex: '0 0 100%',\r\n        justifyContent: 'left',\r\n        padding: 10,\r\n    },\r\n    paper: {\r\n        margin: theme.spacing.unit * 2,\r\n        display: 'flex',\r\n    },\r\n    label: {\r\n        paddingLeft: 10,\r\n    },\r\n    popper: {\r\n        zIndex: 1200,\r\n        left: '13px !important',\r\n    },\r\n    itemListIcon: {\r\n        height: 24,\r\n        width: 24,\r\n        paddingRight: 15,\r\n    },\r\n    tooltip: {},\r\n    tooltipIcon: {\r\n        height: 40,\r\n        display: 'inline-block',\r\n        paddingLeft: 10\r\n    },\r\n    tooltipIconFirst: {\r\n        height: 40,\r\n        display: 'inline-block',\r\n    },\r\n    tooltipText: {\r\n        fontSize: 18,\r\n        display: 'inline-block',\r\n    },\r\n    maxHeightPaper: {\r\n        overflowY: 'auto',\r\n        maxHeight: 600\r\n    }\r\n});\r\n\r\nclass SidebarButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {anchorEl: null};\r\n    }\r\n\r\n    handleMenu = event => {\r\n        this.setState({anchorEl: event.currentTarget});\r\n    };\r\n\r\n    handleClose = (event) => {\r\n        this.setState({anchorEl: null });\r\n    };\r\n\r\n    clickAwayClose = (event) => {\r\n        // event.stopImmediatePropagation();\r\n        if (this.state.anchorEl) {\r\n            this.setState({anchorEl: null});\r\n        }\r\n    };\r\n\r\n    listItems(classes, label, appObject) {\r\n        return this.props.items.map((link) => {\r\n            return (\r\n                <Tooltip key={link.id} className={classes.tooltip} placement=\"right\" title={\r\n                    link.inputs.map((element, index) => {\r\n                        return (\r\n                            <React.Fragment key={element.item.id}>\r\n                                <img src={element.item.icon}\r\n                                     className={index === 0 ? classes.tooltipIconFirst : classes.tooltipIcon}/>\r\n                                <div className={classes.tooltipText}>{element.quantity}</div>\r\n                            </React.Fragment>\r\n                        );\r\n                    })\r\n                }>\r\n                    <MenuItem onClick={() => {\r\n                        const machine_nodes = appObject.state.machine_node.machine_node;\r\n                        machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\r\n                        const upgrades = machine_nodes.filter(node => node.machine_class.id === link.machine_class.id);\r\n                        const instance = upgrades[0];\r\n\r\n                        appObject.graphSvg.addNode(\r\n                            {\r\n                                data: {recipe: link},\r\n                                machine: link.machine_class,\r\n                                allowedIn: link.inputs.map(dict => dict.item.id),\r\n                                allowedOut: [link.item.id],\r\n                                instance: instance,\r\n                                upgradeTypes: upgrades\r\n                            }\r\n                        );\r\n                        this.handleClose();\r\n                    }}>\r\n                        <img alt=\"probably some goat image\" src={link.item.icon} className={classes.itemListIcon}/>\r\n                        {link.name}\r\n                        <div className={classes.grow}/>\r\n                    </MenuItem>\r\n                </Tooltip>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {classes, label, appObject} = this.props;\r\n        const {anchorEl} = this.state;\r\n        const open = Boolean(anchorEl);\r\n        const listItems = this.listItems(classes, label, appObject);\r\n        return (\r\n            <React.Fragment key={label}>\r\n                <Paper className={classes.paper}>\r\n                    <Button\r\n                        aria-owns={open ? 'menu-appbar' : null}\r\n                        aria-haspopup=\"true\"\r\n                        onClick={open ? this.handleClose : this.handleMenu}\r\n                        className={classes.button}\r\n                    >\r\n                        {\r\n                            open ? <RemoveCircleIcon/> : <AddCircleOutlineIcon/>\r\n                        }\r\n                        \r\n                        <div className={classes.label}>\r\n                            {label}\r\n                        </div>\r\n                    </Button>\r\n                    <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition\r\n                            placement=\"right-start\">\r\n                        {({TransitionProps, placement}) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                id=\"menu-list-grow-2\"\r\n                                style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\r\n                            >\r\n                                <Paper className={classes.maxHeightPaper}>\r\n                                    <ClickAwayListenerV2 onClickAway={this.clickAwayClose}\r\n                                                         clobberedElement={'#mainRender'}>\r\n                                        <MenuList>\r\n                                            {listItems}\r\n                                        </MenuList>\r\n                                    </ClickAwayListenerV2>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n                </Paper>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SidebarButton);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core';\n\nconst styles = theme => ({\n    root: {},\n});\n\nclass PopupDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {classes, title, contents, open, handleModalClose, children} = this.props;\n        return (\n            <Dialog\n                className={classes.modal}\n                open={Boolean(open)}\n                onClose={handleModalClose}\n                id='modal'\n            >\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    {children}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleModalClose} color='secondary'>Close</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default\nwithStyles(styles)(PopupDialog);","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst styles = theme => ({\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing.unit * 2,\n        right: theme.spacing.unit * 2,\n    },\n});\n\nclass FabPopup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const dontShowAgain = window.localStorage.getItem('dontShowAgain');\n        let modalOpen = false;\n        let dontShow = false;\n\n        if (dontShowAgain === '1') {\n            window.localStorage.setItem('dontShowAgain', '1');\n            dontShow = true;\n        } else {\n            window.localStorage.setItem('dontShowAgain', '0');\n            dontShow = false;\n        }\n\n        if (!dontShow) {\n            modalOpen = true;\n        }\n\n        this.state = {modalOpen, dontShow};\n    }\n\n    handleDontShow = event => {\n        this.setState({ dontShow: event.target.checked });\n        if (event.target.checked) {\n            window.localStorage.setItem('dontShowAgain', '1');\n        } else {\n            window.localStorage.setItem('dontShowAgain', '0');\n        }\n    };\n\n    render() {\n        const {classes, title} = this.props;\n        const children = this.props.children;\n        return (\n            <React.Fragment>\n                <Fab id='helpFab' aria-label='help' color='secondary' className={classes.fab}\n                     onClick={() => this.setState({modalOpen: true})}>\n                    <HelpIcon/>\n                </Fab>\n                <PopupDialog title={''} open={this.state.modalOpen}\n                             handleModalClose={() => this.setState({modalOpen: false})}>\n                    {children}\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.dontShow}\n                                onChange={this.handleDontShow}\n                                value=\"checkedA\"\n                            />\n                        }\n                        label=\"Don't show this message again\"\n                    />\n\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(FabPopup);","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\n\nconst styles = theme => ({\n    icons: {\n        marginRight: 0\n    },\n});\n\nclass SidebarPopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false};\n    }\n\n    render() {\n        const {classes, Icon, label, title, contents} = this.props;\n\n        return (\n            <React.Fragment>\n                <ListItem button key={label} onClick={() => this.setState({modalOpen: true})}>\n                    <ListItemIcon className={classes.icons}><Icon/></ListItemIcon>\n                    <ListItemText primary={label}/>\n                </ListItem>\n                <PopupDialog title={title} open={this.state.modalOpen}\n                             handleModalClose={() => this.setState({modalOpen: false})}>\n                    {this.props.children}\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(SidebarPopup);","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\n\nimport {withStyles} from '@material-ui/core';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\nimport ClickAwayListenerV2 from \"./ClickAwayListenerV2\";\n\nconst styles = theme => ({\n    root: {},\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    popper: {\n        zIndex: 1200,\n        left: '13px !important',\n    },\n    itemListIcon: {\n        height: 24,\n        width: 24,\n        paddingRight: 15,\n    },\n});\n\nclass InnerNestedSidebarButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null};\n    }\n\n    handleMenu = event => {\n        if (event.currentTarget === this.state.lastTarget)\n            return;\n        this.setState({anchorEl: event.currentTarget, selectedButton: event.currentTarget.id});\n    };\n\n    handleClose = (event) => {\n        this.setState({\n            anchorEl: null,\n            lastTarget: this.state.anchorEl,\n            selectedButton: null\n        }, () => new Promise(resolve => setTimeout(resolve, 100)).then(() => this.setState({lastTarget: null})));\n    };\n\n    render() {\n        const {classes, resource, appObject} = this.props;\n        const {anchorEl} = this.state;\n        const icon = resource.item.icon;\n        const label = resource.item.name;\n        const listItems = resource.purities;\n        const machineIcon = resource.machine_class.icon;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment key={label}>\n                <MenuItem\n                    aria-owns={open ? 'menu-appbar' : null}\n                    aria-haspopup=\"true\"\n                    onClick={open ? this.handleClose : this.handleMenu}\n                    selected={this.state.selectedButton === label}\n                    id={label}\n                >\n                    <img src={icon} className={classes.itemListIcon}/>\n                    {label}\n                </MenuItem>\n                <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition placement=\"right-start\">\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            id=\"menu-list-grow\"\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListenerV2 onClickAway={this.handleClose} clobberedElement={'#mainRender'}>\n                                    <MenuList>\n                                        {\n                                            listItems.map((item) => {\n                                                return (\n                                                    <MenuItem onClick={\n                                                        () => {\n                                                            const machine_nodes = appObject.state.machine_node.machine_node;\n                                                            machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\n                                                            const upgrades = machine_nodes.filter(node => node.machine_class.id === resource.machine_class.id);\n                                                            const instance = upgrades[0];\n                                                            appObject.graphSvg.addNode(\n                                                                {\n                                                                    data: {\n                                                                        machine: resource,\n                                                                        node: item,\n                                                                        recipe: resource,\n                                                                        purity: item.name\n                                                                    },\n                                                                    machine: resource.machine_class,\n                                                                    allowedIn: [],\n                                                                    allowedOut: [resource.item.id],\n                                                                    instance: instance,\n                                                                    upgradeTypes: upgrades,\n                                                                }\n                                                            );\n                                                            this.handleClose();\n                                                        }\n                                                    } key={label + item.name}><img src={machineIcon}\n                                                                                   className={classes.itemListIcon}/>{item.name}\n                                                    </MenuItem>\n                                                );\n                                            })\n                                        }\n                                    </MenuList>\n                                </ClickAwayListenerV2>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(InnerNestedSidebarButton);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport Popper from '@material-ui/core/Popper';\nimport {withStyles} from '@material-ui/core';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\n\nimport InnerNestedSidebarButton from './InnerNestedSidebarButton';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nconst styles = theme => ({\n    root: {},\n    button: {\n        flex: '0 0 100%',\n        justifyContent: 'left',\n        padding: 10,\n    },\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    popper: {\n        zIndex: 1200,\n        left: '13px !important',\n    },\n    itemListIcon: {\n        height: 24,\n        width: 24,\n        paddingRight: 15,\n    },\n});\n\nclass NestedSidebarButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null};\n    }\n\n    handleMenu = event => {\n        if (event.currentTarget === this.state.lastTarget)\n            return;\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n            lastTarget: this.state.anchorEl\n        }, () => new Promise(resolve => setTimeout(resolve, 100)).then(() => this.setState({lastTarget: null})));\n    };\n\n    render() {\n        const {classes, listItems, label, appObject} = this.props;\n        const {anchorEl} = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment key={label}>\n                <Paper className={classes.paper}>\n                    <Button\n                        aria-owns={open ? 'menu-appbar' : null}\n                        aria-haspopup=\"true\"\n                        onClick={open ? this.handleClose : this.handleMenu}\n                        className={classes.button}\n                    >\n                        {\n                            open ? <RemoveCircleIcon/> : <AddCircleOutlineIcon/>\n                        }\n                        <div className={classes.label}>{label}</div>\n                    </Button>\n                    <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition\n                            placement=\"right-start\">\n                        {({TransitionProps, placement}) => (\n                            <Grow\n                                {...TransitionProps}\n                                id=\"menu-list-grow\"\n                                style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                            >\n                                <Paper>\n                                    <ClickAwayListener onClickAway={this.handleClose}>\n                                        <MenuList>\n                                            {Object.keys(listItems).map(key => {\n                                                const returnDivList = [];\n                                                if (['Miner'].includes(key)) {\n                                                    listItems[key].forEach(resource => {\n                                                        returnDivList.push(<InnerNestedSidebarButton\n                                                            appObject={appObject} resource={resource}/>);\n                                                    });\n                                                }\n                                                return returnDivList;\n                                            })}\n                                        </MenuList>\n                                    </ClickAwayListener>\n                                </Paper>\n                            </Grow>\n                        )}\n                    </Popper>\n                </Paper>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(NestedSidebarButton);","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport Popper from '@material-ui/core/Popper';\nimport {withStyles} from '@material-ui/core';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\nimport ClickAwayListenerV2 from \"./ClickAwayListenerV2\";\n\nconst styles = theme => ({\n    root: {},\n    button: {\n        flex: '0 0 100%',\n        justifyContent: 'left',\n        padding: 10,\n    },\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    popper: {\n        zIndex: 1200,\n        left: '13px !important',\n    },\n    itemListIcon: {\n        height: 24,\n        width: 24,\n        paddingRight: 15,\n    },\n});\n\nclass SimpleSidebarButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null};\n    }\n\n    handleMenu = event => {\n        if (event.currentTarget === this.state.lastTarget)\n            return;\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n            lastTarget: this.state.anchorEl\n        }, () => new Promise(resolve => setTimeout(resolve, 100)).then(() => this.setState({lastTarget: null})));\n    };\n\n    render() {\n        const {classes, listItems, label, appObject} = this.props;\n        const {anchorEl} = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <Paper className={classes.paper}>\n                <Button\n                    aria-owns={open ? 'menu-appbar' : null}\n                    aria-haspopup=\"true\"\n                    onClick={open ? this.handleClose : this.handleMenu}\n                    className={classes.button}\n                >\n                        {\n                            open ? <RemoveCircleIcon/> : <AddCircleOutlineIcon/>\n                        }\n                    <div className={classes.label}>Logistics</div>\n                </Button>\n                <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition placement=\"right-start\">\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            id=\"menu-list-grow-1\"\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListenerV2 onClickAway={this.handleClose} clobberedElement={'#mainRender'}>\n                                    <MenuList>\n                                        {Object.keys(listItems).map(key => {\n                                            const returnDivList = [];\n                                            if (!['Miner', 'Logistic'].includes(key)) {\n                                                listItems[key].forEach(resource => {\n                                                    returnDivList.push(<MenuItem onClick={() => {\n                                                        const machine_nodes = appObject.state.machine_node.machine_node;\n                                                        machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\n                                                        const upgrades = machine_nodes.filter(node => node.machine_class.id === resource.machine_class.id);\n                                                        const instance = upgrades[0];\n                                                        appObject.graphSvg.addNode(\n                                                            {\n                                                                data: {recipe: resource},\n                                                                machine: resource.machine_class,\n                                                                allowedIn: [],\n                                                                allowedOut: [],\n                                                                instance: instance,\n                                                                upgradeTypes: upgrades\n                                                            }\n                                                        );\n                                                        this.handleClose();\n                                                    }}\n                                                                                 key={resource.machine_class.name + resource.machine_class.id}>\n                                                        <img\n                                                            src={resource.machine_class.icon}\n                                                            className={classes.itemListIcon}/>{resource.machine_class.name}\n                                                    </MenuItem>);\n                                                });\n                                            }\n                                            if (['Logistic'].includes(key)) {\n                                                listItems[key].forEach(resource => {\n                                                    returnDivList.push(<MenuItem onClick={() => {\n                                                        const machine_nodes = appObject.state.machine_node.machine_node;\n                                                        machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\n                                                        const upgrades = machine_nodes.filter(node => node.machine_class.id === resource.machine_class.id && resource.name === node.name);\n                                                        const instance = upgrades[0];\n                                                        appObject.graphSvg.addNode(\n                                                            {\n                                                                data: {recipe: resource},\n                                                                machine: resource.machine_class,\n                                                                allowedIn: [],\n                                                                allowedOut: [],\n                                                                instance: instance,\n                                                                upgradeTypes: upgrades\n                                                            }\n                                                        );\n                                                        this.handleClose();\n                                                    }}\n                                                                                 key={resource.name}>\n                                                        <img src={resource.icon}\n                                                             className={classes.itemListIcon}/>{resource.name}\n                                                    </MenuItem>);\n                                                });\n                                            }\n                                            return returnDivList;\n                                        })}\n                                    </MenuList>\n                                </ClickAwayListenerV2>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(SimpleSidebarButton);","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport {withStyles} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {useExperimentalFeature} from \"./GraphSvg/util\";\nimport * as d3 from 'd3'\nconst styles = theme => ({\n    root: {},\n    paper: {\n        margin: 16,\n        padding: 12,\n        display: 'flex',\n        flexDirection: 'column',\n        flexShrink: 0\n    },\n    textField: {\n        paddingBottom: 10,\n    },\n    button: {\n        flex: 1,\n        marginTop: 10,\n        textAlign: 'left',\n        justifyContent: 'left',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing.unit / 4,\n    },\n    tooltip: {},\n    tooltipIcon: {\n        height: 40,\n        display: 'inline-block',\n        paddingLeft: 10\n    },\n    tooltipIconFirst: {\n        height: 40,\n        display: 'inline-block',\n    },\n    tooltipText: {\n        fontSize: 18,\n        display: 'inline-block',\n    },\n    checkbox: {\n        paddingLeft: 22,\n    },\n    checkboxLabel: {\n        height: 30,\n        paddingTop: 30,\n        paddingBottom: 16, \n        fontFamily: 'Roboto sans-serif',\n        fontWeight: 'bold',\n    }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        },\n    },\n};\n\nclass SidebarPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            playerUnlock: this.props.playerUnlock.player_unlock,\n            recipe: this.props.playerUnlock.recipe,\n            selectedDrives: [],\n            // (props.parentState.graphSvg && props.parentState.graphSvg.state.snapToGrid) ||\n            checked: true,\n            showAllLines: true\n        };\n    }\n\n    handleChangeMultiple = event => {\n        const options = event.currentTarget.parentElement.children;\n        const value = [];\n        for (let i = 0, l = options.length; i < l; i += 1) {\n            if (options[i].getAttribute('value') === event.currentTarget.getAttribute('value')) {\n                if (this.state.selectedDrives.indexOf(options[i].getAttribute('value')) === -1) {\n                    value.push(options[i].getAttribute('value'));\n                }\n            } else {\n                if (options[i].querySelector('input').checked) {\n                    value.push(options[i].getAttribute('value'));\n                }\n            }\n        }\n        this.setState({\n            selectedDrives: value,\n        });\n    };\n\n    handleCheckboxChange = () => {\n        this.props.parentState.graphSvg.setState({snapToGrid: !this.props.parentState.graphSvg.state.snapToGrid},\n            () => {\n                this.setState({ checked: this.props.parentState.graphSvg &&\n                        this.props.parentState.graphSvg.state.snapToGrid})\n            })\n    };\n\n    showHideLines = () => {\n        this.setState({showAllLines: !this.state.showAllLines}, () => {\n            if (this.state.showAllLines) {\n                d3.selectAll('.link-has-no-problems').classed('hiddenGraphElement', false)\n            } else {\n                d3.selectAll('.link-has-no-problems').classed('hiddenGraphElement', true)\n            }\n            d3.selectAll('.link-has-problems').classed('hiddenGraphElement', false)\n        });\n    };\n\n    render() {\n        const {classes, parentState, playerUnlock} = this.props;\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant=\"h5\">Settings</Typography>\n                {/*<TextField*/}\n                {/*label='Default Conveyor Speed'*/}\n                {/*type='number'*/}\n                {/*className={classes.textField}*/}\n                {/*fullWidth*/}\n                {/*>*/}\n                {/*</TextField>*/}\n\n                {/*<FormControl className={classes.formControl}>*/}\n                {/*<InputLabel htmlFor=\"select-multiple-chip\">Hard Drives</InputLabel>*/}\n                {/*<Select*/}\n                {/*multiple*/}\n                {/*value={this.state.selectedDrives}*/}\n                {/*onChange={this.handleChangeMultiple}*/}\n                {/*input={<Input id=\"select-multiple-chip\" />}*/}\n                {/*MenuProps={MenuProps}*/}\n                {/*renderValue={selected => (*/}\n                {/*<div className={classes.chips}>*/}\n                {/*{selected.map(value => (*/}\n                {/*<Chip key={value} label={value} className={classes.chip} />*/}\n                {/*))}*/}\n                {/*</div>*/}\n                {/*)}*/}\n                {/*>*/}\n                {/*{this.state.playerUnlock.map(drive => {*/}\n                {/*return (<Tooltip key={drive.name+drive.id+'toolip'} className={classes.tooltip} placement=\"right\" title={*/}\n                {/*this.state.recipe[drive.id].inputs.map((element, index) => {*/}\n                {/*return (*/}\n                {/*<React.Fragment key={element.item.id}>*/}\n                {/*<img src={element.item.icon} className={index === 0 ? classes.tooltipIconFirst : classes.tooltipIcon}/>*/}\n                {/*<div className={classes.tooltipText}>{element.quantity}</div>*/}\n                {/*</React.Fragment>*/}\n                {/*);*/}\n                {/*})*/}\n                {/*}>*/}\n                {/*<MenuItem key={drive.name+drive.id} value={drive.name}>*/}\n                {/*<Checkbox checked={this.state.selectedDrives.indexOf(drive.name) !== -1} color=\"primary\" />*/}\n                {/*<ListItemText primary={drive.name} />*/}\n                {/*</MenuItem>*/}\n                {/*</Tooltip>);*/}\n                {/*})}*/}\n                {/*</Select>*/}\n                {/*</FormControl>*/}\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={this.state.checked}\n                            onChange={this.handleCheckboxChange}\n                            value=\"snapToGrid\"\n                            className={classes.checkbox}\n                        />\n                    }\n                    label=\"Snap To Grid\"\n                    className={classes.checkboxLabel}\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={this.state.showAllLines}\n                            onChange={this.showHideLines}\n                            value=\"snapToGrid\"\n                            className={classes.checkbox}\n                        />\n                    }\n                    label=\"Show All Belts\"\n                    className={classes.checkboxLabel}\n                />\n                {/*<Button className={classes.button} fullWidth onClick={() => {*/}\n                {/*    parentState.graphSvg.jiggle();*/}\n                {/*}}>*/}\n                {/*    <ShuffleIcon/>*/}\n                {/*    <div className={classes.label}>Rejiggle Graph</div>*/}\n                {/*</Button>*/}\n                <Button className={classes.button} fullWidth onClick={() => {\n                    parentState.graphSvg.resetCamera();\n                }}>\n                    <ReplayIcon/>\n                    <div className={classes.label}>Reset Camera</div>\n                </Button>\n                {/*<Button className={classes.button} fullWidth onClick={() => {*/}\n                {/*    parentState.graphSvg.fixNodes();*/}\n                {/*}}>*/}\n                {/*    <ReplayIcon/>*/}\n                {/*    <div className={classes.label}>Fix Nodes</div>*/}\n                {/*</Button>*/}\n                {/*<Button className={classes.button} fullWidth onClick={() => {*/}\n                {/*    parentState.graphSvg.unfixNodes();*/}\n                {/*}}>*/}\n                {/*    <UndoIcon/>*/}\n                {/*    <div className={classes.label}>Unfix Nodes</div>*/}\n                {/*</Button>*/}\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(SidebarPanel);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\n\nconst styles = theme => ({\n    label: {\n        paddingLeft: 10,\n    },\n    dialogContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nclass ClearButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false};\n    }\n\n    handleModalClose = () => this.setState({modalOpen: false});\n    handleModalOpen = () => this.setState({modalOpen: true});\n\n\n    render() {\n        const {classes, label, title, children, onClick} = this.props;\n        return (\n            <React.Fragment>\n                <Button color='inherit' onClick={onClick || this.handleModalOpen}>\n                    <DeleteIcon/>\n                    <div className={classes.label}>Clear</div>\n                </Button>\n                <PopupDialog title={'Clear Graph?'} open={this.state.modalOpen}\n                             handleModalClose={this.handleModalClose}>\n                    <div className={classes.dialogContainer}>\n                        <Typography variant=\"h5\">Are you sure you want to clear everything?</Typography>\n                        <Button color=\"secondary\" variant=\"outlined\" className={`${classes.dialogButton}`} onClick={\n                            () => {\n                                this.props.t.graphSvg.clearGraphData(this.props.t);\n                                this.handleModalClose();\n                            }\n                        }>\n                            <DeleteIcon/>\n                            <div className={classes.label}>Yes, I'm sure!</div>\n                        </Button>\n                    </div>\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(ClearButton);","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport TextField from '@material-ui/core/TextField';\nimport {rebuildQueryParams, useExperimentalFeature} from \"./GraphSvg/util\";\n\nconst styles = theme => ({\n    label: {\n        paddingLeft: 10,\n    },\n    dialogContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    inlineDialogButton: {\n        paddingTop: 10,\n        paddingBottom: 10,\n    },\n    dialogButton: {\n        marginTop: 10,\n    },\n    statusMessage: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nclass ShareButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false, value: true};\n    }\n\n    handleModalClose = () => this.setState({modalOpen: false});\n    handleModalOpen = () => this.setState({modalOpen: true});\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (!prevState.modalOpen && this.state.modalOpen) {\n            this.setState({value: 'Loading...'}, () => {\n                this.props.t.graphSvg.uploadDataWithResponse().then(resp => {\n                    const port = window.location.port ? ':' + window.location.port : ''\n                    const url = window.location.protocol + '//' +  window.location.hostname + port + window.location.pathname\n                        + '#' +  resp + rebuildQueryParams();\n                    this.setState({value: url});\n                })\n            })\n        }\n    }\n\n    render() {\n        const {classes, onClick} = this.props;\n        let value = this.state.value;\n\n        return (\n            <React.Fragment>\n                <Button color='inherit' onClick={onClick || this.handleModalOpen}>\n                    <ShareIcon/>\n                    <div className={classes.label}>Share</div>\n                </Button>\n                <PopupDialog title={'Share Code'} open={this.state.modalOpen}\n                             handleModalClose={this.handleModalClose}>\n                    <div className={classes.dialogContainer}>\n                        <div>\n                            <TextField spellCheck={ false } inputRef={ref => this.inputRef = ref} label=\"Share Code\" value={value}>\n                            </TextField>\n                            <Button color=\"inherit\" className={classes.inlineDialogButton} onClick={\n                                () => new Promise(resolve => {\n                                    this.inputRef.select();\n                                    document.execCommand('copy');\n                                    resolve(true);\n                                }).then(a => {\n                                    this.setState({statusMessage: 'Copied!'}, () => {\n                                        setTimeout(() => {\n                                            this.setState({statusMessage: ''});\n                                        }, 3000);\n                                    });\n                                })}\n                            >\n                                <FileCopyIcon/>\n                                <div className={classes.label}>Copy</div>\n                            </Button>\n                        </div>\n                        {useExperimentalFeature('sti' ? <Button color=\"inherit\" className={classes.dialogButton} fullWidth>\n                            <div className={classes.label}>Generate Image</div>\n                        </Button> : null)}\n                        <div className={classes.statusMessage}>\n                            {this.state.statusMessage}\n                        </div>\n                    </div>\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShareButton);","import React from 'react';\nimport {Typography, withStyles} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport {updateNodeTierExternal, wheelZoomCalculation} from \"./GraphSvg/nodeActions\";\nimport * as d3 from 'd3';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst drawerWidth = 310;\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nconst styles = theme => ({\n    root: {},\n    formControl: {\n        maxWidth: drawerWidth,\n    },\n    paper: {\n        position: 'absolute',\n        left: drawerWidth + 20,\n        bottom: 20,\n        margin: 16,\n        padding: 12,\n        minWidth: drawerWidth - 100,\n    },\n    textField: {\n        paddingBottom: 10,\n        minWidth: 110\n    },\n    button: {},\n    label: {\n        paddingLeft: 10,\n    },\n    slider: {\n        padding: '10px',\n    },\n    overclock: {\n        paddingLeft: 10,\n    },\n    icon: {\n        paddingRight: 4\n    },\n    itemInput: {\n\n    },\n    formGroup: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'flex-end'\n    },\n\n    textMiddle: {\n        margin: 10,\n        marginBottom: 20.\n    }\n});\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        },\n    },\n};\n\nclass SelectorPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const items = JSON.parse(JSON.stringify(props.items.filter(item => !item.hidden)));\n\n        this.itemMap = {};\n        items.forEach(it => {\n            this.itemMap[it.id] = it;\n        });\n\n        items.sort((a, b) => {\n            return a.name.localeCompare(b.name);\n        });\n        this.items = items;\n        this.state = {quantity: props.selected.quantityPerInfinite || 0, time: props.selected.timePerInfinite || 1, dummy: false, sliderValue: props.selected.overclock, selectedSource:  props.selected.allowedOut || []};\n    }\n\n    debounce = (func, wait, immediate) => {\n        var timeout;\n\n        return function executedFunction() {\n            var context = this;\n            var args = arguments;\n\n            var later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n\n            var callNow = immediate && !timeout;\n\n            clearTimeout(timeout);\n\n            timeout = setTimeout(later, wait);\n\n            if (callNow) func.apply(context, args);\n        };\n    };\n\n    update = () => {\n        if (this.props.selected.machine) {\n            const el = d3.select('#' + 'node-level-accessor-' + this.props.selected.id);\n            updateNodeTierExternal(el);\n\n            this.props.selected.overclock = this.state.sliderValue;\n            const el2 = d3.select('#' + 'node-overclock-accessor-' + this.props.selected.id);\n            wheelZoomCalculation.call(this, this.props.selected, this.state.sliderValue, el2);\n        } else {\n            // it's a path\n            const el = d3.select('#' + 'path-parent' + this.props.selected.source.id + '-' + this.props.selected.target.id);\n            updateNodeTierExternal(el);\n        }\n    };\n\n    debouncedUpdateGraph = this.debounce(() => {\n        this.props.graphSvg.updateGraphHelper();\n    }, 200);\n\n    debouncedUpdate = this.debounce(() => {\n        this.update();\n    }, 200);\n\n    upgrade = () => {\n        const instance = this.props.selected.instance;\n        let index = this.props.selected.upgradeTypes.indexOf(instance);\n        const n = this.props.selected.upgradeTypes.length;\n        index = (index + 1);\n        if (index >= n) return;\n        this.props.selected.instance = this.props.selected.upgradeTypes[index];\n        this.update();\n\n        this.setState({dummy: !this.state.dummy});\n    };\n\n    downgrade = () => {\n        const instance = this.props.selected.instance;\n        let index = this.props.selected.upgradeTypes.indexOf(instance);\n        const n = this.props.selected.upgradeTypes.length;\n        index = index - 1;\n\n        if (index < 0) return;\n\n        this.props.selected.instance = this.props.selected.upgradeTypes[index];\n        this.update();\n\n        this.setState({dummy: !this.state.dummy});\n    };\n\n    changeSlider = (event, value) => {\n        this.setState({sliderValue: value}, () => {\n            this.debouncedUpdate();\n        });\n    };\n\n    handleCheckboxChange = () => {\n        if (this.infiniteSourceEligible) {\n            if (this.props.selected.infiniteSource) {\n                this.props.selected.open_in_slots = 1;\n                delete this.props.selected.infiniteSource;\n                delete this.props.selected.quantityPerInfinite;\n                delete this.props.selected.timePerInfinite;\n                this.props.selected.allowedIn = this.props.selected.allowedInClobbered;\n            } else {\n                this.props.selected.open_in_slots = 0;\n                this.props.selected.allowedInClobbered = this.props.selected.allowedIn;\n                this.props.selected.allowedIn = [];\n                this.props.selected.infiniteSource = true;\n                this.updateContained();\n            }\n        } else {\n            this.props.selected.open_in_slots = 1;\n            delete this.props.selected.infiniteSource;\n            delete this.props.selected.quantityPerInfinite;\n            delete this.props.selected.timePerInfinite;\n            this.props.selected.allowedIn = this.props.selected.allowedInClobbered;\n        }\n\n        // force an update anyways.\n        this.setState({dummy: !this.state.dummy});\n        this.debouncedUpdateGraph();\n    };\n\n    infiniteSourceEligible = () => {\n        return this.props.selected.machine && this.props.selected.machine.name === 'Container' && (this.props.selected.open_in_slots === 1) || (this.props.selected.infiniteSource && this.props.selected.open_in_slots === 0)\n    };\n\n    hasInfiniteSource = () => {\n        return this.props.selected.machine && this.props.selected.infiniteSource;\n    };\n\n    updateContained = () => {\n        const usedSet = this.props.selected.allowedOut;\n\n        const contained = [];\n        usedSet.forEach(it => {\n            contained.push(this.props.items.filter(item => item.id === it)[0]);\n        });\n\n        this.props.selected.containedItems = contained;\n    };\n\n    handleChange = event => {\n        let usedSet = event.target.value;\n        if (this.props.selected.open_out_slots === 0) {\n            usedSet = Array.from(new Set([...event.target.value, this.props.selected.allowedInClobbered]))\n        }\n\n        this.props.selected.allowedOut = usedSet;\n\n        this.updateContained();\n\n        this.setState({ selectedSource: usedSet });\n\n        this.debouncedUpdateGraph();\n    };\n\n    handleTextChangeQuantity = event => {\n        this.props.selected.quantityPerInfinite = parseInt(event.target.value);\n        this.setState({quantity: event.target.value});\n        this.debouncedUpdateGraph();\n    };\n\n    handleTextChangeSeconds = event => {\n        this.props.selected.timePerInfinite = parseInt(event.target.value);\n        this.setState({time: event.target.value});\n        this.debouncedUpdateGraph();\n    };\n\n    render() {\n        const {classes, label} = this.props;\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant='h5'>{label}</Typography>\n                <Typography variant=\"body1\">\n                <IconButton color=\"secondary\" className={classes.button} onClick={this.downgrade}>\n                    <ArrowDownwardIcon/>\n                </IconButton>\n                {this.props.selected.instance.name}\n                <IconButton color=\"primary\" className={classes.button} onClick={this.upgrade}>\n                    <ArrowUpwardIcon/>\n                </IconButton>\n                </Typography>\n                {this.props.overclock !== -1 && this.props.selected.machine.name !== 'Container' && this.props.selected.machine.name !== 'Logistic' ?\n                    <React.Fragment>\n                        <Typography id=\"label\" className={classes.overclock} variant=\"body1\">Overclock: {this.state.sliderValue}%</Typography>\n                        <Slider\n                            classes={{ root: classes.slider }}\n                            value={this.state.sliderValue}\n                            min={0}\n                            max={250}\n                            step={1}\n                            onChange={this.changeSlider}\n                        />\n                    </React.Fragment>\n                    : null}\n                {\n                    this.infiniteSourceEligible() ?\n                        <React.Fragment>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.props.selected.infiniteSource || false}\n                                        onChange={this.handleCheckboxChange}\n                                        value=\"snapToGrid\"\n                                        className={classes.checkbox}\n                                    />\n                                }\n                                label=\"Use as Infinite Source\"\n                                className={classes.checkboxLabel}\n                            />\n                        </React.Fragment>\n                        : null\n                }\n\n                {this.hasInfiniteSource() ?\n                    <div>\n                        <FormControl>\n                            <InputLabel htmlFor=\"select-multiple-chip\">Contents</InputLabel>\n                                <Select\n                                    multiple\n                                    className={classes.itemInput}\n                                    value={this.state.selectedSource}\n                                    onChange={this.handleChange}\n                                    input={<Input id=\"select-multiple-chip\" />}\n                                    renderValue={selected => (\n                                        <div className={classes.chips}>\n                                            {selected.map(value => (\n                                                <Chip key={value} label={this.itemMap[value].name} className={classes.chip} />\n                                            ))}\n                                        </div>\n                                    )}\n                                    MenuProps={MenuProps}\n                                >\n                                    {this.items.map(item => {\n                                        return <MenuItem key={item.id} value={item.id}><img className={classes.icon} src={item.icon} alt=\"\" height=\"30\" width=\"30\" />{item.name}</MenuItem>\n                                    })\n                                    }\n                                </Select>\n                            <div className={classes.formGroup}>\n                            <TextField\n                                id=\"quantity\"\n                                label=\"Quantity (each)\"\n                                className={classes.textField}\n                                value={this.state.quantity}\n                                onChange={this.handleTextChangeQuantity}\n                                margin=\"normal\"\n                                type=\"number\" inputProps={{ min: \"0\", max: \"999999\", step: \"1\" }}\n                            />\n                                <div className={classes.textMiddle}>every</div>\n                            <TextField\n                                id=\"quantity\"\n                                label=\"Seconds\"\n                                className={classes.textField}\n                                value={this.state.time}\n                                onChange={this.handleTextChangeSeconds}\n                                margin=\"normal\"\n                                type=\"number\" inputProps={{ min: \"1\", max: \"60\", step: \"1\" }}\n                            />\n                            </div>\n                        </FormControl>\n                    </div>\n                    : null}\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(SelectorPanel);","import lf from 'lovefield';\n\n/** @namespace lf.Type */\nconst schemaBuilder = lf.schema.create('test', 6);\n\nschemaBuilder.createTable('node_type')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('name', lf.Type.STRING);\n\nschemaBuilder.createTable('machine_node_type')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('hidden', lf.Type.BOOLEAN);\n\nschemaBuilder.createTable('machine_version')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('color', lf.Type.STRING)\n    .addColumn('rank', lf.Type.INTEGER)\n    .addColumn('representation', lf.Type.STRING)\n    .addColumn('name', lf.Type.STRING)\n    .addNullable(['color', 'rank']);\n\nschemaBuilder.createTable('machine_class')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('icon', lf.Type.STRING)\n    .addNullable(['icon'])\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('plural', lf.Type.STRING);\n\nschemaBuilder.createTable('machine_node')\n    .addColumn('id', lf.Type.INTEGER)\n    .addColumn('speed', lf.Type.INTEGER)\n    .addColumn('power', lf.Type.INTEGER)\n    .addNullable(['power'])\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('node_type_id', lf.Type.STRING)\n    .addColumn('icon', lf.Type.STRING)\n    .addColumn('input_slots', lf.Type.INTEGER)\n    .addColumn('output_slots', lf.Type.INTEGER);\n\n\nschemaBuilder.createTable('path_type')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('speed', lf.Type.INTEGER)\n    .addColumn('rank', lf.Type.INTEGER)\n    .addColumn('machine_class_id', lf.Type.INTEGER)\n    .addNullable(['machine_class_id'])\n    .addColumn('hidden', lf.Type.BOOLEAN);\n\nschemaBuilder.createTable('purity_type')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('quantity', lf.Type.INTEGER);\n\nschemaBuilder.createTable('spring_type')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('hidden', lf.Type.BOOLEAN);\n\nschemaBuilder.createTable('spring')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('spring_type_id', lf.Type.INTEGER)\n    .addColumn('machine_class_id', lf.Type.INTEGER)\n    .addColumn('item_id', lf.Type.INTEGER)\n    .addColumn('icon', lf.Type.STRING)\n    .addNullable(['item_id', 'icon'])\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('purities', lf.Type.OBJECT);\n\nschemaBuilder.createTable('item')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('icon', lf.Type.STRING)\n    .addColumn('hidden', lf.Type.BOOLEAN);\n\nschemaBuilder.createTable('recipe')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('inputs', lf.Type.OBJECT)\n    .addColumn('machine_class_id', lf.Type.INTEGER)\n    .addColumn('item_id', lf.Type.INTEGER) // The output Item Id\n    .addColumn('time', lf.Type.INTEGER)\n    .addColumn('quantity', lf.Type.INTEGER)\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('player_unlock_id', lf.Type.INTEGER)\n    .addColumn('icon', lf.Type.STRING)\n    .addNullable(['item_id', 'icon', 'player_unlock_id']);\n\nschemaBuilder.createTable('player_unlock')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('chip_name', lf.Type.STRING)\n    .addNullable(['chip_name'])\n    .addColumn('hidden', lf.Type.BOOLEAN);\n\nconst getTableEntryIdByName = (table, name) => {\n    return (db) => {\n        const tableRef = db.getSchema().table(table);\n        return new Promise((resolve, reject) => {\n            db.select().from(tableRef).where(tableRef.name.eq(name)).exec()\n                .then((rows) => {\n                    if (rows.length == 1) {\n                        resolve(rows[0].id);\n                    } else {\n                        reject('No element found or too many matching rows: ' + table + '|' + name + '|' + rows);\n                    }\n                });\n        });\n    };\n};\n\nconst getTableEntries = (table, db) => {\n    const tableRef = db.getSchema().table(table);\n    return new Promise((resolve) => {\n        db.select().from(tableRef).exec()\n            .then((rows) => {\n                resolve(rows);\n            });\n    });\n};\n\nconst baseUrl = 'https://raw.githubusercontent.com/rhocode/rhocode.github.io/master/img/satoolsfactory_icons/';\n\nconst parseRecipeIngredients = recipes => {\n    return async db => {\n        for (let i = 0; i < recipes.length; i++) {\n            const recipe = recipes[i];\n            const keys = Object.keys(recipe);\n            for (let j = 0; j < keys.length; j++) {\n                const item = recipe[keys[j]];\n                if (typeof item == 'function') {\n                    recipe[keys[j]] = await item(db);\n                }\n            }\n        }\n\n        return recipes;\n    };\n};\n\nconst generateSpringList = async db => {\n    const ret = [];\n    const types = ['Coal Ore', 'Iron Ore', 'Limestone Ore', 'Copper Ore', 'Caterium Ore', 'Crude Oil', 'Raw Quartz', 'Sulfur', 'Bauxite',\n        'S.A.M. Ore', 'Silica', 'Uranium'];\n    const machine_type_miner = await getTableEntryIdByName('machine_class', 'Miner')(db);\n    const machine_type_container = await getTableEntryIdByName('machine_class', 'Container')(db);\n    const spring_type_miner = await getTableEntryIdByName('spring_type', 'Miner')(db);\n    const spring_type_container = await getTableEntryIdByName('spring_type', 'Container')(db);\n    const purity_types = await getTableEntries('purity_type', db);\n    for (let i = 0; i < types.length; i++) {\n        const ore = await getTableEntryIdByName('item', types[i])(db);\n\n        const structure = {\n            item_id: ore,\n            machine_class_id: machine_type_miner,\n            spring_type_id: spring_type_miner,\n            purities: purity_types\n        };\n        ret.push(structure);\n    }\n\n    const container = {\n        machine_class_id: machine_type_container,\n        spring_type_id: spring_type_container\n    };\n\n    ret.push(container);\n\n    return ret;\n};\n\nconst data = [\n    {\n        key: 'purity_type',\n        value: [\n            {name: 'Impure', quantity: 30},\n            {name: 'Normal', quantity: 60},\n            {name: 'Pure', quantity: 120}\n        ]\n    },\n    {\n        key: 'item',\n        value: [\n            {\n                name: 'Copper Ore',\n                icon: baseUrl + 'Copper_Ore.png'\n            },\n            {\n                name: 'Iron Ore',\n                icon: baseUrl + 'Iron_Ore.png'\n            },\n            {\n                name: 'Limestone Ore',\n                icon: baseUrl + 'Limestone.png'\n            },\n            {\n                name: 'Coal Ore',\n                icon: baseUrl + 'Coal.png'\n            },\n            {\n                name: 'Iron Ingot',\n                icon: baseUrl + 'Iron_Ingot.png'\n            },\n            {\n                name: 'Copper Ingot',\n                icon: baseUrl + 'Copper_Ingot.png'\n            },\n            {\n                name: 'Iron Plate',\n                icon: baseUrl + 'Iron_Plate.png'\n            },\n            {\n                name: 'Iron Rod',\n                icon: baseUrl + 'Iron_Rod.png'\n            },\n            {\n                name: 'Screw',\n                icon: baseUrl + 'Screw.png'\n            },\n            {\n                name: 'Wire',\n                icon: baseUrl + 'Wire.png'\n            },\n            {\n                name: 'Cable',\n                icon: baseUrl + 'Cable.png'\n            },\n            {\n                name: 'Concrete',\n                icon: baseUrl + 'Concrete.png'\n            },\n            {\n                name: 'Reinforced Iron Plate',\n                icon: baseUrl + 'Reinforced_Iron_Plate.png'\n            },\n            {\n                name: 'Modular Frame',\n                icon: baseUrl + 'Modular_Frame.png'\n            },\n            {\n                name: 'Rotor',\n                icon: baseUrl + 'Rotor.png'\n            },\n            {\n                name: 'Caterium Ore',\n                icon: baseUrl + 'Caterium_Ore.png'\n            },\n            {\n                name: 'Caterium Ingot',\n                icon: baseUrl + 'Caterium_Ingot.png'\n            },\n            {\n                name: 'Quickwire',\n                icon: baseUrl + 'Quickwire.png'\n            },\n            {\n                name: 'Steel Ingot',\n                icon: baseUrl + 'Steel_Ingot.png'\n            },\n            {\n                name: 'Steel Beam',\n                icon: baseUrl + 'Steel_Beam.png'\n            },\n            {\n                name: 'Steel Pipe',\n                icon: baseUrl + 'Steel_Pipe.png'\n            },\n            {\n                name: 'Encased Industrial Beam',\n                icon: baseUrl + 'Encased_Industrial_Beam.png'\n            },\n            {\n                name: 'Stator',\n                icon: baseUrl + 'Stator.png'\n            },\n            {\n                name: 'Heavy Modular Frame',\n                icon: baseUrl + 'Heavy_Modular_Frame.png'\n            },\n            {\n                name: 'Motor',\n                icon: baseUrl + 'Motor.png'\n            },\n            {\n                name: 'Crude Oil',\n                icon: baseUrl + 'Crude_Oil.png'\n            },\n            {\n                name: 'Raw Quartz',\n                icon: baseUrl + 'Raw_Quartz.png'\n            },\n            {\n                name: 'Sulfur',\n                icon: baseUrl + 'Sulfur.png'\n            },\n            {\n                name: 'Bauxite',\n                icon: baseUrl + 'Bauxite.png'\n            },\n            {\n                name: 'S.A.M. Ore',\n                icon: baseUrl + 'SAM_Ore.png'\n            },\n            {\n                name: 'Silica',\n                icon: baseUrl + 'Silica.png'\n            },\n            {\n                name: 'Uranium',\n                icon: baseUrl + 'Uranium.png'\n            },\n            {\n                name: 'Plastic',\n                icon: baseUrl + 'Plastic.png'\n            },\n            {\n                name: 'Fuel',\n                icon: baseUrl + 'Fuel.png'\n            },\n            {\n                name: 'Rubber',\n                icon: baseUrl + 'Rubber.png'\n            },\n            {\n                name: 'Circuit Board',\n                icon: baseUrl + 'Circuit_Board.png'\n            },\n            {\n                name: 'Computer',\n                icon: baseUrl + 'Computer.png'\n            },\n            {\n                name: 'A.I. Limiter',\n                icon: baseUrl + 'AI_Limiter.png'\n            },\n            {\n                name: 'Supercomputer',\n                icon: baseUrl + 'Supercomputer.png'\n            },\n            {\n                name: 'High-Speed Connector',\n                icon: baseUrl + 'High_Speed_Connector.png'\n            },\n            {\n                name: 'Nuclear Fuel Rod',\n                icon: baseUrl + 'Nuclear_Fuel_Rod.png'\n            },\n            {\n                name: 'Aluminum Ingot',\n                icon: baseUrl + 'Aluminum_Ingot.png'\n            },\n            {\n                name: 'Aluminum Sheet',\n                icon: baseUrl + 'Aluminum_Sheet.png'\n            },\n            {\n                name: 'Heat Sink',\n                icon: baseUrl + 'Heat_Sink.png'\n            },\n            {\n                name: 'Radio Control Unit',\n                icon: baseUrl + 'Radio_Control_Unit.png'\n            },\n            {\n                name: 'Turbo Motor',\n                icon: baseUrl + 'Turbo_Motor.png'\n            },\n            {\n                name: 'Battery',\n                icon: baseUrl + 'Battery.png'\n            },\n            {\n                name: 'Quantum Crystal',\n                icon: baseUrl + 'Quantum_Crystal.png'\n            },\n            {\n                name: 'Superposition Oscillator',\n                icon: baseUrl + 'Superposition_Oscillator.png'\n            },\n            {\n                name: 'Quantum Computer',\n                icon: baseUrl + 'Quantum_Computer.png'\n            },\n            {\n                name: 'Biomass',\n                icon: baseUrl + 'Biomass.png'\n            },\n            {\n                name: 'Biofuel',\n                icon: baseUrl + 'Biofuel.png'\n            },\n            {\n                name: 'S.A.M. Ingot',\n                icon: baseUrl + 'SAM_Ingot.png'\n            }\n        ]\n    },\n    {\n        key: 'node_type',\n        value: [\n            {name: 'Machine Node'},\n            {name: 'Resource Node'},\n        ]\n    },\n    {\n        key: 'machine_version',\n        value: [\n            {name: 'internal', representation: ''},\n            {name: 'Mk.1', rank: 0, representation: 'I'},\n            {name: 'Mk.2', rank: 1, representation: 'II'},\n            {name: 'Mk.3', rank: 2, representation: 'III'},\n            {name: 'Mk.4', rank: 3, representation: 'IV'},\n            {name: 'Mk.5', rank: 4, representation: 'V'},\n            {name: 'Mk.6', rank: 5, representation: 'VI'},\n            {name: 'S', rank: 6, representation: 'S'}, // For Splitters\n            {name: 'M', rank: 7, representation: 'M'},\n        ]\n    },\n    {\n        key: 'path_type',\n        value: [\n            {\n                name: 'Item Belt Mk 1',\n                speed: 60,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                rank: 0\n            },\n            {\n                name: 'Item Belt Mk 2',\n                speed: 120,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                rank: 1\n            },\n            {\n                name: 'Item Belt Mk 3',\n                speed: 270,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.3'),\n                rank: 2\n            },\n            {\n                name: 'Item Belt Mk 4',\n                speed: 450,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.4'),\n                rank: 3\n            },\n            {\n                name: 'Item Belt Mk 5',\n                speed: 6600,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.5'),\n                rank: 4\n            },\n            {\n                name: 'Item Belt Mk 6',\n                speed: 900,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.6'),\n                rank: 5\n            },\n            {\n                name: 'internal',\n                speed: 9999999,\n                machine_version_id: getTableEntryIdByName('machine_version', 'internal'),\n                rank: -1\n            },\n        ]\n    },\n    {\n        key: 'machine_class',\n        value: [\n            {name: 'Constructor', plural: 'Constructors', icon: baseUrl + 'Constructor.png'},\n            {name: 'Miner', plural: 'Miners', icon: baseUrl + 'Miner_MK1.png'},\n            {name: 'Assembler', plural: 'Assemblers', icon: baseUrl + 'Assembler.png'},\n            {name: 'Refinery', plural: 'Refineries', icon: baseUrl + 'Oil_Refinery.png'},\n            {name: 'Smelter', plural: 'Smelters', icon: baseUrl + 'Smelter.png'},\n            {name: 'Generator', plural: 'Generators', icon: baseUrl + 'Coal_Generator.png'},\n            {name: 'Manufacturer', plural: 'Manufacturer', icon: baseUrl + 'Manufacturer.png'},\n            {name: 'Container', plural: 'Containers', icon: baseUrl + 'Storage_Container_MK1.png'},\n            {name: 'Logistic', plural: 'Logistics', icon: baseUrl + 'Splitter.png'},\n            {name: 'Foundry', plural: 'Foundries', icon: baseUrl + 'Foundry_MK1.png'}\n        ]\n    },\n    {\n        key: 'machine_node',\n        value: [\n            {\n                name: 'Container Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Container'),\n                speed: 999999,\n                icon: baseUrl + 'Storage_Container_MK1.png',\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Container Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Container'),\n                speed: 999999,\n                icon: baseUrl + 'Storage_Container_MK2.png',\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Splitter',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'S'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Logistic'),\n                speed: 999999,\n                icon: baseUrl + 'Splitter.png',\n                input_slots: 1,\n                output_slots: 3\n            },\n            {\n                name: 'Merger',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'M'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Logistic'),\n                speed: 999999,\n                icon: baseUrl + 'Merger.png',\n                input_slots: 3,\n                output_slots: 1\n            },\n            {\n                name: 'Miner Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Miner'),\n                speed: 100,\n                power: 5,\n                icon: baseUrl + 'Miner_MK1.png',\n                input_slots: 0,\n                output_slots: 1\n            },\n            {\n                name: 'Miner Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Miner'),\n                icon: baseUrl + 'Miner_MK2.png',\n                speed: 200,\n                power: 12,\n                hidden: true,\n                input_slots: 0,\n                output_slots: 1\n            },\n            {\n                name: 'Oil Pump',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Miner'),\n                speed: 100,\n                power: 40 ,\n                icon: baseUrl + 'Oil_Pump.png',\n                input_slots: 0,\n                output_slots: 1\n            },\n            {\n                name: 'Smelter Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                speed: 100,\n                power: 4,\n                icon: baseUrl + 'Smelter.png',\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Smelter Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                icon: baseUrl + 'Smelter.png',\n                speed: 200,\n                power: 8,\n                hidden: true,\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Constructor Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                icon: baseUrl + 'Constructor.png',\n                speed: 100,\n                power: 4,\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Constructor Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                icon: baseUrl + 'Constructor.png',\n                speed: 200,\n                power: 8,\n                hidden: true,\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Oil Refinery',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Refinery'),\n                icon: baseUrl + 'Oil_Refinery.png',\n                speed: 100,\n                power: 50,\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Assembler Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                icon: baseUrl + 'Assembler.png',\n                speed: 100,\n                power: 15,\n                input_slots: 2,\n                output_slots: 1\n            },\n            {\n                name: 'Assembler Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                icon: baseUrl + 'Assembler.png',\n                speed: 100,\n                hidden: true,\n                power: 30,\n                input_slots: 2,\n                output_slots: 1\n            },\n            {\n                name: 'Manufacturer Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Manufacturer'),\n                icon: baseUrl + 'Manufacturer.png',\n                speed: 100,\n                power: 55,\n                hidden: true,\n                input_slots: 4,\n                output_slots: 1\n            },\n            {\n                name: 'Manufacturer Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Manufacturer'),\n                icon: baseUrl + 'Manufacturer.png',\n                speed: 200,\n                power: 110,\n                hidden: true,\n                input_slots: 4,\n                output_slots: 1\n            },\n            {\n                name: 'Coal Generator',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Generator'),\n                icon: baseUrl + 'Coal_Generator.png',\n                speed: 100,\n                power: -50,\n                hidden: true,\n                input_slots: 1,\n                output_slots: 0\n            },\n            {\n                name: 'Fuel Generator',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Generator'),\n                icon: baseUrl + 'Fuel_Generator.png',\n                speed: 100,\n                power: -150,\n                hidden: true,\n                input_slots: 1,\n                output_slots: 0\n            },\n            {\n                name: 'Biomass Burner',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Generator'),\n                icon: baseUrl + 'Biomass_Burner.png',\n                speed: 100,\n                power: -20,\n                hidden: true,\n                input_slots: 1,\n                output_slots: 0\n            },\n            {\n                name: 'Foundry Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                icon: baseUrl + 'Foundry_MK1.png',\n                speed: 100,\n                power: 16,\n                hidden: true,\n                input_slots: 2,\n                output_slots: 1\n            },\n            {\n                name: 'Foundry Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                icon: baseUrl + 'Foundry_MK2.png', //TODO get MK2 icon\n                speed: 38,\n                hidden: true,\n                input_slots: 2,\n                output_slots: 1\n            }\n        ]\n    },\n    {\n        key: 'spring_type',\n        value: [\n            {name: 'Miner'},\n            {name: 'Container'}\n        ]\n    },\n    {\n        key: 'player_unlock',\n        value: [\n            {name: 'Reinforced Iron Plate (Alt.)'},\n            {name: 'Stitched Iron Plate'},\n            {name: 'Caterium Wire'},\n            {name: 'Encased Industrial Beam (Alt.)'},\n            {name: 'Heavy Modular Frame (Alt.)'},\n            {name: 'Iron Ingot (Alt.)'},\n            {name: 'Iron Wire'},\n            {name: 'Modular Frame (Alt.)'},\n            {name: 'Rotor (Alt.)'},\n            {name: 'Stator (Alt.)'},\n            {name: 'Steel Ingot (Alt.)'},\n            {name: 'Screw (Alt.)'},\n            {name: 'Quickwire (Alt.)'},\n\n            {name: 'Rubber Cable'},\n            {name: 'Circuit Board'},\n            {name: 'Caterium Circuit Board'},\n            {name: 'Caterium Computer'},\n\n            // time = output_quantity * 60 / ppm\n        ]\n    },\n    {\n        key: 'spring',\n        value: generateSpringList\n    },\n    {\n        key: 'recipe',\n        value: [\n            {\n                name: 'Iron Ingot',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ore'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                time: 2,\n                power: 4,\n                quantity: 1\n            },\n            {\n                name: 'Copper Ingot',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Copper Ore'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                item_id: getTableEntryIdByName('item', 'Copper Ingot'),\n                time: 2,\n                quantity: 1\n            },\n            {\n                name: 'Caterium Ingot',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Caterium Ore'),\n                    quantity: 4\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                item_id: getTableEntryIdByName('item', 'Caterium Ingot'),\n                time: 4,\n                quantity: 1,\n            },\n            {\n                name: 'Iron Plate',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Iron Plate'),\n                time: 4,\n                quantity: 1\n            },\n            {\n                name: 'Iron Rod',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Iron Rod'),\n                time: 4,\n                quantity: 1\n            },\n            {\n                name: 'Wire',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Copper Ingot'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Wire'),\n                time: 4,\n                quantity: 3\n            },\n            {\n                name: 'Iron Wire',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Wire'),\n                time: 8,\n                quantity: 9,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Iron Wire')\n            },\n            {\n                name: 'Caterium Wire',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Caterium Ingot'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Wire'),\n                time: 8,\n                quantity: 9,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Caterium Wire')\n            },\n            {\n                name: 'Cable',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Wire'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Cable'),\n                time: 4,\n                quantity: 1\n            },\n            {\n                name: 'Screw',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Rod'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Screw'),\n                time: 4,\n                quantity: 6\n            },\n            {\n                name: 'Screw (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Screw'),\n                time: 8,\n                quantity: 12,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Screw (Alt.)')\n            },\n            {\n                name: 'Concrete',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Limestone Ore'),\n                    quantity: 3\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Concrete'),\n                time: 4,\n                quantity: 1\n            },\n            {\n                name: 'Reinforced Iron Plate',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Plate'),\n                    quantity: 4\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Screw'),\n                    quantity: 24\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Reinforced Iron Plate'),\n                time: 12,\n                quantity: 1,\n            },\n            {\n                name: 'Reinforced Iron Plate (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Plate'),\n                    quantity: 10\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Screw'),\n                    quantity: 24\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Reinforced Iron Plate'),\n                time: 24,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Reinforced Iron Plate (Alt.)')\n            },\n            {\n                name: 'Stitched Iron Plate',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Plate'),\n                    quantity: 6\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Wire'),\n                    quantity: 30\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Reinforced Iron Plate'),\n                time: 24,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Stitched Iron Plate')\n            },\n            {\n                name: 'Rotor',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Rod'),\n                    quantity: 3\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Screw'),\n                    quantity: 22\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Rotor'),\n                time: 10,\n                quantity: 1,\n            },\n            {\n                name: 'Rotor (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                    quantity: 6\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Wire'),\n                    quantity: 20\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Rotor'),\n                time: 20,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Rotor (Alt.)')\n            },\n            {\n                name: 'Modular Frame',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Reinforced Iron Plate'),\n                    quantity: 3\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Iron Rod'),\n                    quantity: 6\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Modular Frame'),\n                time: 15,\n                quantity: 1,\n            },\n            {\n                name: 'Modular Frame (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Reinforced Iron Plate'),\n                    quantity: 6\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                    quantity: 6\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Modular Frame'),\n                time: 30,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Modular Frame (Alt.)')\n            },\n            {\n                name: 'Encased Industrial Beam',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Steel Beam'),\n                    quantity: 4\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Concrete'),\n                    quantity: 5\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Encased Industrial Beam'),\n                time: 15,\n                quantity: 1,\n            },\n            {\n                name: 'Encased Industrial Beam (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                    quantity: 18\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Concrete'),\n                    quantity: 10\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Encased Industrial Beam'),\n                time: 30,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Encased Industrial Beam (Alt.)')\n            },\n            {\n                name: 'Heavy Modular Frame',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Modular Frame'),\n                    quantity: 5\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Encased Industrial Beam'),\n                    quantity: 5\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                    quantity: 15\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Screw'),\n                    quantity: 90\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Manufacturer'),\n                item_id: getTableEntryIdByName('item', 'Heavy Modular Frame'),\n                time: 30,\n                quantity: 1,\n            },\n            {\n                name: 'Heavy Modular Frame (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Modular Frame'),\n                    quantity: 8\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Encased Industrial Beam'),\n                    quantity: 10\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                    quantity: 36\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Concrete'),\n                    quantity: 25\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Manufacturer'),\n                item_id: getTableEntryIdByName('item', 'Heavy Modular Frame'),\n                time: 64, //TODO\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Heavy Modular Frame (Alt.)')\n            },\n            {\n                name: 'Iron Ingot (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ore'),\n                    quantity: 1\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Copper Ore'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                time: 4,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Iron Ingot (Alt.)')\n            },\n            {\n                name: 'Steel Ingot',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ore'),\n                    quantity: 3\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Coal Ore'),\n                    quantity: 3\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                item_id: getTableEntryIdByName('item', 'Steel Ingot'),\n                time: 4,\n                quantity: 2,\n            },\n            {\n                name: 'Steel Ingot (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                    quantity: 3\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Coal Ore'),\n                    quantity: 6\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                item_id: getTableEntryIdByName('item', 'Steel Ingot'),\n                time: 8,\n                quantity: 6,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Steel Ingot (Alt.)')\n            },\n            {\n                name: 'Steel Beam',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Steel Ingot'),\n                    quantity: 3\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Steel Beam'),\n                time: 6,\n                quantity: 1,\n            },\n            {\n                name: 'Steel Pipe',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Steel Ingot'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                time: 4,\n                quantity: 1,\n            },\n            {\n                name: 'Quickwire',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Caterium Ingot'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Quickwire'),\n                time: 4,\n                quantity: 4,\n            },\n            {\n                name: 'Quickwire (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Caterium Ingot'),\n                    quantity: 1\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Copper Ingot'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Quickwire'),\n                time: 8,\n                quantity: 12,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Quickwire (Alt.)')\n            },\n            {\n                name: 'Motor',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Rotor'),\n                    quantity: 2\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Stator'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Motor'),\n                time: 12,\n                quantity: 1,\n            },\n            {\n                name: 'Aluminum Ingot',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Bauxite'),\n                    quantity: 7\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Silica'),\n                    quantity: 6\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                item_id: getTableEntryIdByName('item', 'Aluminum Ingot'),\n                time: 4,\n                quantity: 2,\n            },\n            {\n                name: 'S.A.M. Ingot',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'S.A.M. Ore'),\n                    quantity: 6\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                item_id: getTableEntryIdByName('item', 'S.A.M. Ingot'),\n                time: 12,\n                quantity: 1,\n            },\n            {\n                name: 'Biofuel',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Biomass'),\n                    quantity: 4\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Biofuel'),\n                time: 4,\n                quantity: 2,\n            }\n        ]\n    }\n];\n\nconst firebaseData = {};\ndata.forEach(elem => {\n    firebaseData[elem.key] = elem.value;\n});\n\nconst createDatabase = () => {\n    const createDB = async () => {\n        const p = schemaBuilder.connect({\n        }).then(async db => {\n            const schema = db.getSchema();\n            const promiseList = [];\n\n            const firebaseRaw = {};\n\n            for (let i = 0; i < data.length; i++) {\n                const obj = data[i];\n                const key = obj.key;\n                const table = schema.table(key);\n                const rows = [];\n                const rowsRaw = [];\n                const valuePromiseRows = [];\n\n                if (typeof obj.value == 'function') {\n                    const value = await obj.value(db);\n                    value.forEach((row, index) => {\n                        row.hidden = row.hidden || false;\n                        row.id = index;\n                        rows.push(table.createRow(row));\n                        rowsRaw.push(row);\n                    });\n                } else {\n                    for (let j = 0; j < obj.value.length; j++) {\n                        const index = j;\n                        const row = obj.value[j];\n                        row.hidden = row.hidden || false;\n                        row.id = index;\n\n                        const blockingPromises = Object.keys(row).map(async k => {\n                            if (typeof row[k] == 'function') {\n                                row[k] = await row[k](db);\n                            }\n                            return Promise.resolve();\n                        });\n\n                        await Promise.all(blockingPromises);\n                        rows.push(table.createRow(row));\n                        rowsRaw.push(row);\n                        valuePromiseRows.push(Promise.resolve());\n                    }\n                }\n\n                firebaseRaw[key] = rowsRaw;\n                await Promise.all(valuePromiseRows);\n                await db.insertOrReplace().into(table).values(rows).exec();\n                console.info('Loaded ' + rows.length + ' into ' + key);\n            }\n\n            console.log(\"Here is the finished doc\");\n            console.log(JSON.stringify(firebaseRaw));\n            await Promise.all(promiseList);\n            return db;\n        });\n\n        return await p;\n    };\n    return createDB();\n};\n\nexport default createDatabase;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {createMuiTheme, MuiThemeProvider, withStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport InfoIcon from '@material-ui/icons/Info';\nimport * as ReactGA from 'react-ga';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\n\nimport Button from '@material-ui/core/Button';\nimport Loader from './Loader';\nimport GraphSvg from './GraphSvg';\n\nimport SidebarButton from './SidebarButton';\nimport FabPopup from './FabPopup';\nimport SidebarPopup from './SidebarPopup';\nimport NestedSidebarButton from './NestedSidebarButton';\nimport SimpleSidebarButton from './SimpleSidebarButton';\nimport SidebarPanel from './SidebarPanel';\nimport ClearButton from './ClearButton';\nimport ShareButton from './ShareButton';\nimport SelectorPanel from './SelectorPanel';\nimport {loadHash, useExperimentalFeature} from \"./GraphSvg/util\";\n\nimport firebase from 'firebase/app'\nimport 'firebase/database'\nimport 'firebase/auth'\nimport createDatabase from \"./newData\";\n\nconst drawerWidth = 310;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexGrow: 1,\n        flexBasis: 'auto',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        display: 'flex',\n        paddingTop: 64,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        position: 'unset'\n    },\n    drawerTitle: {\n        paddingLeft: 15,\n        paddingTop: 5,\n    },\n    content: {\n        display: 'flex',\n        flexGrow: 1,\n        paddingTop: 64,\n    },\n    toolbar: theme.mixins.toolbar,\n    logo: {\n        width: drawerWidth,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    pathIcon: {\n        height: 15,\n        width: 15,\n        display: 'inline-block'\n    },\n    pathText: {\n        display: 'inline-block'\n    },\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    button: {\n        flex: '0 0 100%',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    inlineDialogButton: {\n        paddingTop: 10,\n        paddingBottom: 10,\n    },\n    dialogButton: {\n        marginTop: 10,\n    },\n    dialogContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    clearButton: {\n        paddingTop: 20,\n    },\n});\n\nconst palette = {\n    primary: { main: '#FF9100' },\n    secondary: { main: '#FF3D00', contrastText: '#FAFAFA' }\n};\n\nconst themeName = 'Pizazz Vermilion Gayal';\n\nconst theme = createMuiTheme({ typography: {\n        useNextVariants: true,\n    }, palette, themeName: themeName});\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false\n        };\n    }\n\n    getRefkeyTableFireBase(table) {\n        const db = this.state.fbdb;\n        const tableRef = db.ref('/' + table);\n        return new Promise(resolve => tableRef.once(\"value\").then(results => resolve(results.val())));\n    }\n\n    generateRecursiveStructureFireBase(startingTable) {\n        const db = this.state.fbdb;\n        const starting = db.ref('/' + startingTable);\n        this.globalStructure = this.globalStructure || {};\n        const globalStructure = this.globalStructure;\n\n        return starting.once(\"value\").then(item => item.val()).then( async results => {\n            if (results.length > 0) {\n                globalStructure[startingTable] = results;\n                const refKeysToProcess = Object.keys(results[0]).filter(str => str.endsWith('_id'));\n\n                while (refKeysToProcess.length > 0) {\n                    const refKey = refKeysToProcess.pop();\n                    const tableName = refKey.slice(0, -3);\n                    if (!globalStructure[tableName]) {\n                        globalStructure[tableName] = await this.getRefkeyTableFireBase(tableName);\n                        Object.keys(globalStructure[tableName]).filter(str => str.endsWith('_id'))\n                            .forEach(name => {\n                                if (!globalStructure[name.slice(0, -3)]) {\n                                    refKeysToProcess.push(name);\n                                }\n                            });\n                    }\n                }\n\n                const recursiveFind = (element, functionToApply) => {\n                    if (Array.isArray(element)) {\n                        element.forEach((elem, index) => {\n                            const shouldChangeThis = recursiveFind(elem, functionToApply);\n                            if (shouldChangeThis) {\n                                console.error('Why are we doing this to an array?');\n                                element[index] = functionToApply(elem);\n                            }\n                        });\n                        return false;\n                    } else if (typeof element === 'object') {\n                        Object.keys(element).forEach(key => {\n                            const elem = element[key];\n\n                            const shouldChangeThis = recursiveFind(elem, functionToApply);\n                            if (shouldChangeThis) {\n                                functionToApply(elem, key, element);\n                            }\n                        });\n                        return false;\n                    } else {\n                        return true;\n                    }\n                };\n\n                Object.keys(globalStructure).forEach(key => {\n                    const rows = globalStructure[key];\n\n                    rows.forEach(row => {\n                        Object.keys(row).filter(str => str.endsWith('_id')).forEach(rowKey => {\n                            const refId = row[rowKey];\n                            const tableName = rowKey.slice(0, -3);\n                            const associatedData = globalStructure[tableName];\n                            delete row[rowKey];\n                            const possibleData = associatedData.filter(elem => elem.id === refId);\n                            if (possibleData.length === 1) {\n                                row[tableName] = possibleData[0];\n                            } else {\n                                throw new Error('Unrecognized Id ' + refId + ' in ' + rowKey + ' within ' + key);\n                            }\n                        });\n                    });\n                });\n\n                Object.keys(globalStructure).forEach(key => {\n                    const rows = globalStructure[key];\n                    rows.forEach(row => {\n                        Object.keys(row).filter(str => str.endsWith('_id')).forEach(rowKey => {\n                            const refId = row[rowKey];\n                            const tableName = rowKey.slice(0, -3);\n                            const associatedData = globalStructure[tableName];\n                            delete row[rowKey];\n\n                            const possibleData = associatedData.filter(elem => elem.id === refId);\n                            if (possibleData.length === 1) {\n                                row[tableName] = possibleData[0];\n                            } else {\n                                throw new Error('Unrecognized Id ' + refId + ' in ' + rowKey + ' within ' + key);\n                            }\n                        });\n                        Object.keys(row).filter(str => !str.endsWith('_id')).forEach(rowKey => {\n                            const rowValue = row[rowKey];\n                            const replaceTable = (id, id_name, object) => {\n                                if (!id_name.endsWith('_id')) {\n                                    if (typeof object[id_name] === 'string' && object[id_name].startsWith('http')) {\n                                        const img = new Image();\n                                        img.src = object[id_name];\n                                    }\n                                    return;\n                                }\n\n                                const refId = id;\n                                const tableName = id_name.slice(0, -3);\n                                const associatedData = globalStructure[tableName];\n                                delete object[id_name];\n\n                                const possibleData = associatedData.filter(elem => elem.id === refId);\n                                if (possibleData.length === 1) {\n                                    object[tableName] = possibleData[0];\n                                } else {\n                                    throw new Error('Unrecognized Id ' + refId + ' in table ' + id_name + ' within ' + object);\n                                }\n                            };\n                            recursiveFind(rowValue, replaceTable);\n                        });\n                    });\n                });\n            }\n\n            return globalStructure;\n        })\n    }\n\n    componentDidMount() {\n        ReactGA.initialize('UA-136827615-1');\n        ReactGA.pageview(window.location.pathname + window.location.search);\n        window.addEventListener(\"hashchange\", () => {\n            document.location.reload();\n        }, false);\n\n        loadHash().then(data => {\n            this.setState({coreGraphData: data}, () => {\n                //\n                const firebaseInstance = firebase.initializeApp({\n                    apiKey: \"AIzaSyC6qyWIC6Yvc3NmTXYUzQ-jcFE1p3VsKX4\",\n                    authDomain: \"satisgraphtory.firebaseapp.com\",\n                    databaseURL: \"https://satisgraphtory.firebaseio.com\",\n                    projectId: \"satisgraphtory\",\n                    storageBucket: \"satisgraphtory.appspot.com\",\n                    messagingSenderId: \"463653345773\"\n                });\n\n                const fbdb =  firebaseInstance.database();\n\n                this.setState({fbdb, loaded: true}, () => {\n\n                        const generate = (name, cb = () => {}) => {\n                            return () => {\n                                return this.generateRecursiveStructureFireBase(name).then(data => {\n                                    this.setState({[name]: data}, () => {\n                                        console.debug(\"Loaded\", name);\n                                        cb();\n                                    });\n                                });\n                            }\n                        };\n\n                        let wrappedFunction = () => {\n                            this.setState({isLoaded: true})\n                        };\n                        const list = ['spring', 'recipe', 'path_type','machine_node', 'player_unlock', 'machine_class', 'item', 'spring_type', 'purity_type', 'node_type', 'machine_version', \"machine_class\"];\n\n                        list.forEach(item => {\n                            wrappedFunction = generate(item, wrappedFunction);\n                        });\n\n                        wrappedFunction();\n\n\n\n\n\n\n\n\n\n\n                        // const gen = generate('player_unlock', generate('item', generate('recipe',\n                        //     generate('machine_class',  generate('machine_node',  generate('machine_version',  generate('spring',\n                        //\n                        //         generate('path_type',  generate('purity_type',   )\n                        //         )))))));\n                        // gen();\n\n                //     return this.generateRecursiveStructureFireBase('player_unlock').then(player_unlock => {\n                //         this.setState({player_unlock}, () => {\n                //             return this.generateRecursiveStructureFireBase('recipe').then(recipe => {\n                //                 this.setState({recipe}, () => {\n                //                     return this.generateRecursiveStructureFireBase('machine_class').then(machine_node => {\n                //                     return this.generateRecursiveStructureFireBase('machine_node').then(machine_node => {\n                //                 //         this.setState({machine_node}, () => {\n                //                 //             return this.generateRecursiveStructureFireBase('spring').then(spring => {\n                //                 //                 this.setState({spring}, () => {\n                //                 //                     return this.generateRecursiveStructureFireBase('path_type').then(path_type => {\n                //                 //                         this.setState({path_type}, () => {\n                //                 //                             return this.generateRecursiveStructureFireBase('purity_type').then(purity_type => {\n                //                 //                                 this.setState({purity_type, isLoaded: true});\n                //                 //                             });\n                //                 //                         });\n                //                 //                     });\n                //                 //                 });\n                //                 //             });\n                //                 //         });\n                //                     });\n                //                 });\n                //             });\n                //         });\n                //     });\n                // });\n\n                // ref.once(\"value\", function(data) {\n                //     const stateObject = {isLoaded: true, loaded: true };\n                //     const endObject = {};\n                //     const dataFull = data.val();\n                //     Object.keys(data.val()).forEach(key => {\n                //         endObject[key] = dataFull[key];\n                //     });\n                //\n                //     Object.keys(data.val()).forEach(key => {\n                //         stateObject[key] = endObject;\n                //     });\n                //\n                //     console.log(stateObject);\n                //     tVar.setState(stateObject);\n                // });\n\n\n                if (process.env.NODE_ENV && process.env.NODE_ENV !== 'production') {\n                    createDatabase();\n                }\n\n                // createDatabase().then(() => {\n                //     return this.generateRecursiveStructure('player_unlock').then(player_unlock => {\n                //         this.setState({player_unlock}, () => {\n                //             return this.generateRecursiveStructure('recipe').then(recipe => {\n                //                 this.setState({recipe}, () => {\n                //                     return this.generateRecursiveStructure('machine_node').then(machine_node => {\n                //                         this.setState({machine_node}, () => {\n                //                             return this.generateRecursiveStructure('spring').then(spring => {\n                //                                 this.setState({spring}, () => {\n                //                                     return this.generateRecursiveStructure('path_type').then(path_type => {\n                //                                         this.setState({path_type}, () => {\n                //                                             return this.generateRecursiveStructure('purity_type').then(purity_type => {\n                //                                                 this.setState({purity_type, isLoaded: true});\n                //                                             });\n                //                                         });\n                //                                     });\n                //                                 });\n                //                             });\n                //                         });\n                //                     });\n                //                 });\n                //             });\n                //         });\n                //     });\n                // });\n\n\n\n                 });\n            });\n        });\n        // saveHash({data: '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'});\n    }\n\n    generateNodeList() {\n        const recipesByMachineClass = {};\n        const machineClassPlural = {};\n        this.state.recipe && this.state.recipe.recipe.forEach(recipe => {\n            const thisList = recipesByMachineClass[recipe.machine_class.name] || [];\n            thisList.push(recipe);\n            recipesByMachineClass[recipe.machine_class.name] = thisList;\n            machineClassPlural[recipe.machine_class.name] = recipe.machine_class.plural;\n        });\n        return Object.keys(recipesByMachineClass).map(key =>\n            <SidebarButton appObject={this} label={machineClassPlural[key]} key={key}\n                           items={recipesByMachineClass[key]}/>\n        );\n    }\n\n    generateContainerList() {\n        const springByClass = {};\n        this.state.purity_type && this.state.spring && this.state.spring.spring.forEach(spring => {\n            const thisList = springByClass[spring.spring_type.name] || [];\n            thisList.push(spring);\n            springByClass[spring.spring_type.name] = thisList;\n        });\n\n        // Manually handle splitters and mergers\n        springByClass['Logistic'] = this.state.machine_node.machine_node.filter(elem => elem.machine_class.name === 'Logistic');\n\n\n        return (\n            <React.Fragment>\n                <SimpleSidebarButton label=\"Logistics\" appObject={this} listItems={springByClass}/>\n            </React.Fragment>\n\n        );\n    }\n\n    generateUnlocksList() {\n        const dataList = [];\n        this.state.player_unlock && this.state.player_unlock.player_unlock.forEach(player_unlock => {\n            const item = this.state.recipe.recipe.filter(elem => elem.player_unlock && (elem.player_unlock.id === player_unlock.id))[0];\n            if (item) {\n                // dataList.push({player_unlock, item});\n            }\n        });\n        return (\n            <div>hello</div>\n        );\n    }\n\n    generateSpringList() {\n        this.generateUnlocksList();\n        const springByClass = {};\n        this.state.spring && this.state.spring.spring.forEach(spring => {\n            const thisList = springByClass[spring.spring_type.name] || [];\n            thisList.push(spring);\n            springByClass[spring.spring_type.name] = thisList;\n        });\n        return (\n            <NestedSidebarButton label='Miners' listItems={springByClass} appObject={this}/>\n        );\n    }\n\n    render() {\n        const {classes} = this.props;\n        if (!this.state.isReady) {\n            return <Loader ready={this.state.isLoaded} parentState={this}/>;\n        }\n        const t = this;\n\n        return <div className={classes.root}>\n\n            <CssBaseline/>\n            <MuiThemeProvider theme={theme}>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <img alt=\"wow so satis factory\" className={classes.logo}\n                             src=\"https://raw.githubusercontent.com/rhocode/rhocode.github.io/master/img/satisgraphtory.png\"\n                             title=\"logo\"/>\n                        <div className={classes.grow} />\n                        {useExperimentalFeature('opt') ? <Button color=\"inherit\" onClick={() => t.graphSvg.optimize()}>\n                            <OfflineBoltIcon/>\n                            <div className={classes.label}>Optimize</div>\n                        </Button> : null }\n                        <Button color=\"inherit\" onClick={() => t.graphSvg.analyze()}>\n                            <SettingsInputComponentIcon/>\n                            <div className={classes.label}>Analyze</div>\n                        </Button>\n                        <ShareButton t={t}/>\n                        {/*<LoadButton t={t}/>*/}\n                        <ClearButton t={t}/>\n                    </Toolbar>\n                </AppBar>\n\n                <FabPopup>\n                    <Typography variant=\"h4\">Welcome to SatisGraphtory!</Typography>\n                    <Typography variant=\"body1\">Thanks for checking out our tool! If you have any questions, suggestions, or feedback, feel free to join our <a href={\"https://discord.gg/ZRpcgqY\"}>Discord server</a>! We're always looking to add more\n                    functionality!</Typography>\n                    <br />\n                    <Typography variant=\"h5\">This tool will always be free.</Typography>\n                    <Typography variant=\"body1\">If you would like to contribute, contact us on Discord! We'd love your help!</Typography>\n                    <br />\n                    <Typography variant=\"h5\">Graph Basics</Typography>\n                    <ul>\n                        <li><Typography variant=\"body1\">Use the <b>left menu</b> to <b>add</b> machines to the diagram</Typography>\n                        </li>\n                        <li><Typography variant=\"body1\"><b>CLICK</b> on a node/path to <b>select</b> it</Typography></li>\n                        <li><Typography variant=\"body1\">Press <b>BACKSPACE</b> on a selected node/path to delete\n                            it</Typography></li>\n                        <li><Typography variant=\"body1\">Hold down <b>SHIFT</b> and <b>drag</b> from node to node to create belts</Typography></li>\n                        <li><Typography variant=\"body1\">Use <b>MOUSE SCROLL</b> to control overclock (black text in the\n                            white circle)</Typography></li>\n                    </ul>\n                    <Typography variant=\"h5\">Sharing</Typography>\n                    <Typography variant=\"body1\">Generate a share code by using the Share button in the top right.</Typography>\n                    <br/>\n                    <Typography variant=\"h5\">Legend</Typography>\n                    <Typography variant=\"body1\"><span style={{'color': 'orange'}}>Orange</span> numbers means the machine wastes time doing nothing.</Typography>\n                    <Typography variant=\"body1\"><span style={{'color': 'LightCoral'}}>Red</span> numbers means the machine isn't processing fast enough.</Typography>\n                    <Typography variant=\"body1\"><span style={{'color': 'Blue'}}>Blue</span> numbers means the belt capacity was overridden (and you need to fix it ASAP!)</Typography>\n                    <br/>\n                    {/*<Typography variant=\"body1\">Special thanks to the following testers: GeekyMeerkat, Stay, HartWeed, safken, marcspc, Laugexd</Typography>*/}\n                    <Typography variant=\"body1\">Revisit these instructions anytime by clicking on the <b>?</b> in the bottom right.</Typography>\n\n                </FabPopup>\n                {(this.state.selectedNode && this.state.selectedNode.machine.name === 'Container') ||(this.state.selectedNode && this.state.selectedNode.upgradeTypes.length > 1) || (this.state.selectedPath && this.state.selectedPath.upgradeTypes\n                    && this.state.selectedPath.upgradeTypes.length > 1) ?\n                    <SelectorPanel items={this.state.item.item} label='Options' graphSvg={this.graphSvg}\n                                   overclock={this.state.selectedNode ? this.state.selectedNode.overclock : -1} selected={this.state.selectedNode || this.state.selectedPath}/> : null}\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <List>\n                        <Typography variant=\"h5\" className={classes.drawerTitle}>Nodes</Typography>\n                        {this.generateNodeList()}\n                        {this.generateSpringList()}\n                        {this.generateContainerList()}\n                    </List>\n                    <Divider/>\n\n                    <SidebarPanel parentState={this} playerUnlock={this.state.player_unlock}/>\n\n                    <Divider/>\n\n                    <List>\n                        <SidebarPopup Icon={InfoIcon} label='About/Disclaimers' title='About/Disclaimers'>\n                            <Typography variant=\"body1\">Created by <a href=\"https://github.com/tehalexf\">Alex</a> and <a\n                                href=\"https://github.com/thinkaliker\">Adam</a> (<a\n                                href=\"https://twitter.com/thinkaliker\">@thinkaliker</a>).</Typography>\n                            <Typography variant=\"body1\">Not officially affiliated with Satisfactory, Coffee Stain\n                                Studios AB, or THQ Nordic AB.</Typography>\n                            <Typography variant=\"body1\">Images sourced from the Satisfactory Wiki, which is sourced from\n                                Coffee Stain Studios AB's Satisfactory.</Typography>\n                        </SidebarPopup>\n                        <SidebarPopup Icon={WarningIcon} label='Known Issues' title='Known Issues'>\n                            <ul>\n                                <li>Resource nodes do not have purities displayed on the graph.</li>\n                                <li>No option yet to hide belt and factory numbers.</li>\n                            </ul>\n                        </SidebarPopup>\n                    </List>\n                </Drawer>\n                <div id=\"svgParent\" className={classes.content}>\n                    {this.state.loaded ? <GraphSvg parentAccessor={this} ref={(graphSvg) => {\n                        t.graphSvg = graphSvg;\n                    }}/> : <div/>}\n                </div>\n            </MuiThemeProvider>\n        </div>;\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// PACKAGE DEPENDENCIES\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\nimport './styles/app.scss';\n\n// COMPONENTS\n\n// STYLES\n\n\nReactDOM.render(<App/>, document.getElementById('app'));"],"sourceRoot":""}