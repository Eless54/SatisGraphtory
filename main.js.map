{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Loader.jsx","webpack:///./src/components/GraphSvg/constants.jsx","webpack:///./src/components/GraphSvg/mouseEvents.jsx","webpack:///./src/components/GraphSvg/algorithms.jsx","webpack:///./src/components/GraphSvg/util.jsx","webpack:///./src/components/TinyQueue.jsx","webpack:///./src/components/GraphSvg/graphActions.jsx","webpack:///./src/components/GraphSvg/edgeActions.jsx","webpack:///./src/components/GraphSvg/nodeActions.jsx","webpack:///./src/components/GraphSvg/keyboardEvents.jsx","webpack:///./src/components/GraphSvg/markerActions.jsx","webpack:///./src/components/GraphSvg/index.js","webpack:///./src/components/ClickAwayListenerV2.jsx","webpack:///./src/components/SidebarButton.jsx","webpack:///./src/components/PopupDialog.jsx","webpack:///./src/components/FabPopup.jsx","webpack:///./src/components/SidebarPopup.jsx","webpack:///./src/components/InnerNestedSidebarButton.jsx","webpack:///./src/components/NestedSidebarButton.jsx","webpack:///./src/components/SimpleSidebarButton.jsx","webpack:///./src/components/SidebarPanel.jsx","webpack:///./src/components/ClearButton.jsx","webpack:///./src/components/ShareButton.jsx","webpack:///./src/components/SelectorPanel.jsx","webpack:///./src/components/App.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","loading","Loader","props","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","React","Component","previousProps","previousState","ready","parentState","setState","isReady","console","info","_this$props","classes","react_default","a","createElement","Fragment","className","Math","floor","random","withStyles","theme","root","constants","lineObjectClass","lineParentObjectClass","lineHitboxObjectClass","lineStylingPathClass","lineStylingArrowClass","lineStylingFullClass","overclockedTextClass","nodeVersionTextClass","nodeRequirementsIconClass","nodeSurplusIconClass","nodeRequirementsSubIconClass","nodeProducesClass","nodeSurplusClass","nodeProducesPerMinText","nodeLimitingThroughputText","nodeLimitingThroughputClass","lineLimitedThroughputText","lineLimitedThroughputClass","selectedClass","selectedNodeClass","selectedLineClass","connectableClass","graphNodeClass","graphNodeHoverClass","overclockedArcClass","graphNodeGrabbedClass","graphNodeIdBase","svgGraphClass","activeEditId","BACKSPACE_KEY","DELETE_KEY","ENTER_KEY","nodeRadius","round_up","x","factor","round","strongly_connected_components_standalone","graph","index_counter","stack","lowlink","index","keys","forEach","node","includes","_strong_connect","parseInt","toString","successor","undefined","Error","JSON","stringify","min","connected_component","pop","spliceUtil","item","indexOf","inflate","parse","pako","Base64","atob","to","useExperimentalFeature","featureName","vars","location","href","replace","useExperimentalFeatures","split","TinyQueue","arguments","compare","defaultCompare","TinyQueue_classCallCheck","reheapify","_down","_up","top","bottom","pos","parent","current","halfLength","left","best","right","b","analyzeGraph","_this","nodeUnion","Set","nodeIn","nodeOut","add","nodeUnionArray","Array","from","nodeLookup","graphData","nodes","filter","elem","id","childProvides","hasSources","containedItems","machine","allowedIn","allowedOut","nodeOutWithSets","map","componentsList","superNodeGraphLookup","superNodeGraphLookupInflated","lookupArray","list","derivedGraphOutgoing","ids","thisNode","derivedGraphAccessor","thisId","derivedGraphIncoming","immutableDerivedGraphIncoming","myTinyQueue","concat","_toConsumableArray","size","providedThroughput","itemLookup","parentAccessor","state","recipe","icon","efficiency","itemThroughPut","itemsPerMinute","internalError","search","workaroundHack","rec","log","itemIconLookup","links","link","tempIndex","forceOverwritable","_loop","thisNodeInflated","outgoing","nodeGroupSource","nodeGroupTarget","origin","targets","nodeGroupSourceThroughput","throughput","nodeSpeed","instance","speed","overclock","provided","purity","fetchedPurity","purities","actualPurity","quantity","time","power","inputs","maxThroughput","source","_defineProperty","max","actual","resources","providedSet","provideRaw","provide","maxItemsPerSecLimiter","calculatedItemPerSecond","reconstructionMultiplier","itemPerSec","providedItem","resourceCount","missing","efficiencies","Infinity","inp","providedQuantity","has","resourceThroughputNeeded","calculatedThroughput","maxThroughputPerItem","totalItemThroughput","totalLinkThroughput","totalItemThroughputByItem","linkPairs","outgoingNode","sources","target","foundLink","localItemThroughput","q","e","tmp","reduce","sort","t1","t2","processingType","remainingItemProcessing","remainingLinkPairs","pair","limitedSpeed","fraction","itemsUsed","itemRaw","itemPerSecBeforeBeltLimiting","limitedItemPerSecByBelt","beltMaxForThisEntry","loopedNodes","itemPerNode","resultantResource","nodeInitial","initialItemPerSec","initialNode","previousOutput","outputIterator","_loop2","visitedNodes","_loop3","theseResources","outNode","delta","v","_ret","graphActions_typeof","visit","nodeId","linkSpeed","totalItems","outerNode","provideByItem","thisProvide","totalCalculated","localModifier","propagateNodeToEdgesRevised","delete","editEfficiencyArc","updateGraph","simulation","graphNodesGroup","graphLinksGroup","_this2","incoming","input_slots","output_slots","open_in_slots","open_out_slot","recalculateStorageContainers","drag","d3","clickDistance","on","graphSvg","shiftHeld","mouseDragSource","active","alphaTarget","restart","wasFixed","fx","fy","dragLine","classed","attr","y","svgGroup","wasMoved","sourceEvent","stopImmediatePropagation","mouseOverNode","addPath","snapToGrid","graphNodesData","selectAll","graphNodesEnter","enter","append","wheelZoomCalculation","node_clicked","remove_select_from_nodes","node_mouse_over","node_mouse_out","node_mouse_down","node_mouse_up","exit","remove","addEfficiencyArc","addNodeImage","insertNodeOverclock","insertNodeTier","insertComponents","merge","graphLinksData","graphLinksEnter","linkFullObject","insertEdgeLabel","pathMouseClick","handleTick","force","callback","deselect_path_and_nodes","selectedPath","selectedNode","k","alpha","calculateLabelPositions","each","vx","edgeActions_toConsumableArray","globalProvideMap","reverseTraversalStack","combinedProvides","combinedProvidesSource","allowed","nodeGroup","propagateNodeToEdgesReversed","passedThis","sourceChecker","targetChecker","specialSource","specialTarget","mergerTarget","mergerSource","targetSlotsUsed","error","path_type","path1","path2","rank","upgrades","path","newEdge","upgradeTypes","usedOut","usedIn","updateGraphHelper","removePath","sharedItems","parentElement","link_label","select","pathLength","getTotalLength","point","getPointAtLength","updateNodeTierExternal","edgeThis","definedColor","linkClass","style","text","previouslySelected","datum","shiftKey","sourceId","percentage_metric","offset","endOffset","endOffsetRaw","percentage","innerRadius","outerRadius","arc","startAngle","PI","endAngle","overClockCalculation","perc","g","overclockOverride","selectedElem","roughEstimate","deltaY","updateOverclock","textElement","updateNodeTier","machine_version","representation","forceUpdateComponentLabel","elementsToUpdate","itemAccessor","allowedInRemaining","flat","element","fetchRemainingIn","findItem","outputtedItems","remaining","findSuitableSource","allowedOutRemaining","fetchRemainingOut","outputtedItemsIn","findSuitableTarget","nodeThis","containedItem","combinedSum","nodeClass","el","backgroundText","tspan","gEl","svgKeyDown","document","activeElement","nodeName","pressedKey","keyCode","appendMarkerAttributes","marker","GraphSvg","GraphSvg_classCallCheck","GraphSvg_getPrototypeOf","GraphSvg_assertThisInitialized","nodeData","zoomData","parseSvg","viewCenter","bodyEl","getElementById","width","clientWidth","height","clientHeight","scaleX","translateX","scaleY","translateY","add_node","inputSvg","transition","duration","zoom_handler","transform","vy","GraphSvg_toConsumableArray","Number","NEGATIVE_INFINITY","graphObjects","zoom_actions","scaleExtent","defs","feMerge","distance","strength","radius","initialX","initialY","svg","clearGraphDataRaw","createGraph","compressedData","satisgraphtory","version","playerData","secret","btoa","deflate","Promise","resolve","reject","fetch","method","headers","Content-Type","body","then","response","json","uri","resp","encodeURIComponent","catch","message","saveHash","compressGraphData","loadGraphData","coreGraphData","prevProps","prevState","snapshot","ClickAwayListenerV2","ClickAwayListenerV2_classCallCheck","ClickAwayListenerV2_possibleConstructorReturn","ClickAwayListenerV2_getPrototypeOf","windowOnClobber","clobberList","clobberedElement","onClickAway","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","querySelectorAll","iterator","next","done","addEventListener","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeEventListener","index_es","children","propTypes","PropTypes","isRequired","string","func","SidebarButton","SidebarButton_classCallCheck","SidebarButton_getPrototypeOf","SidebarButton_defineProperty","SidebarButton_assertThisInitialized","event","anchorEl","currentTarget","label","appObject","items","Tooltip_default","tooltip","placement","title","src","tooltipIconFirst","tooltipIcon","tooltipText","MenuItem_default","onClick","machine_nodes","machine_node","node1","node2","machine_class","addNode","dict","handleClose","alt","itemListIcon","grow","_this3","open","Boolean","listItems","Paper_default","paper","Button_default","aria-owns","aria-haspopup","handleMenu","button","RemoveCircle_default","AddCircleOutline_default","Popper_default","popper","_ref","TransitionProps","Grow_default","_extends","transformOrigin","components_ClickAwayListenerV2","clickAwayClose","MenuList_default","flex","justifyContent","padding","margin","spacing","unit","display","paddingLeft","zIndex","paddingRight","fontSize","PopupDialog","PopupDialog_classCallCheck","PopupDialog_possibleConstructorReturn","PopupDialog_getPrototypeOf","contents","handleModalClose","Dialog_default","modal","onClose","DialogTitle_default","DialogContent_default","DialogActions_default","color","FabPopup","FabPopup_classCallCheck","FabPopup_getPrototypeOf","FabPopup_assertThisInitialized","dontShow","checked","localStorage","setItem","modalOpen","getItem","Fab_default","aria-label","fab","Help_default","components_PopupDialog","FormControlLabel_default","control","Checkbox_default","onChange","handleDontShow","position","SidebarPopup","SidebarPopup_classCallCheck","SidebarPopup_possibleConstructorReturn","SidebarPopup_getPrototypeOf","Icon","ListItem_default","ListItemIcon_default","icons","ListItemText_default","primary","marginRight","InnerNestedSidebarButton","InnerNestedSidebarButton_classCallCheck","InnerNestedSidebarButton_getPrototypeOf","InnerNestedSidebarButton_defineProperty","InnerNestedSidebarButton_assertThisInitialized","lastTarget","selectedButton","setTimeout","resource","machineIcon","selected","InnerNestedSidebarButton_extends","NestedSidebarButton","NestedSidebarButton_classCallCheck","NestedSidebarButton_getPrototypeOf","NestedSidebarButton_defineProperty","NestedSidebarButton_assertThisInitialized","NestedSidebarButton_extends","ClickAwayListener_default","returnDivList","components_InnerNestedSidebarButton","SimpleSidebarButton","SimpleSidebarButton_classCallCheck","SimpleSidebarButton_getPrototypeOf","SimpleSidebarButton_defineProperty","SimpleSidebarButton_assertThisInitialized","SimpleSidebarButton_extends","SidebarPanel","SidebarPanel_classCallCheck","SidebarPanel_getPrototypeOf","SidebarPanel_assertThisInitialized","options","getAttribute","selectedDrives","querySelector","playerUnlock","player_unlock","Typography_default","variant","checkbox","checkboxLabel","fullWidth","jiggle","Shuffle_default","resetCamera","Replay_default","fixNodes","unfixNodes","Undo_default","flexDirection","flexShrink","textField","paddingBottom","marginTop","textAlign","chips","flexWrap","chip","paddingTop","fontFamily","fontWeight","ClearButton","ClearButton_classCallCheck","ClearButton_getPrototypeOf","ClearButton_defineProperty","ClearButton_assertThisInitialized","handleModalOpen","Delete_default","dialogContainer","dialogButton","clearGraphData","ShareButton","ShareButton_classCallCheck","ShareButton_getPrototypeOf","ShareButton_defineProperty","ShareButton_assertThisInitialized","uploadDataWithResponse","port","url","protocol","hostname","pathname","join","Share_default","TextField_default","inputRef","ref","inlineDialogButton","execCommand","statusMessage","FileCopy_default","SelectorPanel","SelectorPanel_classCallCheck","SelectorPanel_getPrototypeOf","SelectorPanel_defineProperty","SelectorPanel_assertThisInitialized","wait","immediate","timeout","context","args","callNow","clearTimeout","sliderValue","el2","debounce","update","dummy","debouncedUpdate","IconButton_default","downgrade","ArrowDownward_default","upgrade","ArrowUpward_default","Slider_default","slider","step","changeSlider","formControl","maxWidth","drawerWidth","minWidth","createMuiTheme","typography","useNextVariants","palette","main","secondary","contrastText","themeName","App","App_classCallCheck","App_possibleConstructorReturn","App_getPrototypeOf","loaded","table","tableRef","fbdb","once","results","val","startingTable","starting","globalStructure","regeneratorRuntime","mark","_callee2","wrap","_context2","prev","delegateYield","_callee","refKeysToProcess","refKey","tableName","recursiveFind","_context","str","endsWith","getRefkeyTableFireBase","sent","functionToApply","isArray","App_typeof","row","rowKey","refId","associatedData","possibleData","rowValue","id_name","startsWith","Image","stop","abrupt","_x","ReactGA","reload","hash","decodeURIComponent","responseRaw","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","generate","cb","generateRecursiveStructureFireBase","debug","wrappedFunction","isLoaded","_this4","recipesByMachineClass","machineClassPlural","thisList","plural","components_SidebarButton","springByClass","purity_type","spring","spring_type","components_SimpleSidebarButton","_this5","generateUnlocksList","components_NestedSidebarButton","components_Loader","CssBaseline_default","styles","AppBar_default","appBar","Toolbar_default","logo","OfflineBolt_default","analyze","SettingsInputComponent_default","components_ShareButton","components_ClearButton","components_FabPopup","components_SelectorPanel","Drawer_default","drawer","drawerPaper","List_default","drawerTitle","generateNodeList","generateSpringList","generateContainerList","Divider_default","components_SidebarPanel","components_SidebarPopup","InfoIcon","WarningIcon","content","components_GraphSvg","flexGrow","flexBasis","toolbar","mixins","pathIcon","pathText","clearButton","ReactDOM","render","components_App"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([465,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport {withStyles} from '@material-ui/core';\nimport * as d3 from 'd3';\n\nconst loading = [\n    'Loading...',\n    'Burning Coal...',\n    'Deleting Steam Keys...',\n    'Exploiting Resources...',\n    'Petting Lizard Doggo...',\n    'Adding Pipes...',\n    'Adding Mana...',\n    'Spilling Coffee...',\n    'Becoming A Goat...',\n    'Charging Batteries...'\n];\n\nexport const styles = theme => ({\n    root: {},\n});\n\nclass Loader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidUpdate(previousProps, previousState) {\n        if (this.props.ready === true && !previousProps.ready) {\n            this.props.parentState.setState({isReady: true}, () => {\n                console.info('App set as \"Ready\"');\n            });\n        }\n    }\n\n    render() {\n        const {ready, parentState, classes} = this.props;\n        return (\n            <React.Fragment>\n                <div className=\"loader-spinner\"/>\n                <div className=\"align-loading\">\n                    <div\n                        className='loading-text align-loading-text'>{loading[Math.floor(Math.random() * loading.length)]}</div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(Loader);","const constants = {\n    lineObjectClass: 'line-object',\n    lineParentObjectClass: 'lineParentObjectClass',\n    lineHitboxObjectClass: 'line-object-hitbox',\n    lineStylingPathClass: 'line-object-path-styled',\n    lineStylingArrowClass: 'line-object-arrow-styled',\n    lineStylingFullClass: 'line-object-combined-styled',\n    overclockedTextClass: 'overclockedTextClass',\n    nodeVersionTextClass: 'nodeVersionTextClass',\n    nodeRequirementsIconClass: 'nodeRequirementsIconClass',\n    nodeSurplusIconClass: 'nodeSurplusIconClass',\n    nodeRequirementsSubIconClass: 'nodeRequirementsSubIconClass',\n    nodeProducesClass: 'nodeProducesClass',\n    nodeSurplusClass: 'nodeSurplusClass',\n    nodeProducesPerMinText: 'nodeProducesPerMinText',\n    nodeLimitingThroughputText: 'nodeLimitingThroughputText',\n    nodeLimitingThroughputClass: 'nodeLimitingThroughputClass',\n\n    lineLimitedThroughputText: 'lineLimitedThroughputText',\n    lineLimitedThroughputClass: 'lineLimitedThroughputClass',\n\n    selectedClass: 'selected',\n    selectedNodeClass: 'selected-node',\n    selectedLineClass: 'selected-line',\n    connectableClass: 'potential-connectable-node',\n    graphNodeClass: 'graphMachineNode',\n    graphNodeHoverClass: 'graphNodeHoverClass',\n    overclockedArcClass: 'overclockedArcClass',\n    graphNodeGrabbedClass: 'graphNodeGrabbedClass',\n    graphNodeIdBase: 'graph-svg-node-',\n    svgGraphClass: 'graph-svg',\n    activeEditId: 'active-editing',\n    BACKSPACE_KEY: 8,\n    DELETE_KEY: 46,\n    ENTER_KEY: 13,\n    nodeRadius: 50\n};\n\nexport default constants;","import {addPath} from './edgeActions';\nimport * as d3 from 'd3';\nimport constants from './constants';\n\n// V2 functions\nexport const drag_start = function (d, simulation, graphSvg) {\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n        //ignore drag...it's probably not important.\n        graphSvg.setState({mouseDragSource: d});\n    } else {\n        if (!d3.event.active)\n            simulation.alphaTarget(0.3).restart();\n        graphSvg.setState({wasFixed: d.fx !== null && d.fy != null});\n    }\n};\n\n\n//make sure you can't drag the circle outside the box\nexport const drag_drag = (d, graphSvg) => {\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n        //ignore drag...it's probably not important.\n        graphSvg.dragLine.classed('hidden', false).attr('d', 'M' + d.x + ',' + d.y + 'L' +\n            d3.mouse(graphSvg.svgGroup.node())[0] + ',' + d3.mouse(graphSvg.svgGroup.node())[1]);\n    } else {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n        graphSvg.setState({wasMoved: true});\n    }\n};\n\nconst round_up = function (x, factor) {\n    return Math.round(x / factor) * factor;\n};\n\nexport const drag_end = (d, graphSvg, simulation) => {\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n        if (graphSvg.state.mouseOverNode) {\n            const source = graphSvg.state.mouseDragSource;\n            const target = graphSvg.state.mouseOverNode;\n            addPath.call(this, graphSvg, graphSvg.state.mouseDragSource, graphSvg.state.mouseOverNode);\n        }\n        graphSvg.dragLine.classed('hidden', true).attr('d', 'M0,0L0,0');\n    } else {\n        if (graphSvg.state && graphSvg.state.wasMoved) {\n            d.x = d.fx;\n            d.y = d.fy;\n\n            if (graphSvg.state.snapToGrid) {\n                if (d.fx) {\n                    d.fx = round_up(d.fx, 100);\n                    d.fy = round_up(d.fy, 100);\n                }\n            }\n        } else if (graphSvg.state && !graphSvg.state.wasFixed) {\n            d.fx = null;\n            d.fy = null;\n        }\n    }\n    d3.select('.' + constants.graphNodeGrabbedClass).classed(constants.graphNodeGrabbedClass, false);\n    graphSvg.setState({shiftHeld: false, wasMoved: false, wasFixed: false});\n};","export const strongly_connected_components = function (graph) {\n    console.error(graph);\n    throw new Error('JKNFDKJNFDJN');\n    const index_counter = ['0'];\n    const stack = [];\n    const lowlink = {};\n    const index = {};\n    const result = [];\n\n    const _strong_connect = function (node) {\n        index[node] = index_counter[0];\n        lowlink[node] = index_counter[0];\n        index_counter[0] = (parseInt(index_counter[0]) + 1).toString();\n        stack.push(node);\n\n        const successors = graph[node] || [];\n        successors.forEach(successor => {\n            if (!Object.keys(index).includes(successor)) {\n                _strong_connect(successor);\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node]), parseInt(lowlink[successor])).toString();\n            } else if (stack.includes(successor)) {\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink) + ' ' + JSON.stringify(index));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node]), parseInt(index[successor])).toString();\n            }\n        });\n\n        if (lowlink[node] === index[node]) {\n            const connected_component = [];\n            /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n            while (true) {\n                const successor = stack.pop();\n                connected_component.push(successor);\n                if (successor === node) break;\n            }\n            result.push(connected_component.slice());\n        }\n    };\n    Object.keys(graph).forEach(node => {\n        if (!Object.keys(index).includes(node)) {\n            _strong_connect(node);\n        }\n    });\n\n    return result;\n};\n\nconst remove_node = function (G, target) {\n    delete G[target];\n    const values = Object.keys(G).map(key => G[key]);\n    values.forEach(value => {\n        value.delete(target);\n    });\n};\n\nconst subgraphs = function (G, vertices) {\n    const returnMap = {};\n    vertices.forEach(v => {\n        const gvarray = Array.from(G[v]);\n        const filtered = gvarray.filter(elem => vertices.has(elem));\n\n\n        returnMap[v] = new Set(filtered);\n    });\n    return returnMap;\n};\n\nexport const strongly_connected_components_standalone = function (graph) {\n    const index_counter = ['0'];\n    const stack = [];\n    const lowlink = {};\n    const index = {};\n    const result = [];\n\n    const _strong_connect = function (node) {\n        index[node] = index_counter[0];\n        lowlink[node] = index_counter[0];\n        index_counter[0] = (parseInt(index_counter[0], 10) + 1).toString();\n        stack.push(node);\n\n        const successors = graph[node] || [];\n        successors.forEach(successor => {\n            if (!Object.keys(index).includes(successor)) {\n                _strong_connect(successor);\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node], 10), parseInt(lowlink[successor], 10)).toString();\n            } else if (stack.includes(successor)) {\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink) + ' ' + JSON.stringify(index));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node], 10), parseInt(index[successor], 10)).toString();\n            }\n        });\n\n        if (lowlink[node] === index[node]) {\n            const connected_component = [];\n            /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n            while (true) {\n                const successor = stack.pop();\n                connected_component.push(successor);\n                if (successor === node) break;\n            }\n            result.push(connected_component.slice());\n        }\n    };\n    Object.keys(graph).forEach(node => {\n        if (!Object.keys(index).includes(node)) {\n            _strong_connect(node);\n        }\n    });\n\n    return result;\n};\n\nexport const simple_cycle = function (Ginput) {\n    const _unblock = function (thisnode, blocked, B) {\n        const stack = new Set([thisnode]);\n        while (stack.size) {\n            const node = stack.values().next().value;\n            stack.delete(node);\n            if (blocked.has(node)) {\n                blocked.delete(node);\n                if (!B[node]) {\n                    B[node] = new Set();\n                }\n                B[node].forEach(elem => {\n                    stack.add(elem);\n                });\n                B[node].clear();\n            }\n        }\n    };\n\n\n    const G = {};\n    Object.keys(Ginput).forEach(key => {\n        G[key] = new Set(Ginput[key].map(elem => elem.toString()));\n    });\n\n    const sccs = strongly_connected_components(G);\n    const returnValues = [];\n    while (sccs.length) {\n        const scc = sccs.pop();\n        const startnode = scc.pop();\n        const path = [startnode];\n        const blocked = new Set();\n        const closed = new Set();\n        blocked.add(startnode);\n        const B = {};\n        const stack = [[startnode, Array.from(G[startnode] || new Set())]];\n        while (stack.length) {\n            const [thisnode, nbrs] = stack[stack.length - 1];\n            if (nbrs && nbrs.length) {\n                const nextnode = nbrs.pop();\n                if (nextnode === startnode) {\n                    returnValues.push(path.slice().map(elem => parseInt(elem)));\n                    path.forEach(node => {\n                        closed.add(node);\n                    });\n                } else if (!blocked.has(nextnode)) {\n                    path.push(nextnode);\n                    stack.push([nextnode, Array.from(G[nextnode] || new Set())]);\n                    closed.delete(nextnode);\n                    blocked.add(nextnode);\n                }\n            } else {\n                if (closed.has(thisnode)) {\n                    _unblock(thisnode, blocked, B);\n                } else {\n                    (G[thisnode] || []).forEach(nbr => {\n                        B[nbr] = B[nbr] || new Set();\n                        if (!B[nbr].has(nbr)) {\n                            B[nbr].add(thisnode);\n                        }\n                    });\n                }\n\n                stack.pop();\n                path.pop();\n            }\n        }\n\n        remove_node(G, startnode);\n        const H = subgraphs(G, new Set(scc));\n        const toAdd = strongly_connected_components(H);\n        toAdd.forEach(elem => {\n            sccs.push(elem);\n        });\n    }\n    return returnValues;\n};\n\n// how to remove dups\n\n//to generate the specific indexes\n// pos = myArray.map(function(e) { return e.hello; }).indexOf('stevie');\n\n\n// var a = [1, 2, 3], b = [101, 2, 1, 10];\n// var c = a.concat(b);\n// var d = c.filter(function (item, pos) {return c.indexOf(item) == pos});","import {parse} from 'flatted/esm';\nimport pako from 'pako';\nimport Base64 from 'Base64';\n\nexport const spliceUtil = function (object, item) {\n    if (object.indexOf(item) === -1) return;\n    object.splice(object.indexOf(item), 1);\n};\n\nconst inflate = (data) => parse(pako.inflate(Base64.atob(data), {to: 'string'}));\n\nexport const saveHash = (data) => {\n    return new Promise((resolve, reject) => {\n        return fetch('https://api.myjson.com/bins/', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n            },\n            body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n        }).then(response => response.json()).then(function (response) {\n            if (response.uri) {\n                const resp = response.uri.replace('https:\\/\\/api.myjson.com/bins//', '');\n                console.log(response.uri);\n                console.log(resp);\n                console.log(encodeURIComponent(Base64.btoa(resp)));\n                return resolve(encodeURIComponent(Base64.btoa(resp)));\n            }\n            throw new Error(\"Invalid save\");\n        })\n            .catch(function (error) {\n                console.log('Fetch error:', error.message);\n                reject(error);\n            });\n    })\n};\n\nconst data = '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';\n\nexport const loadHash = () => {\n    return new Promise((resolve, reject) => {\n\n        if (window.location.hash) {\n            let location = null;\n            if (window.location.hash.indexOf('?') === -1) {\n                location = window.location.hash.slice(1);\n            } else {\n                location = window.location.hash.slice(1, window.location.hash.indexOf('?'));\n            }\n\n            return fetch('https://api.myjson.com/bins//' + Base64.atob(decodeURIComponent(location)), {\n                method: \"GET\"\n            }).then(response => response.json()).then(function (responseRaw) {\n                resolve(inflate(responseRaw.data));\n            })\n                .catch(function (error) {\n                    console.log('Fetch error:', error.message);\n                    resolve(inflate(data));\n                });\n        } else {\n            resolve(inflate(data));\n        }\n    })\n};\n\nexport const rebuildQueryParams = () => {\n    const vars = {};\n    window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        vars[key] = value;\n    });\n    if (Object.keys(vars).length) {\n        return '?' + Object.keys(vars).map(k => k + '=' + vars[k]).join('&');\n    }\n\n    return '';\n};\n\nexport const useExperimentalFeature = (featureName) => {\n    const vars = {};\n    window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        vars[key] = value;\n    });\n    vars.useExperimentalFeatures = vars.useExperimentalFeatures || '';\n    return (vars.useExperimentalFeatures || '').split(',').includes(featureName) || vars.useExperimentalFeatures === 'all'\n};\n","import {spliceUtil} from \"./GraphSvg/util\";\n\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        this.reheapify();\n    }\n\n    reheapify() {\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    size() {\n        return this.data.length;\n    }\n\n    remove(item) {\n        spliceUtil(this.data, item);\n        this.length = this.data.length;\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}","import constants from './constants';\nimport * as d3 from 'd3';\nimport {\n    addEfficiencyArc,\n    addNodeImage,\n    editEfficiencyArc,\n    insertComponents,\n    insertNodeOverclock,\n    insertNodeTier,\n    node_clicked,\n    node_mouse_down,\n    node_mouse_out,\n    node_mouse_over,\n    node_mouse_up,\n    remove_select_from_nodes,\n    wheelZoomCalculation\n} from './nodeActions';\nimport {drag_drag, drag_end, drag_start} from './mouseEvents';\nimport {calculateLabelPositions, insertEdgeLabel, pathMouseClick, recalculateStorageContainers} from './edgeActions';\nimport {strongly_connected_components_standalone} from './algorithms';\nimport TinyQueue from '../TinyQueue';\n\n\nexport const analyzeGraph = function () {\n    const nodeUnion = new Set(Object.keys(this.nodeIn));\n    Object.keys(this.nodeOut).forEach(node => nodeUnion.add(node));\n    const nodeUnionArray = Array.from(nodeUnion);\n\n    const nodeLookup = {};\n\n    nodeUnionArray.forEach((value, index) => {\n        nodeUnionArray[index] = this.graphData.nodes.filter(elem => elem.id.toString() === value)[0];\n        nodeLookup[nodeUnionArray[index].id] = nodeUnionArray[index];\n        nodeUnionArray[index].childProvides = [];\n        nodeUnionArray[index].hasSources = new Set();\n        nodeUnionArray[index].containedItems = [];\n\n        if (nodeUnionArray[index].machine.name !== 'Container' && nodeUnionArray[index].machine.name !== 'Logistic') {\n        } else {\n            nodeUnionArray[index].allowedIn = [];\n            nodeUnionArray[index].allowedOut = [];\n        }\n    });\n\n    const nodeOutWithSets = {};\n    Object.keys(this.nodeOut).forEach(key => {\n        const value = this.nodeOut[key];\n        nodeOutWithSets[key] = new Set(value.map(elem => elem.id.toString()));\n    });\n\n    const componentsList = strongly_connected_components_standalone(nodeOutWithSets);\n    const superNodeGraphLookup = {};\n    const superNodeGraphLookupInflated = {};\n    const lookupArray = {};\n    componentsList.forEach((list, index) => {\n        superNodeGraphLookup[index] = list;\n        superNodeGraphLookupInflated[index] = list.map(id => nodeLookup[id]);\n        list.forEach(item => {\n            lookupArray[item] = index;\n        });\n    });\n    const derivedGraphOutgoing = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphOutgoing[thisNode] = derivedGraphOutgoing[thisNode] || new Set();\n        const derivedGraphAccessor = derivedGraphOutgoing[thisNode];\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n            derivedGraphAccessor.add(thisId);\n        });\n    });\n    const derivedGraphIncoming = {};\n    const immutableDerivedGraphIncoming = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphIncoming[thisNode] = derivedGraphIncoming[thisNode] || new Set();\n        immutableDerivedGraphIncoming[thisNode] = immutableDerivedGraphIncoming[thisNode] || new Set();\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n\n            if (!derivedGraphIncoming[thisId]) {\n                derivedGraphIncoming[thisId] = new Set();\n                immutableDerivedGraphIncoming[thisId] = new Set();\n            }\n\n            const derivedGraphAccessor = derivedGraphIncoming[thisId];\n            derivedGraphAccessor.add(thisNode);\n            immutableDerivedGraphIncoming[thisId].add(thisNode);\n        });\n    });\n    const myTinyQueue = new TinyQueue(Array.from(new Set([...Object.keys(derivedGraphOutgoing), ...Object.keys(derivedGraphIncoming)])), (a, b) => {\n        return (derivedGraphIncoming[a] || []).size - (derivedGraphIncoming[b] || []).size;\n    });\n\n    const providedThroughput = {};\n\n    const itemLookup = {};\n\n    this.props.parentAccessor.state.recipe.item.forEach(item => {\n        itemLookup[item.id] = item.icon;\n    });\n\n    this.graphData.nodes.forEach(node => {\n        delete node.efficiency;\n        delete node.itemThroughPut;\n        delete node.itemsPerMinute;\n        delete node.internalError;\n\n        if (node.data && node.data.recipe && !node.data.node && this.props.parentAccessor.state && this.props.parentAccessor.state.recipe && this.props.parentAccessor.state.recipe.recipe) {\n            if (window.location.search.indexOf('thankYouStay=veryYes') > -1) {\n                const workaroundHack = this.props.parentAccessor.state.recipe.recipe.filter(rec => rec.id === node.data.recipe.id);\n                if (workaroundHack.length > 0) {\n                    node.data.recipe = workaroundHack[0];\n                }\n                console.log('Replaced recipe', workaroundHack[0]);\n            }\n        }\n\n        node.itemIconLookup = itemLookup;\n    });\n\n    this.graphData.links.forEach(link => {\n        delete link.itemThroughPut;\n        delete link.tempIndex;\n        delete link.forceOverwritable;\n        link.itemIconLookup = itemLookup;\n    });\n\n\n    while (myTinyQueue.size()) {\n        const node = myTinyQueue.pop();\n\n        const thisNodeInflated = superNodeGraphLookupInflated[node];\n        const outgoing = Array.from(derivedGraphOutgoing[node] || new Set());\n        const outgoingInflated = outgoing.map(item => superNodeGraphLookupInflated[item]);\n\n        const propagateNodeToEdgesRevised = (nodeGroupSource, nodeGroupTarget, origin, targets) => {\n            const nodeGroupSourceThroughput = [];\n            if (nodeGroupSource.length === 1) {\n                const node = nodeGroupSource[0];\n                let throughput = null;\n                let efficiency = null;\n\n                const nodeSpeed = node.instance.speed / 100;\n                const overclock = node.overclock / 100;\n\n                const provided = providedThroughput[node.id] || [];\n\n                if (node.data.node) {\n                    // this is a purity calculation\n                    const recipe = node.data.recipe;\n                    const purity = node.data.purity;\n                    const fetchedPurity = recipe.purities.filter(item => item.name === purity);\n\n                    if (fetchedPurity.length !== 1) {\n                        throw new Error('Trying to get purity', purity, 'wtf?');\n                    }\n                    const actualPurity = fetchedPurity[0];\n\n                    throughput = {\n                        speed: nodeSpeed,\n                        overclock,\n                        quantity: actualPurity.quantity,\n                        item: recipe.item.id,\n                        time: 60,\n                        power: node.instance.power,\n                        inputs: []\n                    };\n                    efficiency = 1;\n\n                    const maxThroughput = (throughput.quantity / throughput.time) * 60 * node.instance.speed / 100 * throughput.overclock;\n                    nodeGroupSourceThroughput.push({throughput, efficiency, source: origin});\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = efficiency;\n                        node.itemsPerMinute = {[throughput.item]: maxThroughput};\n\n                        // Comment this out if we should remove the display from nodes\n                        node.itemThroughPut = {[throughput.item]: {max: maxThroughput, actual: maxThroughput}};\n                    });\n                } else if (node.machine.name === 'Logistic' && node.instance.name === 'Splitter') {\n                    const resources = {};\n                    const providedSet = new Set();\n                    provided.forEach(provideRaw => {\n                        const provide = JSON.parse(JSON.stringify(provideRaw));\n\n                        //TODO: change the 3 to the actual number of links out\n                        provide.maxItemsPerSecLimiter = provide.calculatedItemPerSecond;\n                        // / ((this.nodeOut[nodeGroupSource[0].id] || []).length || 1);\n\n                        provide.reconstructionMultiplier = ((this.nodeOut[nodeGroupSource[0].id] || []).length || 1);\n\n                        const i = provide.throughput.item;\n                        providedSet.add(i);\n                        const itemPerSec = provide.calculatedItemPerSecond;\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = 1;\n                        node.itemsPerMinute = {};\n                        node.itemThroughPut = {};\n                        providedSet.forEach(providedItem => {\n                            const resourceCount = resources[providedItem];\n                            node.itemsPerMinute[providedItem] = resourceCount;\n                            node.itemThroughPut[providedItem] = {max: resourceCount, actual: resourceCount};\n                        });\n                    });\n                } else if (node.machine.name === 'Logistic' && node.instance.name === 'Merger') {\n                    const resources = {};\n                    const providedSet = new Set();\n                    provided.forEach(provideRaw => {\n                        const provide = JSON.parse(JSON.stringify(provideRaw));\n                        const i = provide.throughput.item;\n                        providedSet.add(i);\n                        const itemPerSec = provide.calculatedItemPerSecond;\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = 1;\n                        node.itemsPerMinute = {};\n                        node.itemThroughPut = {};\n                        providedSet.forEach(providedItem => {\n                            const resourceCount = resources[providedItem];\n                            node.itemsPerMinute[providedItem] = resourceCount;\n                            node.itemThroughPut[providedItem] = {max: resourceCount, actual: resourceCount};\n                        });\n                    });\n                } else if (node.machine.name === 'Container') {\n                    const resources = {};\n                    const providedSet = new Set();\n                    provided.forEach(provide => {\n                        const i = provide.throughput.item;\n                        providedSet.add(i);\n                        const itemPerSec = provide.calculatedItemPerSecond;\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = 1;\n                        node.itemsPerMinute = {};\n                        providedSet.forEach(providedItem => {\n                            const resourceCount = resources[providedItem];\n                            node.itemsPerMinute[providedItem] = resourceCount;\n                            node.itemThroughPut = {[providedItem]: {max: resourceCount, actual: resourceCount}};\n                        });\n                    });\n                } else {\n                    throughput = {\n                        speed: nodeSpeed,\n                        overclock,\n                        quantity: node.data.recipe.quantity,\n                        item: node.data.recipe.item.id,\n                        time: node.data.recipe.time,\n                        power: node.data.recipe.power,\n                        inputs: node.data.recipe.inputs.map(elem => {\n                            return {item: elem.item.id, quantity: elem.quantity};\n                        })\n                    };\n\n                    const resources = {};\n\n                    const providedSet = new Set();\n\n                    provided.forEach(provide => {\n                        const i = provide.throughput.item;\n\n                        providedSet.add(i);\n\n                        const itemPerSec = provide.calculatedItemPerSecond;\n\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n                    });\n\n                    const missing = new Set();\n                    const efficiencies = [Infinity];\n\n                    const maxThroughput = (throughput.quantity / throughput.time) * 60 * node.instance.speed / 100 * throughput.overclock;\n\n                    throughput.inputs.forEach(inp => {\n                        const item = inp.item;\n                        const quantity = inp.quantity;\n                        const providedQuantity = resources[item] || 0;\n                        if (!providedSet.has(item)) {\n                            missing.add(item);\n                        }\n\n                        const resourceThroughputNeeded = maxThroughput * (quantity / throughput.quantity);\n                        const calculatedThroughput = maxThroughput * (Math.min(resourceThroughputNeeded, providedQuantity) / resourceThroughputNeeded);\n                        const maxThroughputPerItem = resourceThroughputNeeded;\n\n                        node.itemThroughPut = node.itemThroughPut || {};\n                        node.itemThroughPut[item] = node.itemThroughPut[item] || {max: 0, actual: 0};\n                        node.itemThroughPut[item].max += maxThroughputPerItem;\n                        node.itemThroughPut[item].actual += providedQuantity;\n\n                        const efficiency = calculatedThroughput / maxThroughput;\n\n                        efficiencies.push(Math.min(1, efficiency));\n                    });\n\n                    if (missing.size > 0) {\n                        efficiency = 0;\n                    } else {\n                        efficiency = Math.min(...efficiencies);\n                    }\n\n                    nodeGroupSourceThroughput.push({throughput, efficiency, source: origin});\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = efficiency;\n                        node.itemsPerMinute = {[throughput.item]: maxThroughput * efficiency};\n                    });\n                }\n\n                let totalItemThroughput = 0;\n                let totalLinkThroughput = 0;\n                let totalItemThroughputByItem = {};\n\n                let linkPairs = [];\n\n                (derivedGraphOutgoing[origin] || []).forEach(outgoingNode => {\n                    const sources = nodeGroupSource.map(node => node.id);\n                    const targets = superNodeGraphLookupInflated[outgoingNode].map(node => node.id);\n\n                    sources.forEach(source => {\n                        targets.forEach(target => {\n                            const link = this.graphData.links.filter(link => link.source.id === source && link.target.id === target);\n                            let foundLink = null;\n                            if (link && link.length === 1) {\n                                foundLink = link[0];\n                            } else if (link && link.length > 1) {\n                                throw new Error('Too many links found!!!');\n                            } else {\n                                return;\n                            }\n\n                            linkPairs.push({source, target, speed: foundLink.instance.speed, link: foundLink});\n                            totalLinkThroughput += foundLink.instance.speed;\n                        });\n                    });\n                });\n\n                const localItemThroughput = nodeGroupSourceThroughput.map(throughput => {\n\n                    const q = throughput.throughput.quantity;\n                    const t = throughput.throughput.time;\n                    const e = throughput.efficiency;\n                    const o = throughput.throughput.overclock;\n                    const s = throughput.throughput.speed;\n                    const i = throughput.throughput.item;\n\n                    const maxItemsPerSecLimiter = throughput.maxItemsPerSecLimiter === undefined ? Infinity : throughput.maxItemsPerSecLimiter;\n                    const tmp = Math.min(q / t * e * o * s || 0, maxItemsPerSecLimiter);\n\n                    totalItemThroughputByItem[i] = totalItemThroughputByItem[i] || 0;\n                    totalItemThroughputByItem[i] += tmp;\n\n                    return tmp;\n                }).reduce((a, b = 0) => a + b, 0);\n\n                totalItemThroughput += localItemThroughput;\n\n                linkPairs.sort(\n                    (t1, t2) => {\n                        return t1.speed - t2.speed;\n                    }\n                );\n\n                let processingType = 1;\n                if (totalItemThroughput * 60 > totalLinkThroughput) {\n                    // split proportioanly the totalItemThroughput\n                } else {\n                    processingType = 0;\n                    //fill things sequentiually\n                }\n\n\n                let remainingItemProcessing = totalItemThroughput * 60;\n                let remainingLinkPairs = linkPairs.length;\n                linkPairs.forEach(pair => {\n                    const target = pair.target;\n                    const limitedSpeed = pair.speed;\n\n                    providedThroughput[target] = providedThroughput[target] || [];\n                    if (processingType === 1) {\n                        // split everything\n                        // fraction of this belt of ALL belts:\n                        const fraction = limitedSpeed / (totalLinkThroughput);\n                        pair.fraction = fraction;\n                    } else {\n                        if (remainingItemProcessing / remainingLinkPairs > limitedSpeed) {\n                            // there will be residuals\n                            const itemsUsed = limitedSpeed;\n                            remainingItemProcessing -= itemsUsed;\n                            const fraction = limitedSpeed / (totalItemThroughput * 60);\n                            pair.fraction = fraction;\n                        } else {\n                            // no residuals.\n                            const itemsUsed = remainingItemProcessing / remainingLinkPairs;\n                            remainingItemProcessing -= itemsUsed;\n                            const fraction = itemsUsed / (totalItemThroughput * 60);\n                            pair.fraction = fraction;\n                        }\n                    }\n                    remainingLinkPairs -= 1;\n                });\n\n                linkPairs.forEach(pair => {\n                    const source = pair.source;\n                    const target = pair.target;\n                    const speed = pair.speed;\n                    const foundLink = pair.link;\n                    const fraction = pair.fraction || 1;\n                    const limitedSpeed = speed;\n\n                    providedThroughput[target] = providedThroughput[target] || [];\n\n                    nodeGroupSourceThroughput.forEach(itemRaw => {\n                        const throughput = JSON.parse(JSON.stringify(itemRaw));\n                        const q = throughput.throughput.quantity;\n                        const t = throughput.throughput.time;\n                        const e = throughput.efficiency;\n                        const o = throughput.throughput.overclock;\n                        const s = throughput.throughput.speed;\n                        const i = throughput.throughput.item;\n                        //check propagated limited\n                        const maxItemsPerSecLimiter = throughput.maxItemsPerSecLimiter === undefined ? Infinity : throughput.maxItemsPerSecLimiter;\n\n                        let itemPerSecBeforeBeltLimiting = Math.min(q / t * e * o * s || 0, maxItemsPerSecLimiter);\n\n                        // need to do some weird math to constrain the items/psec to a PORTION of the belt limited\n                        const limitedItemPerSecByBelt = limitedSpeed / 60;\n\n                        const beltMaxForThisEntry = limitedItemPerSecByBelt * 60;\n\n                        throughput.maxItemsPerSecLimiter = Math.min(limitedItemPerSecByBelt * (maxItemsPerSecLimiter / totalItemThroughput), beltMaxForThisEntry * (maxItemsPerSecLimiter / totalItemThroughput), limitedItemPerSecByBelt, maxItemsPerSecLimiter, itemPerSecBeforeBeltLimiting * fraction);\n                        throughput.calculatedItemPerSecond = throughput.maxItemsPerSecLimiter;\n\n                        foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                        foundLink.itemThroughPut[i] = foundLink.itemThroughPut[i] || {max: 0, actual: 0};\n                        foundLink.itemThroughPut[i].max += (itemPerSecBeforeBeltLimiting / (totalItemThroughput || 1)) * beltMaxForThisEntry;\n                        foundLink.itemThroughPut[i].actual += itemPerSecBeforeBeltLimiting * 60 * fraction;\n\n                        providedThroughput[target].push(throughput);\n                    });\n                })\n            } else {\n                const loopedNodes = new Set();\n                nodeGroupSource.forEach((node) => {\n                    loopedNodes.add(node.id);\n                    const provided = providedThroughput[node.id] || [];\n                    provided.forEach(provideRaw => {\n                        const provide = JSON.parse(JSON.stringify(provideRaw));\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n                });\n\n                const visit = (nodeInitial, provide, loopedNodes) => {\n                    let i = 0;\n\n                    let initialItemPerSec = provide.calculatedItemPerSecond;\n\n                    let resources = {[nodeInitial.id]: initialItemPerSec * 60};\n                    const initialNode = nodeInitial.id;\n                    let previousOutput = {[nodeInitial.id]: initialItemPerSec * 60};\n                    let outputIterator = {[nodeInitial.id]: initialItemPerSec * 60};\n                    let iteratorTemp = initialItemPerSec * 60;\n                    while (i < 999) {\n                        const visitedNodes = new Set();\n                        const stack = [nodeInitial];\n                        visitedNodes.add(nodeInitial.id);\n                        while (stack.length) {\n                            const node = stack.pop();\n\n                            let theseResources = resources[node.id];\n\n                            if (node.machine.name === 'Logistic' && node.instance.name === 'Splitter') {\n                                theseResources = theseResources / ((this.nodeOut[node.id] || []).length || 1);\n                            } else if (node.machine.name === 'Logistic' && node.instance.name === 'Merger') {\n\n                            } else if (node.machine.name === 'Container') {\n\n                            }\n\n                            this.nodeOut[node.id].forEach(outNode => {\n                                if (!loopedNodes.has(outNode.id)) {\n                                    return;\n                                }\n\n                                const links = this.graphData.links.filter(link => link.source.id === node.id && link.target.id === outNode.id);\n                                if (links && links.length !== 1) {\n                                    throw new Error('Too many links found!!!');\n                                }\n                                const link = links[0];\n                                const limitedSpeed = link.instance.speed;\n                                resources[outNode.id] = resources[outNode.id] || 0;\n                                resources[outNode.id] += (theseResources);\n                            });\n\n                            (this.nodeOut[node.id] || []).forEach(outNode => {\n                                if (!visitedNodes.has(outNode.id) && loopedNodes.has(outNode.id)) {\n                                    visitedNodes.add(outNode.id);\n                                    stack.push(outNode);\n                                }\n                            });\n\n                        }\n\n                        const delta = resources[initialNode] - previousOutput[initialNode];\n\n                        if (!nodeGroupTarget.length || delta > previousOutput || Math.round(delta * 1000000) === 0 || i === 998) {\n                            Object.keys(resources).forEach(key => {\n                                outputIterator[key] = Math.round(100 * outputIterator[key]) / 100;\n                            });\n                            return outputIterator;\n                        } else {\n\n                            iteratorTemp += delta;\n\n                            resources[initialNode] -= previousOutput[initialNode];\n\n                            Object.keys(resources).forEach(key => {\n                                outputIterator[key] = outputIterator[key] || 0;\n                                outputIterator[key] += resources[key];\n                            });\n\n                            previousOutput[initialNode] = delta; // rabbit and the hare.\n                            resources = {[initialNode]: delta};\n                            i++;\n                        }\n                    }\n                };\n\n                const itemPerNode = {};\n                nodeGroupSource.forEach((node) => {\n                    const providedThroughputFromOthers = JSON.parse(JSON.stringify(providedThroughput[node.id] || []));\n                    providedThroughputFromOthers.forEach(provide => {\n                        const resultantResource = visit(node, provide, loopedNodes);\n                        const item = provide.throughput.item;\n                        Object.keys(resultantResource || []).forEach(nodeId => {\n                            itemPerNode[nodeId] = itemPerNode[nodeId] || {};\n                            itemPerNode[nodeId][item] = itemPerNode[nodeId][item] || 0;\n                            itemPerNode[nodeId][item] += resultantResource[nodeId];\n                        });\n                    });\n                });\n\n                nodeGroupSource.forEach((node) => {\n                    this.nodeOut[node.id].forEach(outNode => {\n\n                        if (!loopedNodes.has(outNode.id)) {\n                            return;\n                        }\n\n                        const links = this.graphData.links.filter(link => link.source.id === node.id && link.target.id === outNode.id);\n                        if (links && links.length !== 1) {\n                            throw new Error('Too many links found!!!');\n                        }\n                        const foundLink = links[0];\n                        const linkSpeed = foundLink.instance.speed;\n\n                        const totalItems = Object.keys(itemPerNode[node.id] || {}).map(item => itemPerNode[node.id][item]).reduce((a, b = 0) => a + b, 0);\n\n                        Object.keys(itemPerNode[node.id] || {}).forEach(item => {\n                            const q = itemPerNode[node.id][item];\n                            foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                            foundLink.itemThroughPut[item] = foundLink.itemThroughPut[item] || {max: 0, actual: 0};\n                            foundLink.itemThroughPut[item].max = (q / (totalItems || 1) * linkSpeed);\n                            foundLink.itemThroughPut[item].actual += (q / ((this.nodeOut[node.id] || []).length || 1));\n                            foundLink.forceOverwritable = true;\n                        });\n                    });\n                });\n\n                nodeGroupSource.forEach((outerNode) => {\n                    outerNode.itemsPerMinute = {};\n                    outerNode.efficiency = 1;\n                    nodeGroupSource.forEach((node) => {\n                        const provided = providedThroughput[node.id] || [];\n                        provided.forEach(provideRaw => {\n                            const provide = JSON.parse(JSON.stringify(provideRaw));\n                            const item = provide.throughput.item;\n                            outerNode.itemsPerMinute[item] = (itemPerNode[outerNode.id][item] || 0);\n                        });\n                    });\n                });\n\n\n                //=========================\n                // let totalLinkThroughput = {};\n                //\n                // let linkPairs = [];\n                // let sourcesSet = new Set();\n                //\n                // (derivedGraphOutgoing[origin] || []).forEach(outgoingNode => {\n                //   const sources = nodeGroupSource.map(node => node.id);\n                //   const targets = superNodeGraphLookupInflated[outgoingNode].map(node => node.id);\n                //\n                //   sources.forEach(source => {\n                //     targets.forEach(target => {\n                //       const link = this.graphData.links.filter(link => link.source.id === source && link.target.id === target);\n                //       let foundLink = null;\n                //       if (link && link.length === 1) {\n                //         foundLink = link[0];\n                //       } else if (link && link.length > 1) {\n                //         throw new Error('Too many links found!!!');\n                //       } else {\n                //         return;\n                //       }\n                //\n                //       linkPairs.push({source, target, speed: foundLink.instance.speed, link: foundLink});\n                //       sourcesSet.add(source);\n                //       totalLinkThroughput[source] = totalLinkThroughput[source] || 0;\n                //       totalLinkThroughput[source] += foundLink.instance.speed;\n                //     });\n                //   });\n                // });\n                //\n                // linkPairs.sort(\n                //     (t1, t2) => {\n                //       return t1.speed - t2.speed;\n                //     }\n                // );\n                //\n                // console.error(\"HE WASSSSS\", sourcesSet);\n                //\n                // sourcesSet.forEach(sourceMain => {\n                //   let totalItemThroughput = 0;\n                //   const localItemThroughput = nodeGroupSourceThroughput.map(throughput => {\n                //\n                //     const q = throughput.throughput.quantity;\n                //     const t = throughput.throughput.time;\n                //     const e = throughput.efficiency;\n                //     const o = throughput.throughput.overclock;\n                //     const s = throughput.throughput.speed;\n                //     const i = throughput.throughput.item;\n                //\n                //     const maxItemsPerSecLimiter = throughput.maxItemsPerSecLimiter === undefined ? Infinity : throughput.maxItemsPerSecLimiter;\n                //     const tmp = Math.min(q / t * e * o * s || 0, maxItemsPerSecLimiter);\n                //\n                //     return tmp;\n                //   }).reduce((a, b = 0) => a + b, 0);\n                //\n                //   const totalItems = Object.keys(itemPerNode[sourceMain] || {}).map(item => itemPerNode[sourceMain][item]).reduce((a, b = 0) => a + b, 0);\n                //\n                //   console.log(\"HE WAS\", itemPerNode, totalItems, sourceMain);\n                //\n                //   totalItemThroughput += (totalItems / 60);\n                //\n                //   let processingType = 1;\n                //   if (totalItemThroughput * 60 > totalLinkThroughput[sourceMain]) {\n                //     // split proportioanly the totalItemThroughput\n                //     console.error(\"WE HAVE TOO MANY ITEMS DAMMIT!!!\", totalItemThroughput * 60, totalLinkThroughput[sourceMain])\n                //   } else {\n                //     processingType = 0;\n                //     console.error(\"fewer items!!!\")\n                //     //fill things sequentiually\n                //   }\n                //\n                //\n                //\n                //   let remainingItemProcessing = totalItemThroughput * 60;\n                //   let remainingLinkPairs = linkPairs.filter((link) => link.source === sourceMain).length;\n                //   console.error(\"Starting calc with\", remainingItemProcessing, \"items\", remainingLinkPairs, \"pairs\", \"on\", sourceMain);\n                //   linkPairs.filter((link) => link.source === sourceMain).forEach(pair => {\n                //     const target = pair.target;\n                //     const limitedSpeed = pair.speed;\n                //\n                //     providedThroughput[target] = providedThroughput[target] || [];\n                //     if (processingType === 1) {\n                //       // split everything\n                //       // fraction of this belt of ALL belts:\n                //       const fraction = limitedSpeed / (totalLinkThroughput[sourceMain]);\n                //       pair.fraction = fraction;\n                //       console.error(\"Processing type 1\", limitedSpeed, totalLinkThroughput[sourceMain])\n                //     } else {\n                //       if (remainingItemProcessing / remainingLinkPairs > limitedSpeed) {\n                //         // there will be residuals\n                //         const itemsUsed = limitedSpeed;\n                //         remainingItemProcessing -= itemsUsed;\n                //         const fraction = limitedSpeed / (totalItemThroughput * 60);\n                //         pair.fraction = fraction;\n                //         console.error(\"Processing type 2.1\", limitedSpeed, totalItemThroughput * 60)\n                //       } else {\n                //         // no residuals.\n                //         const itemsUsed = remainingItemProcessing / remainingLinkPairs;\n                //         remainingItemProcessing -= itemsUsed;\n                //         const fraction = itemsUsed / (totalItemThroughput * 60);\n                //         pair.fraction = fraction;\n                //         console.error(\"Processing type 2.2\", itemsUsed, totalItemThroughput * 60)\n                //       }\n                //     }\n                //     console.error(\"Created one link with fraction\", pair.fraction);\n                //     remainingLinkPairs -= 1;\n                //   });\n                //\n                //   linkPairs.filter((link) => link.source === sourceMain).forEach(pair => {\n                //     const source = pair.source;\n                //     const target = pair.target;\n                //     const speed = pair.speed;\n                //     const foundLink = pair.link;\n                //     const fraction = pair.fraction || 1;\n                //     const limitedSpeed = speed;\n                //\n                //     providedThroughput[target] = providedThroughput[target] || [];\n                //\n                //     console.error(\"OK HERE IS THE DEBUG\", nodeGroupSourceThroughput, linkPairs.filter((link) => link.source === sourceMain));\n                //\n                //     nodeGroupSourceThroughput.forEach(itemRaw => {\n                //       const throughput = JSON.parse(JSON.stringify(itemRaw));\n                //       const i = throughput.throughput.item;\n                //       //check propagated limited\n                //       const maxItemsPerSecLimiter = throughput.maxItemsPerSecLimiter === undefined ? Infinity : throughput.maxItemsPerSecLimiter;\n                //\n                //       let itemPerSecBeforeBeltLimiting = itemPerNode[sourceMain][i]  * fraction / 60 / (nodeGroupSourceThroughput.filter(item => item.throughput.item ===i)).length;\n                //       console.error(\"???\", itemPerNode[sourceMain][i], fraction)\n                //       console.log(\"Here is the limiting thing\", itemPerSecBeforeBeltLimiting * 60 * 2)\n                //\n                //       // need to do some weird math to constrain the items/psec to a PORTION of the belt limited\n                //       const limitedItemPerSecByBelt = limitedSpeed / 60;\n                //\n                //       const beltMaxForThisEntry = limitedItemPerSecByBelt * 60;\n                //\n                //       throughput.maxItemsPerSecLimiter = itemPerSecBeforeBeltLimiting;\n                //       console.log(\"Here are the prereqs\", itemPerSecBeforeBeltLimiting)\n                //       console.error(\"Processing throughput from\", source, '->', target, 'quantity: ', 60 * throughput.maxItemsPerSecLimiter, 'fraction:', fraction);\n                //       throughput.calculatedItemPerSecond = throughput.maxItemsPerSecLimiter;\n                //       throughput.efficiency = Infinity;\n                //\n                //       foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                //       foundLink.itemThroughPut[i] = foundLink.itemThroughPut[i] || {max: 0, actual: 0};\n                //       foundLink.itemThroughPut[i].max +=  (itemPerSecBeforeBeltLimiting / totalItemThroughput) * beltMaxForThisEntry;\n                //       foundLink.itemThroughPut[i].actual += itemPerSecBeforeBeltLimiting * 60 * fraction;\n                //\n                //       providedThroughput[target].push(throughput);\n                //     });\n                //   })\n                // })\n\n\n                //=========================\n\n\n                (derivedGraphOutgoing[origin] || []).forEach(outgoingNode => {\n                    const sources = nodeGroupSource.map(node => node.id);\n                    const targets = superNodeGraphLookupInflated[outgoingNode].map(node => node.id);\n\n                    sources.forEach(source => {\n                        targets.forEach(target => {\n\n                            const link = this.graphData.links.filter(link => link.source.id === source && link.target.id === target);\n\n                            let foundLink = null;\n                            if (link && link.length === 1) {\n                                foundLink = link[0];\n                            } else if (link && link.length > 1) {\n                                throw new Error('Too many links found!!!');\n                            } else {\n                                return;\n                            }\n\n                            const linkSpeed = foundLink.instance.speed;\n\n                            const totalItems = Object.keys(itemPerNode[source] || {}).map(item => itemPerNode[source][item]).reduce((a, b = 0) => a + b, 0);\n\n\n                            Object.keys(itemPerNode[source] || {}).forEach(item => {\n                                const q = itemPerNode[source][item];\n                                foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                                foundLink.itemThroughPut[item] = foundLink.itemThroughPut[item] || {max: 0, actual: 0};\n                                foundLink.itemThroughPut[item].max = (q / totalItems * linkSpeed);\n                                foundLink.itemThroughPut[item].actual += (q / ((this.nodeOut[source] || []).length || 1));\n                                foundLink.forceOverwritable = true;\n                            });\n\n\n                            nodeGroupSource.forEach((node) => {\n                                const provided = providedThroughput[node.id] || [];\n\n\n                                const provideByItem = {};\n\n                                provided.forEach(provide => {\n                                    const item = provide.throughput.item;\n                                    provideByItem[item] = provideByItem[item] || [];\n                                    provideByItem[item].push(provide);\n                                });\n\n                                Object.keys(provideByItem).forEach(item => {\n                                    const thisProvide = provideByItem[item];\n                                    const totalCalculated = thisProvide.map(item => item.calculatedItemPerSecond).reduce((a, b = 0) => a + b, 0);\n\n                                    thisProvide.forEach(provideRaw => {\n                                        const provide = JSON.parse(JSON.stringify(provideRaw));\n\n                                        const localModifier = provide.calculatedItemPerSecond / totalCalculated;\n\n                                        provide.calculatedItemPerSecond = localModifier / 60 * (itemPerNode[source][item] / ((this.nodeOut[source] || []).length || 1));\n\n                                        provide.calculatedItemPerSecond = Math.min(provide.calculatedItemPerSecond, linkSpeed / 60);\n                                        provide.maxItemsPerSecLimiter = provide.calculatedItemPerSecond;\n\n                                        const throughput = provide;\n                                        const q = throughput.throughput.quantity;\n                                        const t = throughput.throughput.time;\n                                        const e = throughput.efficiency;\n                                        const o = throughput.throughput.overclock;\n                                        const s = throughput.throughput.speed;\n\n                                        const rawCalculation = q / t * e * o * s || 0;\n\n                                        if (rawCalculation < provide.calculatedItemPerSecond) {\n                                            throughput.throughput.overclock = Infinity;\n                                        }\n\n                                        providedThroughput[target] = providedThroughput[target] || [];\n                                        providedThroughput[target].push(throughput);\n                                    });\n                                });\n                            });\n\n                        });\n                    });\n\n                });\n\n\n            }\n        };\n\n        propagateNodeToEdgesRevised(thisNodeInflated, outgoingInflated, node, outgoing);\n\n        Object.keys(derivedGraphIncoming).forEach(key => {\n            const accessor = derivedGraphIncoming[key];\n            accessor.delete(parseInt(node, 10));\n        });\n\n        myTinyQueue.reheapify();\n    }\n\n    editEfficiencyArc('efficiency', 59, 322);\n};\nexport const initSimulation = () => {\n    const bodyEl = document.getElementById('svgParent');\n    const width = bodyEl.clientWidth;\n    const height = bodyEl.clientHeight;\n    return d3.forceSimulation()\n        .force('link', d3.forceLink().id(function (d) {\n            return d.id;\n        }).distance(60))\n        .force('charge', d3.forceManyBody().strength(20))\n        // .force('center', d3.forceCenter(width / 2, height / 2))\n        .force('collision', d3.forceCollide().radius(function (d) {\n            return 120;\n        }))\n        .force('xAxis', d3.forceX().strength(0.1).x(function (d) {\n            return d.initialX || (width / 2);\n        }))\n        .force('yAxis', d3.forceY().strength(0.5).y(function (d) {\n            return d.initialY || (height / 2);\n        }));\n};\n\nexport const updateGraph = function (simulation, graphNodesGroup, graphLinksGroup) {\n    const t = this;\n    let nodes = this.graphData.nodes;\n    let links = this.graphData.links;\n\n    this.nodeIn = {};\n    this.nodeOut = {};\n\n    links.forEach(elem => {\n        const outgoing = elem.source.id;\n        const incoming = elem.target.id;\n        this.nodeOut[outgoing] = this.nodeOut[outgoing] || [];\n        this.nodeIn[incoming] = this.nodeIn[incoming] || [];\n\n        this.nodeOut[outgoing].push(elem.target);\n        this.nodeIn[incoming].push(elem.source);\n    });\n\n    nodes.forEach(node => {\n        const input_slots = node.instance.input_slots;\n        const output_slots = node.instance.output_slots;\n        node.open_in_slots = input_slots - (t.nodeIn[node.id] || []).length;\n        node.open_out_slot = output_slots - (t.nodeOut[node.id] || []).length;\n    });\n\n    recalculateStorageContainers.call(t);\n\n    const drag = d3.drag()\n        .clickDistance(10)\n        .on('start', (d) => {\n            drag_start.call(this, d, simulation, t);\n        }).on('drag', (d) => {\n            drag_drag.call(this, d, t);\n        }).on('end', function (d) {\n            d3.event.sourceEvent.stopImmediatePropagation();\n            drag_end.call(this, d, t, simulation);\n        });\n\n    let graphNodesData =\n        graphNodesGroup\n            .selectAll('.' + 'node-data-class')\n            .data(nodes, d => d.id);\n\n    let graphNodesEnter =\n        graphNodesData\n            .enter()\n            .append('g')\n            .classed('node-data-class', true)\n            .attr('id', d => d.id || null)\n            // .on('contextmenu', (d, i)  => {\n            //   t.remove(d);\n            //   d3.event.preventDefault();\n            // })\n            // .on('mouseover', d => console.log(`d.id: ${d.id}`))\n            // .on('click', d => t.handleNodeClicked(d))\n            .on('wheel.zoom', function (d) {\n                wheelZoomCalculation.call(this, d);\n            })\n            .on('click', function (d) {\n                d3.event.stopImmediatePropagation();\n                node_clicked.call(this, d, t);\n                // self.onNodeClicked.emit(d.id);\n            }).on('dblclick', function (d) {\n            d3.event.stopImmediatePropagation();\n            remove_select_from_nodes(t);\n            d.fx = null;\n            d.fy = null;\n        }).on('mouseover', function (d) {\n            node_mouse_over.call(this, d, t);\n        }).on('mouseout', function (d) {\n            node_mouse_out.call(this, d, t);\n        }).on('mousedown', function (d) {\n            node_mouse_down.call(this, d, t);\n        }).on('mouseup', function (d) {\n            node_mouse_up.call(this, d, t);\n        }).call(drag);\n\n    let graphNodesExit =\n        graphNodesData\n            .exit()\n            .remove();\n\n    let graphNodeCircles =\n        graphNodesEnter\n            .append('circle')\n            .classed(constants.graphNodeClass, true)\n            .attr('cursor', 'pointer')\n            .attr('r', d => 50);\n\n    const callbacks = [];\n    addEfficiencyArc(graphNodesEnter, 'efficiency', 59, 322);\n    addNodeImage(graphNodesEnter);\n    insertNodeOverclock(graphNodesEnter);\n    insertNodeTier(graphNodesEnter);\n    insertComponents.call(t, graphNodesEnter);\n\n    // merge\n    graphNodesData =\n        graphNodesEnter.merge(graphNodesData);\n\n    // links\n    let graphLinksData =\n        graphLinksGroup\n            .selectAll('.' + 'link-data-class')\n            .data(links, function (d) {\n                return d.source.id + '-' + d.target.id;\n            });\n    let graphLinksEnter =\n        graphLinksData\n            .enter()\n            .append('g')\n            .classed('link-data-class', true);\n\n    let graphLinksExit =\n        graphLinksData\n            .exit()\n            .remove();\n\n\n    const linkFullObject = graphLinksEnter\n        .append('g')\n        .attr('id', function (d) {\n            return 'path-parent' + d.source.id + '-' + d.target.id;\n        })\n        .classed(constants.lineParentObjectClass, true);\n\n    // apply styling to each selected line\n    linkFullObject.append('path')\n        .classed(constants.lineStylingPathClass, true)\n        .classed(constants.lineStylingFullClass, true)\n        .attr('display', 'none')\n        .attr('stroke', 'orange')\n        .attr('stroke-width', 10);\n    linkFullObject.append('path')\n        .classed(constants.lineStylingArrowClass, true)\n        .classed(constants.lineStylingFullClass, true)\n        .attr('display', 'none')\n        .attr('stroke', null)\n        .attr('marker-end', 'url(#highlight-path-arrow-orange)')\n        .attr('stroke-width', 3);\n\n    linkFullObject\n        .append('path')\n        .classed(constants.lineObjectClass, true)\n        .attr('stroke', function (d) {\n            return d3.color('#000000');\n        })\n        .attr('marker-end', 'url(#default-path-arrow)');\n\n    insertEdgeLabel.call(this, linkFullObject);\n\n    // apply styling to each selected line\n    linkFullObject\n        .append('path')\n        .classed(constants.lineHitboxObjectClass, true)\n        .on('mouseover', function (d) {\n        }).on('mouseout', function (d) {\n    }).on('click', function (d) {\n        pathMouseClick.call(this, d, t);\n    });\n\n    // merge\n    graphLinksData =\n        graphLinksEnter.merge(graphLinksData);\n\n    simulation\n        .nodes(nodes)\n        .on('tick', () => {\n            handleTick.call(this, graphNodesData, graphLinksData, simulation);\n        })\n        .on('end', () => {\n            console.log('Simulation Ended!');\n        });\n\n    simulation\n        .force('link')\n        .links(links);\n    // simulation\n    // .force('link', d3.forceLink().links(forceLinks))\n    // experiment: weights>\n    // t.linkWeights = {}\n    // links.forEach(elem => {\n    //   t.linkWeights[elem.target.id] = t.linkWeights[elem.target.id] + 1 || 1;\n    //   // t.linkWeights[elem.source.id] = t.linkWeights[elem.source.id] + 1 || 1;\n    // })\n    //\n    // simulation.force('charge', d3.forceManyBody().strength(function(d) {\n    //   return 20 - (20 * t.linkWeights[d.id]);\n    // }));\n    callbacks.forEach(callback => callback());\n    simulation.alphaTarget(0.3).restart();\n\n//     //get svg element.\n//     var svg = document.getElementById(\"mainRender\");\n//\n// //get svg source.\n//     var serializer = new XMLSerializer();\n//     var source = serializer.serializeToString(svg);\n//\n// //add name spaces.\n//     if(!source.match(/^<svg[^>]+xmlns=\"http\\:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n//         source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n//     }\n//     if(!source.match(/^<svg[^>]+\"http\\:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n//         source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n//     }\n//\n// //add xml declaration\n//     source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n//\n// //convert svg source to URI data scheme.\n//     var url = \"data:image/svg+xml;charset=utf-8,\"+encodeURIComponent(source);\n//\n// //set url value to a element's href attribute.\n//\n//     var download = document.createElement('a');\n//     download.href = url;\n//     download.download = 'reddot.png';\n//     download.click();\n};\n\nexport const deselect_path_and_nodes = function (t) {\n    t.setState({selectedPath: null, selectedNode: null});\n    d3.selectAll('.' + constants.lineStylingFullClass).attr('display', 'none');\n    remove_select_from_nodes(t);\n};\n\nexport const zoom_actions = (graphObjects) => {\n    graphObjects.attr('transform', d3.event.transform);\n};\n\nexport const handleTick = function (graphNodesData, graphLinksData, simulation) {\n    //update circle positions each tick of the simulation\n    const k = 100 * simulation.alpha();\n    graphNodesData\n        .attr('transform', function (d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        })\n        .attr('cx', function (d) {\n            return d.x;\n        })\n        .attr('cy', function (d) {\n            return d.y;\n        });\n\n    //update link positions\n    graphLinksData.selectAll('line')\n        .attr('x1', function (d) {\n            return d.source.x;\n        })\n        .attr('y1', function (d) {\n            return d.source.y;\n        })\n        .attr('x2', function (d) {\n            return d.target.x;\n        })\n        .attr('y2', function (d) {\n            return d.target.y;\n        });\n\n    //update link positions\n    graphLinksData.selectAll('path')\n        .attr('d', function (d) {\n            return 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y;\n        });\n\n    calculateLabelPositions.call(this, graphLinksData);\n\n    graphLinksData.selectAll('.' + constants.lineObjectClass)\n        .each(function (d) {\n            d.source.vx += k;\n            d.target.vx -= k;\n        });\n};","import constants from './constants';\nimport {deselect_path_and_nodes} from './graphActions';\nimport * as d3 from 'd3';\nimport TinyQueue from '../TinyQueue';\nimport {strongly_connected_components_standalone} from './algorithms';\nimport {spliceUtil} from './util';\nimport {updateNodeTierExternal} from \"./nodeActions\";\n\nexport const recalculateStorageContainers = function () {\n\n    const nodeUnion = new Set(Object.keys(this.nodeIn));\n    Object.keys(this.nodeOut).forEach(node => nodeUnion.add(node));\n    const nodeUnionArray = Array.from(nodeUnion);\n\n    const nodeLookup = {};\n\n    nodeUnionArray.forEach((value, index) => {\n        nodeUnionArray[index] = this.graphData.nodes.filter(elem => elem.id.toString() === value)[0];\n        nodeLookup[nodeUnionArray[index].id] = nodeUnionArray[index];\n        nodeUnionArray[index].childProvides = [];\n        nodeUnionArray[index].hasSources = new Set();\n        nodeUnionArray[index].containedItems = [];\n\n        if (nodeUnionArray[index].machine.name !== 'Container' && nodeUnionArray[index].machine.name !== 'Logistic') {\n        } else {\n            nodeUnionArray[index].allowedIn = [];\n            nodeUnionArray[index].allowedOut = [];\n        }\n    });\n\n    const nodeOutWithSets = {};\n    Object.keys(this.nodeOut).forEach(key => {\n        const value = this.nodeOut[key];\n        nodeOutWithSets[key] = new Set(value.map(elem => elem.id.toString()));\n    });\n\n    const componentsList = strongly_connected_components_standalone(nodeOutWithSets);\n    const superNodeGraphLookup = {};\n    const superNodeGraphLookupInflated = {};\n    const lookupArray = {};\n    componentsList.forEach((list, index) => {\n        superNodeGraphLookup[index] = list;\n        superNodeGraphLookupInflated[index] = list.map(id => nodeLookup[id]);\n        list.forEach(item => {\n            lookupArray[item] = index;\n        });\n    });\n    const derivedGraphOutgoing = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphOutgoing[thisNode] = derivedGraphOutgoing[thisNode] || new Set();\n        const derivedGraphAccessor = derivedGraphOutgoing[thisNode];\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n            derivedGraphAccessor.add(thisId);\n        });\n    });\n    const derivedGraphIncoming = {};\n    const immutableDerivedGraphIncoming = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphIncoming[thisNode] = derivedGraphIncoming[thisNode] || new Set();\n        immutableDerivedGraphIncoming[thisNode] = immutableDerivedGraphIncoming[thisNode] || new Set();\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n\n            if (!derivedGraphIncoming[thisId]) {\n                derivedGraphIncoming[thisId] = new Set();\n                immutableDerivedGraphIncoming[thisId] = new Set();\n            }\n\n            const derivedGraphAccessor = derivedGraphIncoming[thisId];\n            derivedGraphAccessor.add(thisNode);\n            immutableDerivedGraphIncoming[thisId].add(thisNode);\n        });\n    });\n\n    const myTinyQueue = new TinyQueue(Array.from(new Set([...Object.keys(derivedGraphOutgoing), ...Object.keys(derivedGraphIncoming)])), (a, b) => {\n        return (derivedGraphIncoming[a] || []).size - (derivedGraphIncoming[b] || []).size;\n    });\n\n    const globalProvideMap = {};\n\n    const reverseTraversalStack = [];\n\n    while (myTinyQueue.size()) {\n        const node = myTinyQueue.pop();\n\n        reverseTraversalStack.push(node);\n\n        const thisNodeInflated = superNodeGraphLookupInflated[node];\n        const outgoing = Array.from(derivedGraphOutgoing[node] || new Set());\n        const outgoingInflated = outgoing.map(item => superNodeGraphLookupInflated[item]);\n\n        const propagateNodeToEdges = (nodeGroupSource, nodeGroupTarget, origin, targets) => {\n            //gather this node\n            const combinedProvides = [];\n            const combinedProvidesSource = new Set();\n            nodeGroupSource.forEach(node => {\n                if (node.machine.name !== 'Container' && node.machine.name !== 'Logistic') {\n                    combinedProvides.push({item: node.data.recipe, source: origin});\n                } else {\n                    node.childProvides = globalProvideMap[origin] || [];\n                    node.childProvides.forEach(provide => {\n                        if (!combinedProvidesSource.has(provide.source)) {\n                            combinedProvides.push(provide);\n                            combinedProvidesSource.add(provide.source);\n                        }\n                    });\n                    node.allowedIn = node.childProvides.map(elem => elem.item.item.id);\n                    node.allowedOut = node.childProvides.map(elem => elem.item.item.id);\n                    node.containedItems = node.childProvides.map(elem => elem.item.item);\n                }\n            });\n\n            targets.forEach(target => {\n                if (!globalProvideMap[target]) {\n                    globalProvideMap[target] = [];\n                }\n\n                combinedProvides.forEach(provide => {\n                    if (!new Set(globalProvideMap[target].map(elem => elem.source)).has(provide.source)) {\n                        globalProvideMap[target].push(provide);\n                    }\n                });\n            });\n        };\n\n        propagateNodeToEdges(thisNodeInflated, outgoingInflated, node, outgoing);\n\n        Object.keys(derivedGraphIncoming).forEach(key => {\n            const accessor = derivedGraphIncoming[key];\n            accessor.delete(parseInt(node, 10));\n        });\n\n        myTinyQueue.reheapify();\n    }\n\n    while (reverseTraversalStack.length) {\n        const node = reverseTraversalStack.pop();\n\n        const thisNodeInflated = superNodeGraphLookupInflated[node];\n\n        const outgoing = Array.from(derivedGraphOutgoing[node] || new Set());\n        const outgoingInflated = outgoing.map(item => superNodeGraphLookupInflated[item]);\n\n        const propagateNodeToEdgesReversed = (nodeGroupSource, nodeGroupTarget, origin, targets) => {\n\n            const allowed = new Set();\n            nodeGroupTarget.forEach(nodeGroup => nodeGroup.forEach(node => {\n                node.allowedIn.forEach(item => allowed.add(item))\n            }));\n\n            nodeGroupSource.forEach(node => {\n                if (node.machine.name !== 'Container' && node.machine.name !== 'Logistic') {\n                    // NoOp\n                } else {\n                    if (node.allowedIn.length === 0 && node.allowedOut.length === 0) {\n                        node.allowedIn = Array.from(allowed);\n                        node.allowedOut = Array.from(allowed);\n                    }\n                }\n            });\n        };\n        propagateNodeToEdgesReversed(thisNodeInflated, outgoingInflated, node, outgoing);\n    }\n};\n\nexport const addPath = function (passedThis, source, target) {\n\n    const sourceChecker = (source.allowedIn || []).length > 0 || (source.allowedOut || []).length > 0;\n    const targetChecker = (target.allowedIn || []).length > 0 || (target.allowedOut || []).length > 0;\n    const specialSource = ['Container', 'Logistic'].includes(source.machine.name);\n    const specialTarget = ['Container', 'Logistic'].includes(target.machine.name);\n    const mergerTarget = ['Logistic'].includes(source.machine.name) && ['Merger'].includes(source.instance.name);\n    const mergerSource = ['Logistic'].includes(target.machine.name) && ['Merger'].includes(target.instance.name);\n    const targetSlotsUsed = target.instance.input_slots === (passedThis.nodeIn[target.id] ? passedThis.nodeIn[target.id].length : 0);\n    const sourceSlotsUsed = source.instance.output_slots === (passedThis.nodeOut[source.id] ? passedThis.nodeOut[source.id].length : 0);\n\n    console.error(sourceChecker, targetChecker, specialSource, specialTarget, targetSlotsUsed);\n\n    const path_type = passedThis.props.parentAccessor.state.path_type.path_type;\n    path_type.sort((path1, path2) => path1.rank - path2.rank);\n    const upgrades = path_type.filter(path => path.rank >= 0);\n\n    // TODO: Set the correct instance by default\n    const instance = upgrades[0];\n\n    const newEdge = {source: source, target: target, instance, upgradeTypes: upgrades};\n\n    if (((specialSource && !sourceChecker) || (specialTarget && !targetChecker)) || (mergerTarget || mergerSource)) {\n        console.log(\"Special Handling\");\n        // special handling if the source is a container\n\n        // check if there are open slots\n        const outgoing = source.id;\n        const incoming = target.id;\n\n        const usedOut = (passedThis.nodeOut[outgoing] ? passedThis.nodeOut[outgoing].length : 0);\n        const usedIn = (passedThis.nodeIn[incoming] ? passedThis.nodeIn[incoming].length : 0);\n\n        // return early if we can't do anything with this node,\n        if (usedOut >= source.instance.output_slots || usedIn >= target.instance.input_slots) {\n            passedThis.updateGraphHelper();\n            return;\n        }\n\n        const filterResult = passedThis.graphData.links.filter(function (d) {\n            if (d.source.id === newEdge.target.id && d.target.id === newEdge.source.id) {\n                removePath(d, passedThis);\n            }\n            return (d.source.id === newEdge.source.id && d.target.id === newEdge.target.id) || newEdge.source.id === newEdge.target.id;\n        });\n\n        if (filterResult.length === 0) {\n            passedThis.graphData.links.push(newEdge);\n        }\n        passedThis.updateGraphHelper();\n    } else {\n        //checked\n\n        // Check if there are items you can shove in\n        const sharedItems = target.allowedIn.filter(value => source.allowedOut.includes(value));\n\n        // check if there are open slots\n        const outgoing = source.id;\n        const incoming = target.id;\n\n        const usedOut = (passedThis.nodeOut[outgoing] ? passedThis.nodeOut[outgoing].length : 0);\n        const usedIn = (passedThis.nodeIn[incoming] ? passedThis.nodeIn[incoming].length : 0);\n\n        // return early if we can't do anything with this node.\n        if (usedOut >= source.instance.output_slots || usedIn >= target.instance.input_slots ||\n            sharedItems.length <= 0) {\n            passedThis.updateGraphHelper();\n            return;\n        }\n\n        const filterResult = passedThis.graphData.links.filter(function (d) {\n            if (d.source.id === newEdge.target.id && d.target.id === newEdge.source.id) {\n                removePath(d, passedThis);\n            }\n            return (d.source.id === newEdge.source.id && d.target.id === newEdge.target.id) || newEdge.source.id === newEdge.target.id;\n        });\n\n        if (filterResult.length === 0) {\n            passedThis.graphData.links.push(newEdge);\n        }\n        passedThis.updateGraphHelper();\n    }\n};\n\nexport const pathMouseClick = function (d, t) {\n    d3.event.stopImmediatePropagation();\n    const parentElement = d3.select(this.parentElement);\n    // const styledLine = parentElement.select('.' + constants.lineStylingPathClass);\n    // const styledMarker = parentElement.select('.' + constants.lineStylingArrowClass);\n\n    if (t.state && t.state.selectedPath && t.state.selectedPath === d) {\n        // set the new selected one to this one\n        deselect_path_and_nodes.call(this, t);\n    } else {\n        deselect_path_and_nodes.call(this, t);\n        d3.selectAll('.' + constants.lineStylingFullClass).attr('display', 'none');\n        t.setState({selectedPath: d});\n        const both = parentElement.selectAll('.' + constants.lineStylingFullClass);\n        both.attr('display', 'inherit');\n    }\n};\n\nexport const removePath = function (d, t) {\n    if (t.graphData.links.indexOf(d) === -1) {\n        throw new Error('d not found in graph links: ' + JSON.stringify(d));\n    }\n    const outgoing = d.source.id;\n    const incoming = d.target.id;\n    spliceUtil(t.nodeOut[outgoing], d.target);\n    spliceUtil(t.nodeIn[incoming], d.source);\n    spliceUtil(t.graphData.links, d);\n};\n\n\nexport const calculatePathTooltipPosition = function (link_label, d3) {\n    link_label.attr('x', function (d) {\n        const node = d3.select(link_label.node().parentElement).selectAll('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x - (d3.select(this).attr('width') / 2);\n    }).attr('y', function (d) {\n        return d.point.y - (d3.select(this).attr('height') / 2);\n    });\n};\n\n\nexport const calculateLabelPositions = function (link_label) {\n    const text = link_label.selectAll('.' + constants.nodeVersionTextClass);\n    text.attr('x', function (d) {\n        const node = d3.select(d3.select(this).node().parentElement.parentElement).select('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x;\n    }).attr('y', function (d) {\n        return d.point.y;\n    });\n\n    const image = link_label.selectAll('.' + constants.lineLimitedThroughputClass);\n    image.attr('x', function (d) {\n        const node = d3.select(d3.select(this).node().parentElement.parentElement).select('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x - 44;\n    }).attr('y', function (d) {\n        return d.point.y + d.tempIndex[d3.select(this).attr('data-key')] * 20 + 15;\n    });\n\n    const secondarytext = link_label.selectAll('.' + constants.lineLimitedThroughputText);\n    secondarytext.attr('x', function (d) {\n        const node = d3.select(d3.select(this).node().parentElement.parentElement).select('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x - 20;\n    }).attr('y', function (d) {\n        return d.point.y + d.tempIndex[d3.select(this).attr('data-key')] * 20 + 24;\n    });\n\n\n};\n\n\nexport const insertEdgeLabel = function (elem) {\n\n    // Perhaps not needed!\n    const link_label = elem.append('g').attr('class', 'textLabel');\n\n\n    updateNodeTierExternal(link_label, 0, 0);\n\n    const link_label2 = elem.append('g').attr('class', 'resourceThroughput');\n\n    d3.selectAll('.' + constants.lineLimitedThroughputText).remove();\n    d3.selectAll('.' + constants.lineLimitedThroughputClass).remove();\n\n    d3.selectAll('.resourceThroughput').each(function (d) {\n\n        const edgeThis = d3.select(this);\n\n        let index = 0;\n        d.tempIndex = {};\n        Object.keys(d.itemThroughPut || {}).forEach((key) => {\n            const item = d.itemThroughPut[key];\n\n            if (!d.itemIconLookup) return;\n\n            // d.tempIndex\n            d.tempIndex[key] = index++;\n\n            let definedColor = 'LightCoral';\n            let linkClass = 'link-has-problems';\n\n            if (d.forceOverwritable) {\n                definedColor = 'LightBlue';\n            }\n\n            if (item.actual <= item.max) {\n                definedColor = 'white';\n                linkClass = null;\n            }\n\n            const icon = d.itemIconLookup[key];\n\n            edgeThis.classed('link-has-problems', false);\n            if (linkClass) {\n                edgeThis.classed('link-has-problems', true);\n            }\n\n            edgeThis.append('svg:image')\n                .classed(constants.lineLimitedThroughputClass, true)\n                .attr('xlink:href', function (d) {\n                    return icon;\n                })\n                .attr('data-key', key)\n                .attr('height', 20)\n                .attr('width', 20);\n\n\n            edgeThis.append('text')\n                .attr('fill', 'black')\n                .attr('class', 'overclockFont')\n                .classed(constants.lineLimitedThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('stroke', 'black')\n                .attr('stroke-width', 4)\n                .attr('font-size', 20)\n                .attr('data-key', key)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n\n            edgeThis.append('text').attr('fill', definedColor)\n                .attr('class', 'overclockFont')\n                .classed(constants.lineLimitedThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('font-size', 20)\n                .attr('data-key', key)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n        });\n    });\n};","import constants from './constants';\nimport {addPath, removePath} from './edgeActions';\nimport * as d3 from 'd3';\nimport {deselect_path_and_nodes} from './graphActions';\nimport {spliceUtil} from './util';\n\nimport {parseSvg} from 'd3-interpolate/src/transform/parse';\n\nexport const add_node = (d, t) => {\n\n    const zoomData = parseSvg(d3.select('#svgGroup').attr('transform'));\n    console.error(zoomData);\n\n    var viewCenter = [];\n\n\n    const bodyEl = document.getElementById('svgParent');\n    console.log(bodyEl, \"AAAAAA\");\n    const width = bodyEl.clientWidth;\n    const height = bodyEl.clientHeight;\n\n    viewCenter[0] = (0.5) * (width / zoomData.scaleX) - (zoomData.translateX / zoomData.scaleX);\n    viewCenter[1] = (0.5) * (height / zoomData.scaleY) - (zoomData.translateY / zoomData.scaleY);\n\n    d.id = d.id || t.id++;\n    d.x = d.x || 0;\n    d.y = d.y || 0;\n\n    d.fx = viewCenter[0];\n    d.fy = viewCenter[1];\n    console.error(viewCenter);\n\n    d.overclock = d.overclock || 100;\n    t.graphData.nodes.push(d);\n    t.updateGraphHelper();\n};\n\nexport const delete_node = function (d, t) {\n    // unselect currently selected node\n    const selectedNode = t.state.selectedNode;\n    remove_select_from_nodes(t);\n\n    const toSplice = t.graphData.links.filter(function (l) {\n        return l.source.id === selectedNode.id || l.target.id === selectedNode.id;\n    });\n\n    toSplice.map(function (l) {\n        removePath(l, t);\n    });\n    spliceUtil(t.graphData.nodes, selectedNode);\n};\n\n\nexport const node_clicked = function (d, t) {\n    // unselect currently selected node\n    const previouslySelected = t.state.selectedNode;\n    remove_select_from_nodes(t);\n    if (previouslySelected !== d) {\n        deselect_path_and_nodes(t);\n        t.setState({selectedNode: d});\n\n        d3.select(this).classed(constants.graphNodeHoverClass, true)\n            .classed(constants.graphNodeGrabbedClass, false)\n            .classed(constants.selectedNodeClass, true);\n    }\n};\n\nexport const remove_select_from_nodes = function (graphSvg) {\n    d3.select('.' + constants.selectedNodeClass)\n        .classed(constants.selectedNodeClass, false)\n        .classed(constants.graphNodeGrabbedClass, false);\n    graphSvg.setState({selectedNode: null});\n};\n\n\nexport const node_mouse_over = function (d, graphSvg) {\n\n    graphSvg.setState({mouseOverNode: d3.select(this).datum()});\n    d3.select(this).classed(constants.graphNodeHoverClass, true);\n};\n\nexport const node_mouse_out = function (d, graphSvg) {\n    graphSvg.setState({mouseOverNode: null});\n    d3.select(this).classed(constants.graphNodeHoverClass, false);\n};\n\nexport const node_mouse_down = function (d, graphSvg) {\n    if (d3.event.shiftKey) {\n        graphSvg.setState({shiftHeld: true, sourceId: d3.select(this).datum().id});\n    } else {\n        d3.select(this).classed(constants.graphNodeGrabbedClass, true);\n    }\n};\n\nexport const node_mouse_up = function (d, graphSvg) {\n    // Only triggered if it's not a drag\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n    } else {\n        //probably can't get to this case\n    }\n    graphSvg.setState({shiftHeld: false});\n};\n\n\nconst overClockCalculation = (d, percentage_metric, offset, endOffsetRaw) => {\n    const endOffset = endOffsetRaw + offset;\n    const percentage = d[percentage_metric] * 100 || 0;\n    const arc = d3.arc()\n        .innerRadius(50)\n        .outerRadius(50);\n\n    const m = (endOffset - offset) / 100;\n    const b = offset;\n\n    const start = b / 180 * Math.PI;\n    const end = (m * percentage + b) / 180 * Math.PI;\n    return arc({startAngle: start, endAngle: end});\n};\n\n\nexport const addEfficiencyArc = (parent, percentage_metric, offset, endOffset) => {\n    parent.append('path').filter(function (d) {\n        return !['Container', 'Logistic'].includes(d.machine.name)\n    })\n        .attr('class', constants.overclockedArcClass)\n        .attr('fill', 'none')\n        .attr('stroke-width', 8);\n\n    editEfficiencyArc(percentage_metric, offset, endOffset);\n};\n\nexport const editEfficiencyArc = (percentage_metric, offset, endOffset) => {\n    d3.selectAll('.' + constants.overclockedArcClass)\n        .attr('d', function (d) {\n            return overClockCalculation(d, percentage_metric, offset, endOffset);\n        })\n        .attr('stroke', function (d) {\n\n            function perc2color(perc) {\n                var r, g, b = 0;\n                if(perc < 50) {\n                    r = 255;\n                    g = Math.round(5.1 * perc);\n                }\n                else {\n                    g = 255;\n                    r = Math.round(510 - 5.10 * perc);\n                }\n                var h = r * 0x10000 + g * 0x100 + b * 0x1;\n                return '#' + ('000000' + h.toString(16)).slice(-6);\n            }\n\n            const p =  100 * (d[percentage_metric] || 0);\n            return perc2color(p)\n        });\n};\n\nexport const addNodeImage = (parent) => {\n    parent.append('svg:image')\n        .attr('class', function (d) {\n            if (d.machine && d.machine.icon) {\n                return 'machine-icon';\n            }\n            return 'dev-icon';\n        })\n        .attr('xlink:href', function (d) {\n            if (d.instance && d.instance.icon) {\n                return d.instance.icon;\n            }\n            if (d.machine && d.machine.icon) {\n                return d.machine.icon;\n            }\n            return 'https://raw.githubusercontent.com/rhocode/rhocode.github.io/master/img/satoolsfactory_icons/Smelter.png';\n        })\n        .attr('x', function (d) {\n            return -50;\n        })\n        .attr('y', function (d) {\n            return -50;\n        })\n        .attr('height', 100)\n        .attr('width', 100);\n};\n\nexport const wheelZoomCalculation = function (d, overclockOverride = null, selectedElem = null) {\n    if (overclockOverride === null) {\n        d3.event.stopImmediatePropagation();\n        let roughEstimate = -1;\n\n        if (d3.event.deltaY < 0) {\n            roughEstimate = 1;\n        }\n\n        d.overclock = (d.overclock + (roughEstimate));\n        if (d.overclock < 0) {\n            d.overclock = 251 + d.overclock;\n        } else if (d.overclock > 250) {\n            d.overclock = d.overclock - 251;\n        }\n        updateOverclock(d3.select(this).select('.' + constants.overclockedTextClass));\n    } else {\n        d.overclock = overclockOverride;\n        updateOverclock(selectedElem);\n    }\n\n\n};\n\nexport const updateOverclock = function (textElement) {\n    textElement.text(function (d) {\n        return d.overclock;\n    });\n};\n\nexport const updateNodeTier = function (textElement) {\n    textElement.text(function (d) {\n        return d.instance.machine_version.representation;\n        // + (d.id ? '(' + d.id + ')' : '' );\n    });\n};\n\nexport const updateComponents = function (elementsToUpdate) {\n    const t = this;\n    const itemAccessor = t.props.parentAccessor.state.recipe.item;\n    elementsToUpdate.each(function (d) {\n        const allowedInRemaining = d.allowedIn.slice();\n        const provided = t.nodeIn[d.id] || [];\n        const actualIn = provided.map(node => node.allowedOut).flat(1);\n\n        actualIn.forEach(id => {\n            spliceUtil(allowedInRemaining, id);\n        });\n\n        const element = d3.select(this);\n\n        element.selectAll('.' + constants.nodeRequirementsSubIconClass).remove();\n\n        if (allowedInRemaining.length > 0) {\n            element.append('text').attr('class', 'fas fa-arrow-left')\n                .classed(constants.nodeRequirementsSubIconClass, true)\n                .attr('x', function (d) {\n                    return 56;\n                })\n                .attr('y', function (d) {\n                    return -28;\n                })\n                .attr('height', 25)\n                .attr('width', 25);\n            const fetchRemainingIn = allowedInRemaining.map(item =>\n                itemAccessor.filter(findItem => item === findItem.id)[0]\n            );\n\n            if (fetchRemainingIn.length > 1)\n                console.log(fetchRemainingIn);\n\n            const outputtedItems = new Set();\n\n            let index = 0;\n            fetchRemainingIn.forEach((remaining) => {\n                if (outputtedItems.has(remaining.icon)) {\n                    return;\n                }\n                outputtedItems.add(remaining.icon);\n                element.append('svg:image')\n                    .classed(constants.nodeRequirementsSubIconClass, true)\n                    .on('mousedown', function (d) {\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .on('click', function (d) {\n                        const findSuitableSource = t.graphData.nodes.filter(node => node.id !== d.id && node.open_out_slot > 0\n                            && node.allowedOut.includes(remaining.id));\n                        const thisNode = t.graphData.nodes.filter(node => node.id === d.id);\n                        if (findSuitableSource.length > 0) {\n                            addPath(t, findSuitableSource[0], thisNode[0]);\n                        }\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .attr('xlink:href', function (d) {\n                        return remaining.icon;\n                    })\n                    .attr('x', function (d) {\n                        return 58 + 28 + (28 * index++);\n                    })\n                    .attr('y', function (d) {\n                        return -28;\n                    })\n                    .attr('height', 25)\n                    .attr('width', 25);\n            });\n        }\n        const allowedOutRemaining = d.allowedOut.slice();\n        const provides = t.nodeOut[d.id] || [];\n        const actualOut = provides.map(node => node.allowedIn).flat(1);\n        actualOut.forEach(id => {\n            spliceUtil(allowedOutRemaining, id);\n        });\n\n        if (allowedOutRemaining.length > 0) {\n            element.append('text').attr('class', 'fas fa-arrow-left')\n                .classed(constants.nodeRequirementsSubIconClass, true)\n                .attr('x', function (d) {\n                    return -58 - 25;\n                })\n                .attr('y', function (d) {\n                    return 3;\n                })\n                .attr('height', 25)\n                .attr('width', 25);\n            const fetchRemainingOut = allowedOutRemaining.map(item =>\n                itemAccessor.filter(findItem => item === findItem.id)[0]\n            );\n\n            const outputtedItemsIn = new Set();\n\n            let index = 0;\n            fetchRemainingOut.forEach((remaining) => {\n                if (outputtedItemsIn.has(remaining.icon)) {\n                    return;\n                }\n                outputtedItemsIn.add(remaining.icon);\n                element.append('svg:image')\n                    .classed(constants.nodeRequirementsSubIconClass, true)\n                    .on('mousedown', function (d) {\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .on('click', function (d) {\n                        const findSuitableTarget = t.graphData.nodes.filter(node => node.id !== d.id && node.open_in_slots > 0\n                            && node.allowedIn.includes(remaining.id));\n                        const thisNode = t.graphData.nodes.filter(node => node.id === d.id);\n                        if (findSuitableTarget.length > 0) {\n                            addPath(t, thisNode[0], findSuitableTarget[0]);\n                        }\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .attr('xlink:href', function (d) {\n                        return remaining.icon;\n                    })\n                    .attr('x', function (d) {\n                        return -56 - 25 - 28 - (28 * index++);\n                    })\n                    .attr('y', function (d) {\n                        return 3;\n                    })\n                    .attr('height', 25)\n                    .attr('width', 25);\n            });\n        }\n    });\n};\n\nexport const forceUpdateComponentLabel = function () {\n    updateComponents.call(this, d3.selectAll('.' + constants.nodeRequirementsIconClass));\n};\n\n\nexport const insertComponents = function (parentElement) {\n\n    const el1 = parentElement.append('g').classed(constants.nodeRequirementsIconClass, true);\n\n    el1.each(function (d) {\n        if (d.machine && ['Container', 'Logistic'].includes(d.machine.name)) {\n            // save this for later...\n        } else {\n            d3.select(this).append('svg:image')\n                .classed(constants.nodeProducesClass, true)\n                .attr('xlink:href', function (d) {\n                    return d.data.recipe.item.icon;\n                })\n                .attr('x', function (d) {\n                    return -55;\n                })\n                .attr('y', function (d) {\n                    return 18;\n                })\n                .attr('height', 40)\n                .attr('width', 40);\n        }\n    });\n\n    d3.selectAll('.' + constants.nodeRequirementsIconClass).each(function (d) {\n        if (d.machine && ['Container', 'Logistic'].includes(d.machine.name)) {\n            const nodeThis = d3.select(this);\n            nodeThis.selectAll('.' + constants.nodeProducesClass).remove();\n            const outputtedItems = new Set();\n            let i = 0;\n            (d.containedItems || []).forEach((containedItem, index) => {\n                if (outputtedItems.has(containedItem.icon)) {\n                    return;\n                }\n                outputtedItems.add(containedItem.icon);\n                nodeThis.append('svg:image')\n                    .classed(constants.nodeProducesClass, true)\n                    .attr('xlink:href', function (d) {\n                        return d.containedItems[index].icon;\n                    })\n                    .attr('x', function (d) {\n                        return -55;\n                    })\n                    .attr('y', function (d) {\n                        return 18 + (30 * i++);\n                    })\n                    .attr('height', 40)\n                    .attr('width', 40);\n            });\n        }\n    });\n\n\n    parentElement.append('g').classed(constants.nodeSurplusIconClass, true);\n\n    d3.selectAll('.' + constants.nodeSurplusIconClass).each(function (d) {\n        const nodeThis = d3.select(this);\n        nodeThis.selectAll('.' + constants.nodeProducesPerMinText).remove();\n\n        nodeThis.append('text')\n            .attr('fill', 'white')\n            .attr('class', 'overclockFont')\n            .classed(constants.nodeProducesPerMinText, true)\n            .style('text-anchor', 'end')\n            .style('dominant-baseline', 'central')\n            .attr('stroke', 'black')\n            .attr('stroke-width', 4)\n            .attr('x', -5).attr('y', -37)\n            .attr('font-size', 30)\n            .text(function (d) {\n                let combinedSum = 0;\n                Object.keys(d.itemsPerMinute || {}).forEach(item => {\n                    combinedSum += d.itemsPerMinute[item];\n                });\n\n                return ((Math.round(combinedSum * 100) / 100) || 0) + '/m';\n            });\n\n\n        nodeThis.append('text').attr('fill', 'white')\n            .attr('class', 'overclockFont')\n            .classed(constants.nodeProducesPerMinText, true)\n            .style('text-anchor', 'end')\n            .style('dominant-baseline', 'central')\n            .attr('x', -5).attr('y', -37)\n            .attr('font-size', 30)\n            .text(function (d) {\n                let combinedSum = 0;\n                Object.keys(d.itemsPerMinute || {}).forEach(item => {\n                    combinedSum += d.itemsPerMinute[item];\n                });\n\n                return ((Math.round(combinedSum * 100) / 100) || 0) + '/m';\n            });\n    });\n\n    const el3 = parentElement.append('g').classed(constants.nodeLimitingThroughputClass, true);\n\n\n    d3.selectAll('.' + constants.nodeLimitingThroughputClass).each(function (d) {\n        const nodeThis = d3.select(this);\n        nodeThis.selectAll('.' + constants.nodeLimitingThroughputText).remove();\n\n        Object.keys(d.itemThroughPut || {}).forEach((key, index) => {\n            const item = d.itemThroughPut[key];\n\n            if (!d.itemIconLookup) return;\n\n            let definedColor = 'LightCoral';\n            let nodeClass = 'node-has-problems';\n\n            if (item.actual === item.max) {\n                definedColor = 'white';\n                nodeClass = null;\n            } else if (item.actual < item.max) {\n                definedColor = 'gold';\n            }\n\n            const icon = d.itemIconLookup[key];\n\n            nodeThis.classed('node-has-problems', false);\n            if (nodeClass) {\n                nodeThis.classed('node-has-problems', true);\n            }\n\n            nodeThis.append('svg:image')\n                .classed(constants.nodeLimitingThroughputText, true)\n                .attr('xlink:href', function (d) {\n                    return icon;\n                })\n                .attr('x', -49 + 35).attr('y', 59 + (index * 20))\n                .attr('height', 20)\n                .attr('width', 20);\n\n            nodeThis.append('text')\n                .attr('fill', 'black')\n                .attr('class', 'overclockFont')\n                .classed(constants.nodeLimitingThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('stroke', 'black')\n                .attr('stroke-width', 4)\n                .attr('x', -25 + 35).attr('y', 68 + (index * 20))\n                .attr('font-size', 20)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n\n\n            nodeThis.append('text').attr('fill', definedColor)\n                .attr('class', 'overclockFont')\n                .classed(constants.nodeLimitingThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('x', -25 + 35).attr('y', 68 + (index * 20))\n                .attr('font-size', 20)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n\n        });\n\n    });\n\n    forceUpdateComponentLabel.call(this);\n};\n\nexport const updateNodeTierExternal = function (el, x = 35, y = 35) {\n    el.selectAll('.' + constants.nodeVersionTextClass).remove();\n\n    const backgroundText = el.append('text')\n        .attr('fill', 'white')\n        .attr('class', 'overclockFont')\n        .classed(constants.nodeVersionTextClass, true)\n        .style('text-anchor', 'middle')\n        .style('dominant-baseline', 'central')\n        .attr('stroke', 'black')\n        .attr('stroke-width', 4)\n        .attr('x', x).attr('y', y)\n        .attr('font-size', 30);\n\n    updateNodeTier(backgroundText);\n\n    const tspan = el.append('text').attr('fill', 'white')\n        .attr('class', 'overclockFont')\n        .classed(constants.nodeVersionTextClass, true)\n        .style('text-anchor', 'middle')\n        .style('dominant-baseline', 'central')\n        .attr('x', x).attr('y', y)\n        .attr('font-size', 30);\n\n    updateNodeTier(tspan);\n\n\n};\n\nexport const insertNodeTier = (gEl) => {\n    // const el = gEl.append('g').attr('text-anchor', 'middle').attr('dy', '-' + (nwords - 1) * 7.5);\n    const el = gEl.append('g').attr('id', function (d) {\n        return 'node-level-accessor-' + d.id;\n    });\n    updateNodeTierExternal(el);\n};\n\nexport const insertNodeOverclock = (gEl) => {\n    // const el = gEl.append('g').attr('text-anchor', 'middle').attr('dy', '-' + (nwords - 1) * 7.5);\n    const el = gEl\n        .filter(function (d) {\n            return !['Container', 'Logistic'].includes(d.machine.name)\n        })\n        .append('g').attr('text-anchor', 'middle').attr('dy', 0);\n\n    el.append('circle').attr('r', 17).attr('fill', '#FFFFFF').attr('cx', 32).attr('cy', -38).attr('stroke', 'black').attr('stroke-width', 1);\n\n    const tspan = el.append('text').attr('fill', 'black')\n        .attr('class', 'overclockFont')\n        .classed(constants.overclockedTextClass, true)\n        .attr('x', 32).attr('dy', -32)\n        .attr('font-size', 20)\n        .attr('id', function (d) {\n            return 'node-overclock-accessor-' + d.id;\n        })\n\n    updateOverclock(tspan);\n};","import constants from './constants';\nimport {delete_node} from './nodeActions';\nimport {removePath} from './edgeActions';\n\nimport * as d3 from 'd3';\n\nexport const svgKeyUp = function (d, t) {\n    t.setState({pressedKey: null});\n};\n\nexport const svgKeyDown = function (d, t) {\n    // make sure repeated keyd presses don't register for each keydown\n    if (document.activeElement && document.activeElement.nodeName === 'INPUT') return;\n    if (t.state.pressedKey) return;\n    t.setState({pressedKey: d3.event.keyCode});\n    // this.lastKeyDown = d3.event.keyCode;\n    // const selectedNode = this.selectedNode,\n    //   selectedEdge = this.selectedEdge;\n    //\n    switch (d3.event.keyCode) {\n        case constants.BACKSPACE_KEY:\n        case constants.DELETE_KEY:\n            if (t.state.selectedPath) {\n                removePath.call(this, t.state.selectedPath, t);\n                t.setState({selectedPath: null});\n                t.updateGraphHelper();\n            } else if (t.state.selectedNode) {\n                delete_node.call(this, d, t);\n                t.setState({selectedNode: null});\n                t.updateGraphHelper();\n            }\n            break;\n    }\n};","export const appendMarkerAttributes = (marker) => {\n    return marker.attr('viewBox', '0 -5 10 10')\n        .attr('markerWidth', 10)\n        .attr('markerHeight', 10)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5');\n};","import React, {Component} from 'react';\nimport {svgKeyDown, svgKeyUp} from './keyboardEvents';\nimport {analyzeGraph, deselect_path_and_nodes, initSimulation, updateGraph, zoom_actions} from './graphActions';\nimport {appendMarkerAttributes} from './markerActions';\n\nimport * as d3 from 'd3';\nimport {add_node} from './nodeActions';\nimport {parse, stringify} from 'flatted/esm';\nimport pako from 'pako';\nimport Base64 from 'Base64';\nimport {saveHash} from \"./util\";\n\nconst styles = theme => ({\n    tooltip: {\n        position: 'absolute',\n        textAlign: 'center',\n        padding: 2,\n        font: '12px sans-serif',\n        background: 'lightsteelblue',\n        border: 0,\n        borderRadius: 8,\n        pointerEvents: 'none',\n        zIndex: 1202\n    }\n});\n\nclass GraphSvg extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            snapToGrid: false\n        };\n    }\n\n    static inflateGraphData(data) {\n        return parse(pako.inflate(Base64.atob(data), {to: 'string'}));\n    }\n\n    addNode(nodeData) {\n        add_node(nodeData, this);\n\n        console.log(JSON.stringify(nodeData));\n    }\n\n    resetCamera() {\n        this.inputSvg.transition()\n            .duration(750)\n            .call(this.zoom_handler.transform, d3.zoomIdentity);\n\n        this.updateGraphHelper();\n    }\n\n    jiggle() {\n        this.graphData.nodes.forEach(node => {\n            node.x = 0;\n            node.y = 0;\n        });\n\n        this.updateGraphHelper();\n    }\n\n    fixNodes() {\n        this.graphData.nodes.forEach(node => {\n            node.fx = node.x;\n            node.fy = node.y;\n        });\n\n        this.updateGraphHelper();\n    }\n\n    unfixNodes() {\n        this.graphData.nodes.forEach(node => {\n            node.fx = null;\n            node.fy = null;\n            node.vx = 0;\n            node.vy = 0;\n        });\n\n        this.updateGraphHelper();\n    }\n\n    createGraph(inputSvg, nodes = [], links = [], data = {}) {\n        this.graphData = {\n            nodes: nodes,\n            links: links\n        };\n\n        this.id = Math.max(...(this.graphData.nodes.map(elem => elem.id))) + 1;\n        if (this.id === Number.NEGATIVE_INFINITY) {\n            this.id = 0;\n        }\n        this.inputSvg = inputSvg;\n\n        //add encompassing group for the zoom\n        this.svgGroup = inputSvg.append('g')\n            .attr('class', 'objects')\n            .attr('id', 'svgGroup');\n\n        const graphObjects = this.svgGroup;\n\n        const t = this;\n\n        inputSvg.on('click', function (d) {\n            deselect_path_and_nodes.call(this, t);\n        });\n\n        d3.select(window).on('keydown', function (d) {\n            svgKeyDown.call(this, d, t);\n        }).on('keyup', function (d) {\n            svgKeyUp.call(this, d, t);\n        });\n\n        //add zoom capabilities\n        this.zoom_handler = d3.zoom()\n            .on('zoom', () => zoom_actions(graphObjects))\n            .scaleExtent([0.1, 6]);\n        this.zoom_handler(inputSvg);\n        inputSvg.on('dblclick.zoom', null);\n\n        //Create definitions for the arrow markers showing relationship directions\n        const defs = graphObjects.append('defs');\n        appendMarkerAttributes(defs.append('svg:marker')\n            .attr('id', 'default-path-arrow')\n            .attr('refX', 35));\n\n        appendMarkerAttributes(defs.append('svg:marker')\n            .attr('id', 'highlight-path-arrow-orange')\n            .attr('fill', 'orange')\n            .attr('refX', 24));\n\n        appendMarkerAttributes(defs.append('svg:marker')\n            .attr('id', 'dragged-end-arrow')\n            .attr('refX', 7));\n\n        const filter = defs.append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', '130%')\n            .attr('width', '130%')\n            .attr('filterUnits', 'userSpaceOnUse');\n\n        filter.append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 5)\n            .attr('result', 'blur');\n\n        filter.append('feOffset')\n            .attr('in', 'blur')\n            .attr('result', 'offsetBlur');\n\n        filter.append('feFlood')\n            .attr('in', 'offsetBlur')\n            .attr('flood-color', 'white')\n            .attr('flood-opacity', '1')\n            .attr('result', 'offsetColor');\n\n        filter.append('feComposite')\n            .attr('in', 'offsetColor')\n            .attr('in2', 'offsetBlur')\n            .attr('operator', 'in')\n            .attr('result', 'offsetBlur');\n\n        const feMerge = filter.append('feMerge');\n\n        feMerge.append('feMergeNode')\n            .attr('in', 'offsetBlur');\n        feMerge.append('feMergeNode')\n            .attr('in', 'SourceGraphic');\n\n\n        //The dragged line\n        this.dragLine = graphObjects.append('g').append('svg:path')\n            .attr('class', 'link dragline line-object hidden')\n            .attr('d', 'M0,0L0,0')\n            .attr('stroke', function (d) {\n                return d3.color('#000000');\n            })\n            .style('marker-end', 'url(#dragged-end-arrow)');\n\n        const graphLinksGroup = graphObjects.append('g') //graphLinksData\n            .attr('class', 'links-g-group');\n\n        const graphNodesGroup = graphObjects\n            .append('g')\n            .attr('class', 'nodes-g-group');\n\n        let simulation = initSimulation();\n\n        this.graphNodesGroup = graphNodesGroup;\n        this.graphLinksGroup = graphLinksGroup;\n        this.simulation = simulation;\n        this.updateGraphHelper();\n    }\n\n    updateGraphHelper() {\n        updateGraph.call(this, this.simulation, this.graphNodesGroup, this.graphLinksGroup);\n    }\n\n    clearGraphDataRaw() {\n        const parent = d3.select(d3.select('#mainRender').node().parentElement);\n        d3.select('#mainRender').selectAll('*').remove();\n        d3.select('#mainRender').remove();\n\n        return parent.append('svg').attr('id', 'mainRender');\n    }\n\n    clearGraphData(t) {\n        deselect_path_and_nodes.call(this, t);\n        const svg = this.clearGraphDataRaw();\n        this.createGraph(svg);\n    }\n\n    loadGraphData(data) {\n        const svg = this.clearGraphDataRaw();\n        //nodes, links, data\n        this.createGraph(svg, data.graphData.nodes, data.graphData.links);\n    }\n\n    compressGraphData() {\n        const compressedData = {\n            satisgraphtory: {\n                version: 0.01\n            },\n            graphData: this.graphData,\n            playerData: {},\n            secret: {}\n        };\n        return Base64.btoa(pako.deflate(stringify(compressedData), {to: 'string'}));\n    }\n\n    uploadDataWithResponse() {\n        const data = {data: this.compressGraphData()};\n        return saveHash(data);\n    }\n\n    analyze = () => {\n        analyzeGraph.call(this);\n        this.updateGraphHelper();\n    };\n\n    componentDidMount() {\n        // // const data = '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';\n        // const data = 'eJy9XG1z47YR/is3/Oz6uAAIkvetSdupp3FyzWXSDx6Ph5Fom3MyqZLUXT03+e8FFnzBGylSOkuJLZISsIvn2V3sAvDdfQu+5HVTVGXwIbwO4Sp4qrP989+yNgs+BBBcBftd9prX3QMiHjT5ps5bcUODP6++BWW1zRtxx8RHu6L8LK8j+Qn+fxdw8TwWP4n4ScUPhPKX7Blkb0DlL9kYIvlLfh3k90E2gDS4F30Q2YbINkS2IbINkW2IbENkGyLbENmGSClUtqCyBZUtqGxBZQsqW1Auuv0WbNWgqGz6km2eizKXt7KTbLervubbm1I+SMcHvxzkyJnsvSibNis3sgmTgg57Ad02/+11r/CQcoutgPUq+F/wgYTi/TX4wOR7JTDf7KrN5+AD4P0+Lx+K8qHZVW2DLfBJdWjxkfiWFLfN/4effXlVb+LuL1yQpr0IvQoee2mPvTgxst32Y119KTqqJBrPWfOpOtQb9URCs6nKNhMYbG/a/AWfSqwKcXMjPvqpqj4f9vIp757+9lxXh6fnjwoSCWL++FhsirzcvKI18ZTpL6KaNR/z+rYoDy0il6ARdUyw1GAiCi0mIrCZiIjJRERdJiLWMQHIBOuYgJOYCAcmwGAiVMCzHnjwAR9FNvAR9wEfxcuBjxILePDAHKU6zDycN3juwMwtmLkHZt7DTAyYYxvmlK6CmZgGT02DB2AW8LEPeO4Az73A8xXAcxt4oVnCaRTFSZTQmEfgY4IbTMThvMHHDhPxAoOPacdEZDBxWugZmaC2wdsox8xGOY58KMcST4M0vFiIe+xGGmK9PLjHRqCJjwSaJLRxT8DEPSEu7kmPO0fc+ZQHrMSdHcM9cXBPvLgnPe7ccJaFuCc27j7zTgyYExPm1IY5dcw7tcw79Zh32geaGGEG8p1wjnwBHchsYEmdwJJ6A0s6HViOQZomPjZSI46IoRpIQwgW1BASG2sIqQk2hMxFG8KogztRcH+vcMINuKfiOrDZVAZCbhMAYexjAMLkZAogTH0cgMhldRIwq9VIAGKTgNmuSQLmvjoJmAfbJGBeLElITZs/l4TYIGEim4T5dBIwXzc5wOzd5QDS0znAIsDlQJQFOgdYIMxEdiAuBcSiwBfbgfRuAGBE93MZSI5FdyCuiRO/iWP9YwT4NRMrYOV0lAdqGj09avTUjTzUjjxeo6dD4k4MyM/N3NMlRj9A6M3kgTqBH6g38gM9PfQD9cZ+oGbwZ1bwZ07wZy4FzKaA+YI/G6yemYHn7OopnJ9t/agz1xWY3xXYdLR38WS24YfX3Hr52IlMT4jgGA2RS0O0iIaxhFUpffKdUh7wFrHJbMoDbhUL/jIW1tSx4BSyC0kwfYEf9QW3ugW7vPWTwPv0HlR+L8D+PlMAEK8vhPOzLneyfuDetB84X0EDd8urJTTwxKTBzPw9s0LslFgQWzUWxL6JeKhuITZ84eyIRBctrSXzEcqtgcFfBEM8zcrReSGOvdx1RW6DsmUiI77VZvUTLtdyG9zUA26iVjb7pcZ9VZTYsyp/F5oQ5k/i6f5GdSSeUFOxeL1ibFQMdMVWrFECFsCmYrGpWKorlixSLBkVI7pi06muqxhWxoZiKZiK4bL5pGapz1FSOmpGNc1U/bxUs8jRjFuaEV0zsOczrHwd1TTQmK7aCtBIaINGQhs0aqjmhBcPnyQko2rRqBpRxfJS1ZijWmSpxgzVwkWq8VE1rqu2YpolWAabqqWWapGuWrxEM9DCRqxpBivCBgE7bBCgc5o5lbNfNS1wJLpqKwIHATtwEIjnVEsXaaY5QaprtsYJiOMExHYCI9jCItWI5gSgzQOErPEC4ngBsb0gOUE3zQsAdN3WuAFx3IDYbsDX60Y1PwBtNiB0jSNQxxGo7QjGPKVM+UjMJVSfQamu2xpPoI4nUNsTwNBtUfygmisA03Vb4wvM8QU2PyEsmeAJ031BnxHYGl9gji8w2xdM3ZZkRYTpvqBPCWyNLzDHF5jyhTrfFHspnXSlbpm9qFt1MuBQZzu8RYg28hCBuMHd5WK7zcXtY7ZrcpWukz+v7oRPxPfijd7rnTG7dbPP822XYRflvkvWG0ywROquPQCvKBFN5bGEh/a1015aeFeNPAznHcRzrj3f7LJGgkplEn2n9vRFySfUvceTDFLlEFvh8QS8wvMGeIWHDuQVFqAMr2QPEV5JfDheyeHFeCVHneCV1C7FKzz9gEKwDAOUghuNgGKwrAKUg/UToCCsmwAlYcUEKArrJEBZWJQACsNiBFAaFiAEpWE9QVBajGNCaWhyBKVhXUBQWqJ8CjvGTF+p1qX4UrnwWnRovExjErm8bkyYwo/GhEl6bw646eRhOBSEMEFNrBuSSsX1lpOGBMsMKT7HkNBn7tQOrQDKMCSFZNojCZGJUIpN+VUinYXoY8Qts0ln6YfQ1od8getgFR0uHGNKPGOccxa0QixC0PJSxbq0lvA6ocYLrOHL0Ij88vtZBLtaREii12aP1OpRTlLSWu4SA80piyFH0PTZT7dHdjqYcwaD7tZt+gk4RaFuDJCGRoCmoRGgaagFaBpOBGguA/Q9/lgddaCk+LI6OsWtlpqc162Ub8idYWkbVJRaCiVxGeGxLpArZn+qC/FQmYh23AXLJSkfb6QFaDDKz/aHumhf8TY1UMUyZ0QVNF+kWL14xgpIoAkq2H67r77mNdabRncGtuEybOk52AJW0HfdTjAFZhoh4Ar9AC1EZpYA3YNhmNyEK9bhSvxwxT4jxHR3wgi7JG7OCKmfmGVAURL6gBL8IFAQzZihDlZXllmzYD+JzQQ5Skg/TdDQg/cduxL/3Y/vo1JYrVEswyiJBgWxghp/d4I6ZZXI2FSWksRgFncKR2ZV2dMRgqWOzzA7ZpnOLCV2yzMDMD8nAANT5k+pOpXqmr/4SE1jrA8yFkb9EI90En2PTvhEJ3Ld3LULDfR42p2o4050WdwhC92JpnPuFJMzLZeZ8yDTTIoLi6qz8jOGUv+s5I+TSjNMvbGyVsutlKnf6mhx5/4qvxH30ZjsrGoeY2vee/y6xhwbx31OFBpIJJpzxQMUZIpMD3VYFa5QR6Z9tKscE0udSCNG8Ner47ctmHLhdcygXBVMYS20qjE9rTGSGrHTSEWzjoaAcUpjfk7j+JzGyTmN0zMa8/CcxnBaYzQSfo6F8RMtTDVmWuPR1XjUh3Ss2HCRoS3kZ2o5C1NPefnfQ1a2mPlOuGHsLQDVkhJ2LW0l+GvT5C9/7ESv2nUjk4K23Tcf3r+vs6/XT0X7fPjj0OS13BnNy/Z6U728r5+rjZhE+vfuW9dF9f4la9q8fl+8PL1vsraqds1jtmmr+vVBzlzN+0HQ9b580gW/u/18LWKNBsdE5mliJnEfJos639d5I5TM2i4U4uqLP9t/02H+WO33ef3wS51343xLYTd1VV5I1E/CHpu2Ki8h68cq210KvZvyqWovMia0i0uJw7F93GXtxczw12p7AVGfNnX+9QJy/lNcxKt+zEQEvIj1lfJvAi8h6te8KB+repNvHy5qhLfV9rDL6od/1GKGuMQ4K3FzERMRHxeHlwvF+UHcpSLVvw/F5vPXy7jbpzbPdxcbmZL2Q569XEzYx2J/CRz/Xm6yRjp4uT00bV1kFxxmdhm3+2eefXl9uHRQuR2DilwRlyfW2FUgvnKQ63hqEwofy7ML/WNns0bPk7sjm31tgduPqrZgQ2nBjlcWzLsZMhYWsSyLAjHNCHM4yBEFxt1bFxeaqI4l7clQYCjkohE5ZpQUMTOhisYyjKwrw8iRMizmRhkmFSR6BYS7vcN6i6e4maiQyGAfNLnm4zi9e2/KvChcc+MUrWZuiQlPasCDG84nWBI9Yknd7rXiKgmnyEqIqQ09pg2fOogwrw2z7HrgSsGs6afW/j0yIu8WmVxcq4vyqV+PpUnUicJjyJ0Dqeu3dp9P4jp7yh8GgQ+3/4I+DPVQ4M7bcBiGJtxYx020vSN17MJffHfAMYdY3NMrcsXmVPuRmFBfvdZ3x1xczS1C/EtBzUiJf61ZuFLw8VDn4su3HR23l6Di1oRfCXWWSFJ9Pye1d2XGzcqZ/RnfbmUX6c/Ynwl17yUaybgFEPxUPRVNW2yC8fLNbXu/K9p2WHbqbw00yRBuuS/cphM7x/HMUD0BQtl5b8B4vnF0p1StK059ymY/NXd1U/18Dp/Y7GOzuptdDVEWlzlVlCVrYn7o38kbvZnghPjpJd8hNf3Vm9uGEtObhrpzZuNU25hRB5X07dBTjldEZx0BYJqPcce+1jwObvP6CQF/05CGQvrpZEB1XMCNvU6X+g03mYsv8m933v0gaBQkvtMjJgvDkUQWDdtZ/pMH1McG62Lb0CMZe+T4x6iqS3Ysgda7pGaXbOwyHXuMpozI12PkNw5vkeB8S6sw9Mee/NGEmhpQ80DbvHSYZeHEkUEtK41DKw01xY0J2GTgXeABdLW/XODxOQOa9XRVyb7DSjaQJwLxYBUL00A/eaC2orq5Y3IPRfJ/q2zv3c/ynJa4xQwluJE/dVW++7XaohQIjf5j/XSk+gNJ77wajMuI77A/XEZUPcouGBCzX/2IMp8IHSCTOhXdg5tBU61navaZ6n1On8kLcFFa9cCMHhL92LX6J44mAppxmm9i2woPpaHKv9SdwhFCgactBJ26aJjgDm2hzynJhZJZ0s+wgf7PyyX9cHBBTg0oFoPQJ2L5vdvAcn+mRxs8XjYEczfawIQxMDuoRHqveKZsiOdur2SCp8julRu9jolm5O11xsgEGMi/NNxvWsZFrWWFb2bNayzQfDMzNSP70j9jTjk+fkb0D5ndKZnpFRxtBlyYUZPRieM/RpPIaML9TWBSA5wnJahS9M3vKoLJPrtL6VO/Y4x42asy8OeqfhHh9P7/K9emRw==';\n        // // const data = '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';\n        // // const data = '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';\n        // // const data = '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';\n        this.loadGraphData(this.props.parentAccessor.state.coreGraphData);\n        // this.analyze();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.selectedPath !== prevState.selectedPath || this.state.selectedNode !== prevState.selectedNode) {\n            this.props.parentAccessor.setState({\n                selectedPath: this.state.selectedPath,\n                selectedNode: this.state.selectedNode\n            });\n        }\n    }\n\n\n    render() {\n        return <svg id=\"mainRender\"/>;\n    }\n}\n\nexport default GraphSvg;","import React from 'react';\nimport {ClickAwayListener, withStyles} from '@material-ui/core';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({});\n\nclass ClickAwayListenerV2 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.windowOnClobber = null;\n        this.clobberList = [];\n    }\n\n    componentDidMount() {\n        this.windowOnClobber = d3.select(this.props.clobberedElement).on('click');\n        d3.select(this.props.clobberedElement).on('click', this.props.onClickAway);\n\n        for (let elem of document.querySelectorAll('*')) {\n            this.clobberList.push(elem);\n            elem.addEventListener('click', this.props.onClickAway, true);\n        }\n    }\n\n    componentWillUnmount() {\n        d3.select(this.props.clobberedElement).on('click', this.windowOnClobber);\n        for (let elem of this.clobberList) {\n            elem.removeEventListener('click', this.props.onClickAway, true);\n        }\n        this.clobberList = [];\n    }\n\n    render() {\n        const {onClickAway} = this.props;\n\n        return (\n            <ClickAwayListener onClickAway={onClickAway}>\n                {this.props.children}\n            </ClickAwayListener>\n        );\n    }\n}\n\nClickAwayListenerV2.propTypes = {\n    classes: PropTypes.object.isRequired,\n    clobberedElement: PropTypes.string.isRequired,\n    onClickAway: PropTypes.func.isRequired,\n    children: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ClickAwayListenerV2);","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport {withStyles} from '@material-ui/core';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport ClickAwayListenerV2 from \"./ClickAwayListenerV2\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    button: {\r\n        flex: '0 0 100%',\r\n        justifyContent: 'left',\r\n        padding: 10,\r\n    },\r\n    paper: {\r\n        margin: theme.spacing.unit * 2,\r\n        display: 'flex',\r\n    },\r\n    label: {\r\n        paddingLeft: 10,\r\n    },\r\n    popper: {\r\n        zIndex: 1200,\r\n        left: '13px !important',\r\n    },\r\n    itemListIcon: {\r\n        height: 24,\r\n        width: 24,\r\n        paddingRight: 15,\r\n    },\r\n    tooltip: {},\r\n    tooltipIcon: {\r\n        height: 40,\r\n        display: 'inline-block',\r\n        paddingLeft: 10\r\n    },\r\n    tooltipIconFirst: {\r\n        height: 40,\r\n        display: 'inline-block',\r\n    },\r\n    tooltipText: {\r\n        fontSize: 18,\r\n        display: 'inline-block',\r\n    },\r\n});\r\n\r\nclass SidebarButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {anchorEl: null};\r\n    }\r\n\r\n    handleMenu = event => {\r\n        this.setState({anchorEl: event.currentTarget});\r\n    };\r\n\r\n    handleClose = (event) => {\r\n        this.setState({anchorEl: null });\r\n    };\r\n\r\n    clickAwayClose = (event) => {\r\n        // event.stopImmediatePropagation();\r\n        if (this.state.anchorEl) {\r\n            this.setState({anchorEl: null});\r\n        }\r\n    };\r\n\r\n    listItems(classes, label, appObject) {\r\n        return this.props.items.map((link) => {\r\n            return (\r\n                <Tooltip key={link.id} className={classes.tooltip} placement=\"right\" title={\r\n                    link.inputs.map((element, index) => {\r\n                        return (\r\n                            <React.Fragment key={element.item.id}>\r\n                                <img src={element.item.icon}\r\n                                     className={index === 0 ? classes.tooltipIconFirst : classes.tooltipIcon}/>\r\n                                <div className={classes.tooltipText}>{element.quantity}</div>\r\n                            </React.Fragment>\r\n                        );\r\n                    })\r\n                }>\r\n                    <MenuItem onClick={() => {\r\n                        const machine_nodes = appObject.state.machine_node.machine_node;\r\n                        machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\r\n                        const upgrades = machine_nodes.filter(node => node.machine_class.id === link.machine_class.id);\r\n                        const instance = upgrades[0];\r\n\r\n                        appObject.graphSvg.addNode(\r\n                            {\r\n                                data: {recipe: link},\r\n                                machine: link.machine_class,\r\n                                allowedIn: link.inputs.map(dict => dict.item.id),\r\n                                allowedOut: [link.item.id],\r\n                                instance: instance,\r\n                                upgradeTypes: upgrades\r\n                            }\r\n                        );\r\n                        this.handleClose();\r\n                    }}>\r\n                        <img alt=\"probably some goat image\" src={link.item.icon} className={classes.itemListIcon}/>\r\n                        {link.name}\r\n                        <div className={classes.grow}/>\r\n                    </MenuItem>\r\n                </Tooltip>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {classes, label, appObject} = this.props;\r\n        const {anchorEl} = this.state;\r\n        const open = Boolean(anchorEl);\r\n        const listItems = this.listItems(classes, label, appObject);\r\n        return (\r\n            <React.Fragment key={label}>\r\n                <Paper className={classes.paper}>\r\n                    <Button\r\n                        aria-owns={open ? 'menu-appbar' : null}\r\n                        aria-haspopup=\"true\"\r\n                        onClick={open ? this.handleClose : this.handleMenu}\r\n                        className={classes.button}\r\n                    >\r\n                        {\r\n                            open ? <RemoveCircleIcon/> : <AddCircleOutlineIcon/>\r\n                        }\r\n                        \r\n                        <div className={classes.label}>\r\n                            {label}\r\n                        </div>\r\n                    </Button>\r\n                    <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition\r\n                            placement=\"right-start\">\r\n                        {({TransitionProps, placement}) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                id=\"menu-list-grow\"\r\n                                style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\r\n                            >\r\n                                <Paper>\r\n                                    <ClickAwayListenerV2 onClickAway={this.clickAwayClose}\r\n                                                         clobberedElement={'#mainRender'}>\r\n                                        <MenuList>\r\n                                            {listItems}\r\n                                        </MenuList>\r\n                                    </ClickAwayListenerV2>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n                </Paper>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SidebarButton);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core';\n\nconst styles = theme => ({\n    root: {},\n});\n\nclass PopupDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {classes, title, contents, open, handleModalClose, children} = this.props;\n        return (\n            <Dialog\n                className={classes.modal}\n                open={Boolean(open)}\n                onClose={handleModalClose}\n                id='modal'\n            >\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    {children}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleModalClose} color='secondary'>Close</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default\nwithStyles(styles)(PopupDialog);","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst styles = theme => ({\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing.unit * 2,\n        right: theme.spacing.unit * 2,\n    },\n});\n\nclass FabPopup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const dontShowAgain = window.localStorage.getItem('dontShowAgain');\n        let modalOpen = false;\n        let dontShow = false;\n\n        if (dontShowAgain === '1') {\n            window.localStorage.setItem('dontShowAgain', '1');\n            dontShow = true;\n        } else {\n            window.localStorage.setItem('dontShowAgain', '0');\n            dontShow = false;\n        }\n\n        if (!dontShow) {\n            modalOpen = true;\n        }\n\n        this.state = {modalOpen, dontShow};\n    }\n\n    handleDontShow = event => {\n        this.setState({ dontShow: event.target.checked });\n        if (event.target.checked) {\n            window.localStorage.setItem('dontShowAgain', '1');\n        } else {\n            window.localStorage.setItem('dontShowAgain', '0');\n        }\n    };\n\n    render() {\n        const {classes, title} = this.props;\n        const children = this.props.children;\n        return (\n            <React.Fragment>\n                <Fab id='helpFab' aria-label='help' color='secondary' className={classes.fab}\n                     onClick={() => this.setState({modalOpen: true})}>\n                    <HelpIcon/>\n                </Fab>\n                <PopupDialog title={''} open={this.state.modalOpen}\n                             handleModalClose={() => this.setState({modalOpen: false})}>\n                    {children}\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={this.state.dontShow}\n                                onChange={this.handleDontShow}\n                                value=\"checkedA\"\n                            />\n                        }\n                        label=\"Don't show this message again\"\n                    />\n\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(FabPopup);","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\n\nconst styles = theme => ({\n    icons: {\n        marginRight: 0\n    },\n});\n\nclass SidebarPopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false};\n    }\n\n    render() {\n        const {classes, Icon, label, title, contents} = this.props;\n\n        return (\n            <React.Fragment>\n                <ListItem button key={label} onClick={() => this.setState({modalOpen: true})}>\n                    <ListItemIcon className={classes.icons}><Icon/></ListItemIcon>\n                    <ListItemText primary={label}/>\n                </ListItem>\n                <PopupDialog title={title} open={this.state.modalOpen}\n                             handleModalClose={() => this.setState({modalOpen: false})}>\n                    {this.props.children}\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(SidebarPopup);","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\n\nimport {withStyles} from '@material-ui/core';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\nimport ClickAwayListenerV2 from \"./ClickAwayListenerV2\";\n\nconst styles = theme => ({\n    root: {},\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    popper: {\n        zIndex: 1200,\n        left: '13px !important',\n    },\n    itemListIcon: {\n        height: 24,\n        width: 24,\n        paddingRight: 15,\n    },\n});\n\nclass InnerNestedSidebarButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null};\n    }\n\n    handleMenu = event => {\n        if (event.currentTarget === this.state.lastTarget)\n            return;\n        this.setState({anchorEl: event.currentTarget, selectedButton: event.currentTarget.id});\n    };\n\n    handleClose = (event) => {\n        this.setState({\n            anchorEl: null,\n            lastTarget: this.state.anchorEl,\n            selectedButton: null\n        }, () => new Promise(resolve => setTimeout(resolve, 100)).then(() => this.setState({lastTarget: null})));\n    };\n\n    render() {\n        const {classes, resource, appObject} = this.props;\n        const {anchorEl} = this.state;\n        const icon = resource.item.icon;\n        const label = resource.item.name;\n        const listItems = resource.purities;\n        const machineIcon = resource.machine_class.icon;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment key={label}>\n                <MenuItem\n                    aria-owns={open ? 'menu-appbar' : null}\n                    aria-haspopup=\"true\"\n                    onClick={open ? this.handleClose : this.handleMenu}\n                    selected={this.state.selectedButton === label}\n                    id={label}\n                >\n                    <img src={icon} className={classes.itemListIcon}/>\n                    {label}\n                </MenuItem>\n                <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition placement=\"right-start\">\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            id=\"menu-list-grow\"\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListenerV2 onClickAway={this.handleClose} clobberedElement={'#mainRender'}>\n                                    <MenuList>\n                                        {\n                                            listItems.map((item) => {\n                                                return (\n                                                    <MenuItem onClick={\n                                                        () => {\n                                                            const machine_nodes = appObject.state.machine_node.machine_node;\n                                                            machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\n                                                            const upgrades = machine_nodes.filter(node => node.machine_class.id === resource.machine_class.id);\n                                                            const instance = upgrades[0];\n                                                            console.log(\"YES, ITS TRIGGERED\", item.name);\n                                                            appObject.graphSvg.addNode(\n                                                                {\n                                                                    data: {\n                                                                        machine: resource,\n                                                                        node: item,\n                                                                        recipe: resource,\n                                                                        purity: item.name\n                                                                    },\n                                                                    machine: resource.machine_class,\n                                                                    allowedIn: [],\n                                                                    allowedOut: [resource.item.id],\n                                                                    instance: instance,\n                                                                    upgradeTypes: upgrades,\n                                                                }\n                                                            );\n                                                            this.handleClose();\n                                                        }\n                                                    } key={label + item.name}><img src={machineIcon}\n                                                                                   className={classes.itemListIcon}/>{item.name}\n                                                    </MenuItem>\n                                                );\n                                            })\n                                        }\n                                    </MenuList>\n                                </ClickAwayListenerV2>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(InnerNestedSidebarButton);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport Popper from '@material-ui/core/Popper';\nimport {withStyles} from '@material-ui/core';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\n\nimport InnerNestedSidebarButton from './InnerNestedSidebarButton';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nconst styles = theme => ({\n    root: {},\n    button: {\n        flex: '0 0 100%',\n        justifyContent: 'left',\n        padding: 10,\n    },\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    popper: {\n        zIndex: 1200,\n        left: '13px !important',\n    },\n    itemListIcon: {\n        height: 24,\n        width: 24,\n        paddingRight: 15,\n    },\n});\n\nclass NestedSidebarButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null};\n    }\n\n    handleMenu = event => {\n        if (event.currentTarget === this.state.lastTarget)\n            return;\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n            lastTarget: this.state.anchorEl\n        }, () => new Promise(resolve => setTimeout(resolve, 100)).then(() => this.setState({lastTarget: null})));\n    };\n\n    render() {\n        const {classes, listItems, label, appObject} = this.props;\n        const {anchorEl} = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment key={label}>\n                <Paper className={classes.paper}>\n                    <Button\n                        aria-owns={open ? 'menu-appbar' : null}\n                        aria-haspopup=\"true\"\n                        onClick={open ? this.handleClose : this.handleMenu}\n                        className={classes.button}\n                    >\n                        {\n                            open ? <RemoveCircleIcon/> : <AddCircleOutlineIcon/>\n                        }\n                        <div className={classes.label}>{label}</div>\n                    </Button>\n                    <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition\n                            placement=\"right-start\">\n                        {({TransitionProps, placement}) => (\n                            <Grow\n                                {...TransitionProps}\n                                id=\"menu-list-grow\"\n                                style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                            >\n                                <Paper>\n                                    <ClickAwayListener onClickAway={this.handleClose}>\n                                        <MenuList>\n                                            {Object.keys(listItems).map(key => {\n                                                const returnDivList = [];\n                                                if (['Miner'].includes(key)) {\n                                                    listItems[key].forEach(resource => {\n                                                        returnDivList.push(<InnerNestedSidebarButton\n                                                            appObject={appObject} resource={resource}/>);\n                                                    });\n                                                }\n                                                return returnDivList;\n                                            })}\n                                        </MenuList>\n                                    </ClickAwayListener>\n                                </Paper>\n                            </Grow>\n                        )}\n                    </Popper>\n                </Paper>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(NestedSidebarButton);","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport Popper from '@material-ui/core/Popper';\nimport {withStyles} from '@material-ui/core';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\nimport ClickAwayListenerV2 from \"./ClickAwayListenerV2\";\n\nconst styles = theme => ({\n    root: {},\n    button: {\n        flex: '0 0 100%',\n        justifyContent: 'left',\n        padding: 10,\n    },\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    popper: {\n        zIndex: 1200,\n        left: '13px !important',\n    },\n    itemListIcon: {\n        height: 24,\n        width: 24,\n        paddingRight: 15,\n    },\n});\n\nclass SimpleSidebarButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null};\n    }\n\n    handleMenu = event => {\n        if (event.currentTarget === this.state.lastTarget)\n            return;\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n            lastTarget: this.state.anchorEl\n        }, () => new Promise(resolve => setTimeout(resolve, 100)).then(() => this.setState({lastTarget: null})));\n    };\n\n    render() {\n        const {classes, listItems, label, appObject} = this.props;\n        const {anchorEl} = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <Paper className={classes.paper}>\n                <Button\n                    aria-owns={open ? 'menu-appbar' : null}\n                    aria-haspopup=\"true\"\n                    onClick={open ? this.handleClose : this.handleMenu}\n                    className={classes.button}\n                >\n                        {\n                            open ? <RemoveCircleIcon/> : <AddCircleOutlineIcon/>\n                        }\n                    <div className={classes.label}>Logistics</div>\n                </Button>\n                <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition placement=\"right-start\">\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            id=\"menu-list-grow\"\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListenerV2 onClickAway={this.handleClose} clobberedElement={'#mainRender'}>\n                                    <MenuList>\n                                        {Object.keys(listItems).map(key => {\n                                            const returnDivList = [];\n                                            if (!['Miner', 'Logistic'].includes(key)) {\n                                                listItems[key].forEach(resource => {\n                                                    returnDivList.push(<MenuItem onClick={() => {\n                                                        const machine_nodes = appObject.state.machine_node.machine_node;\n                                                        machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\n                                                        const upgrades = machine_nodes.filter(node => node.machine_class.id === resource.machine_class.id);\n                                                        const instance = upgrades[0];\n                                                        appObject.graphSvg.addNode(\n                                                            {\n                                                                data: {recipe: resource},\n                                                                machine: resource.machine_class,\n                                                                allowedIn: [],\n                                                                allowedOut: [],\n                                                                instance: instance,\n                                                                upgradeTypes: upgrades\n                                                            }\n                                                        );\n                                                        this.handleClose();\n                                                    }}\n                                                                                 key={resource.machine_class.name + resource.machine_class.id}>\n                                                        <img\n                                                            src={resource.machine_class.icon}\n                                                            className={classes.itemListIcon}/>{resource.machine_class.name}\n                                                    </MenuItem>);\n                                                });\n                                            }\n                                            if (['Logistic'].includes(key)) {\n                                                listItems[key].forEach(resource => {\n                                                    returnDivList.push(<MenuItem onClick={() => {\n                                                        const machine_nodes = appObject.state.machine_node.machine_node;\n                                                        machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\n                                                        const upgrades = machine_nodes.filter(node => node.machine_class.id === resource.machine_class.id && resource.name === node.name);\n                                                        const instance = upgrades[0];\n                                                        appObject.graphSvg.addNode(\n                                                            {\n                                                                data: {recipe: resource},\n                                                                machine: resource.machine_class,\n                                                                allowedIn: [],\n                                                                allowedOut: [],\n                                                                instance: instance,\n                                                                upgradeTypes: upgrades\n                                                            }\n                                                        );\n                                                        this.handleClose();\n                                                    }}\n                                                                                 key={resource.name}>\n                                                        <img src={resource.icon}\n                                                             className={classes.itemListIcon}/>{resource.name}\n                                                    </MenuItem>);\n                                                });\n                                            }\n                                            return returnDivList;\n                                        })}\n                                    </MenuList>\n                                </ClickAwayListenerV2>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(SimpleSidebarButton);","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport {withStyles} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {useExperimentalFeature} from \"./GraphSvg/util\";\n\nconst styles = theme => ({\n    root: {},\n    paper: {\n        margin: 16,\n        padding: 12,\n        display: 'flex',\n        flexDirection: 'column',\n        flexShrink: 0\n    },\n    textField: {\n        paddingBottom: 10,\n    },\n    button: {\n        flex: 1,\n        marginTop: 10,\n        textAlign: 'left',\n        justifyContent: 'left',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing.unit / 4,\n    },\n    tooltip: {},\n    tooltipIcon: {\n        height: 40,\n        display: 'inline-block',\n        paddingLeft: 10\n    },\n    tooltipIconFirst: {\n        height: 40,\n        display: 'inline-block',\n    },\n    tooltipText: {\n        fontSize: 18,\n        display: 'inline-block',\n    },\n    checkbox: {\n        paddingLeft: 22,\n    },\n    checkboxLabel: {\n        height: 30,\n        paddingTop: 30,\n        paddingBottom: 16, \n        fontFamily: 'Roboto sans-serif',\n        fontWeight: 'bold',\n    }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        },\n    },\n};\n\nclass SidebarPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            playerUnlock: this.props.playerUnlock.player_unlock,\n            recipe: this.props.playerUnlock.recipe,\n            selectedDrives: []\n        };\n    }\n\n    handleChangeMultiple = event => {\n        console.log(event.currentTarget);\n        const options = event.currentTarget.parentElement.children;\n        const value = [];\n        for (let i = 0, l = options.length; i < l; i += 1) {\n            if (options[i].getAttribute('value') === event.currentTarget.getAttribute('value')) {\n                if (this.state.selectedDrives.indexOf(options[i].getAttribute('value')) === -1) {\n                    value.push(options[i].getAttribute('value'));\n                }\n            } else {\n                if (options[i].querySelector('input').checked) {\n                    value.push(options[i].getAttribute('value'));\n                }\n            }\n        }\n        this.setState({\n            selectedDrives: value,\n        });\n    };\n\n    render() {\n        const {classes, parentState, playerUnlock} = this.props;\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant=\"h5\">Settings</Typography>\n                {/*<TextField*/}\n                {/*label='Default Conveyor Speed'*/}\n                {/*type='number'*/}\n                {/*className={classes.textField}*/}\n                {/*fullWidth*/}\n                {/*>*/}\n                {/*</TextField>*/}\n\n                {/*<FormControl className={classes.formControl}>*/}\n                {/*<InputLabel htmlFor=\"select-multiple-chip\">Hard Drives</InputLabel>*/}\n                {/*<Select*/}\n                {/*multiple*/}\n                {/*value={this.state.selectedDrives}*/}\n                {/*onChange={this.handleChangeMultiple}*/}\n                {/*input={<Input id=\"select-multiple-chip\" />}*/}\n                {/*MenuProps={MenuProps}*/}\n                {/*renderValue={selected => (*/}\n                {/*<div className={classes.chips}>*/}\n                {/*{selected.map(value => (*/}\n                {/*<Chip key={value} label={value} className={classes.chip} />*/}\n                {/*))}*/}\n                {/*</div>*/}\n                {/*)}*/}\n                {/*>*/}\n                {/*{this.state.playerUnlock.map(drive => {*/}\n                {/*return (<Tooltip key={drive.name+drive.id+'toolip'} className={classes.tooltip} placement=\"right\" title={*/}\n                {/*this.state.recipe[drive.id].inputs.map((element, index) => {*/}\n                {/*return (*/}\n                {/*<React.Fragment key={element.item.id}>*/}\n                {/*<img src={element.item.icon} className={index === 0 ? classes.tooltipIconFirst : classes.tooltipIcon}/>*/}\n                {/*<div className={classes.tooltipText}>{element.quantity}</div>*/}\n                {/*</React.Fragment>*/}\n                {/*);*/}\n                {/*})*/}\n                {/*}>*/}\n                {/*<MenuItem key={drive.name+drive.id} value={drive.name}>*/}\n                {/*<Checkbox checked={this.state.selectedDrives.indexOf(drive.name) !== -1} color=\"primary\" />*/}\n                {/*<ListItemText primary={drive.name} />*/}\n                {/*</MenuItem>*/}\n                {/*</Tooltip>);*/}\n                {/*})}*/}\n                {/*</Select>*/}\n                {/*</FormControl>*/}\n                {\n                    useExperimentalFeature('stg') ?\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={parentState.graphSvg && parentState.graphSvg.state.snapToGrid}\n                                    onChange={() => {\n                                        parentState.graphSvg.setState({snapToGrid: !parentState.graphSvg.state.snapToGrid})\n                                    }}\n                                    value=\"snapToGrid\"\n                                    className={classes.checkbox}\n                                />\n                            }\n                            label=\"Snap To Grid\"\n                            className={classes.checkboxLabel}\n                        /> : null\n                }\n                <Button className={classes.button} fullWidth onClick={() => {\n                    parentState.graphSvg.jiggle();\n                }}>\n                    <ShuffleIcon/>\n                    <div className={classes.label}>Rejiggle Graph</div>\n                </Button>\n                <Button className={classes.button} fullWidth onClick={() => {\n                    parentState.graphSvg.resetCamera();\n                }}>\n                    <ReplayIcon/>\n                    <div className={classes.label}>Reset Camera</div>\n                </Button>\n                <Button className={classes.button} fullWidth onClick={() => {\n                    parentState.graphSvg.fixNodes();\n                }}>\n                    <ReplayIcon/>\n                    <div className={classes.label}>Fix Nodes</div>\n                </Button>\n                <Button className={classes.button} fullWidth onClick={() => {\n                    parentState.graphSvg.unfixNodes();\n                }}>\n                    <UndoIcon/>\n                    <div className={classes.label}>Unfix Nodes</div>\n                </Button>\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(SidebarPanel);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\n\nconst styles = theme => ({\n    label: {\n        paddingLeft: 10,\n    },\n    dialogContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nclass ClearButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false};\n    }\n\n    handleModalClose = () => this.setState({modalOpen: false});\n    handleModalOpen = () => this.setState({modalOpen: true});\n\n\n    render() {\n        const {classes, label, title, children, onClick} = this.props;\n        return (\n            <React.Fragment>\n                <Button color='inherit' onClick={onClick || this.handleModalOpen}>\n                    <DeleteIcon/>\n                    <div className={classes.label}>Clear</div>\n                </Button>\n                <PopupDialog title={'Clear Graph?'} open={this.state.modalOpen}\n                             handleModalClose={this.handleModalClose}>\n                    <div className={classes.dialogContainer}>\n                        <Typography variant=\"h5\">Are you sure you want to clear everything?</Typography>\n                        <Button color=\"secondary\" variant=\"outlined\" className={`${classes.dialogButton}`} onClick={\n                            () => {\n                                this.props.t.graphSvg.clearGraphData(this.props.t);\n                                this.handleModalClose();\n                            }\n                        }>\n                            <DeleteIcon/>\n                            <div className={classes.label}>Yes, I'm sure!</div>\n                        </Button>\n                    </div>\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(ClearButton);","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport TextField from '@material-ui/core/TextField';\nimport {rebuildQueryParams, useExperimentalFeature} from \"./GraphSvg/util\";\n\nconst styles = theme => ({\n    label: {\n        paddingLeft: 10,\n    },\n    dialogContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    inlineDialogButton: {\n        paddingTop: 10,\n        paddingBottom: 10,\n    },\n    dialogButton: {\n        marginTop: 10,\n    },\n    statusMessage: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nclass ShareButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false, value: true};\n    }\n\n    handleModalClose = () => this.setState({modalOpen: false});\n    handleModalOpen = () => this.setState({modalOpen: true});\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (!prevState.modalOpen && this.state.modalOpen) {\n            this.setState({value: 'Loading...'}, () => {\n                this.props.t.graphSvg.uploadDataWithResponse().then(resp => {\n                    const port = window.location.port ? ':' + window.location.port : ''\n                    const url = window.location.protocol + '//' +  window.location.hostname + port + window.location.pathname\n                        + '#' +  resp + rebuildQueryParams();\n                    this.setState({value: url});\n                })\n            })\n        }\n    }\n\n    render() {\n        const {classes, onClick} = this.props;\n        let value = this.state.value;\n\n        return (\n            <React.Fragment>\n                <Button color='inherit' onClick={onClick || this.handleModalOpen}>\n                    <ShareIcon/>\n                    <div className={classes.label}>Share</div>\n                </Button>\n                <PopupDialog title={'Share Code'} open={this.state.modalOpen}\n                             handleModalClose={this.handleModalClose}>\n                    <div className={classes.dialogContainer}>\n                        <div>\n                            <TextField inputRef={ref => this.inputRef = ref} label=\"Share Code\" value={value}>\n                            </TextField>\n                            <Button color=\"inherit\" className={classes.inlineDialogButton} onClick={\n                                () => new Promise(resolve => {\n                                    this.inputRef.select();\n                                    document.execCommand('copy');\n                                    resolve(true);\n                                }).then(a => {\n                                    this.setState({statusMessage: 'Copied!'}, () => {\n                                        setTimeout(() => {\n                                            this.setState({statusMessage: ''});\n                                        }, 3000);\n                                    });\n                                })}\n                            >\n                                <FileCopyIcon/>\n                                <div className={classes.label}>Copy</div>\n                            </Button>\n                        </div>\n                        {useExperimentalFeature('sti' ? <Button color=\"inherit\" className={classes.dialogButton} fullWidth>\n                            <div className={classes.label}>Generate Image</div>\n                        </Button> : null)}\n                        <div className={classes.statusMessage}>\n                            {this.state.statusMessage}\n                        </div>\n                    </div>\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShareButton);","import React from 'react';\nimport {Typography, withStyles} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport {updateNodeTierExternal, wheelZoomCalculation} from \"./GraphSvg/nodeActions\";\nimport * as d3 from 'd3';\n\nconst drawerWidth = 310;\n\nconst styles = theme => ({\n    root: {},\n    formControl: {\n        maxWidth: drawerWidth,\n    },\n    paper: {\n        position: 'absolute',\n        left: drawerWidth + 20,\n        bottom: 20,\n        margin: 16,\n        padding: 12,\n        minWidth: drawerWidth - 100,\n    },\n    textField: {\n        paddingBottom: 10,\n    },\n    button: {},\n    label: {\n        paddingLeft: 10,\n    },\n    slider: {\n        padding: '10px',\n    },\n    overclock: {\n        paddingLeft: 10,\n    },\n});\n\nclass SelectorPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {dummy: false, sliderValue: this.props.selected.overclock};\n    }\n\n    debounce = (func, wait, immediate) => {\n        var timeout;\n\n        return function executedFunction() {\n            var context = this;\n            var args = arguments;\n\n            var later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n\n            var callNow = immediate && !timeout;\n\n            clearTimeout(timeout);\n\n            timeout = setTimeout(later, wait);\n\n            if (callNow) func.apply(context, args);\n        };\n    };\n\n    update = () => {\n        if (this.props.selected.machine) {\n            const el = d3.select('#' + 'node-level-accessor-' + this.props.selected.id);\n            updateNodeTierExternal(el);\n\n            this.props.selected.overclock = this.state.sliderValue;\n            const el2 = d3.select('#' + 'node-overclock-accessor-' + this.props.selected.id);\n            wheelZoomCalculation.call(this, this.props.selected, this.state.sliderValue, el2);\n        } else {\n            // it's a path\n            const el = d3.select('#' + 'path-parent' + this.props.selected.source.id + '-' + this.props.selected.target.id);\n            updateNodeTierExternal(el);\n        }\n    };\n\n    debouncedUpdate = this.debounce(() => {\n        this.update();\n    }, 200);\n\n    upgrade = () => {\n        const instance = this.props.selected.instance;\n        let index = this.props.selected.upgradeTypes.indexOf(instance);\n        const n = this.props.selected.upgradeTypes.length;\n        index = (index + 1);\n        if (index >= n) return;\n        this.props.selected.instance = this.props.selected.upgradeTypes[index];\n        this.update();\n\n        this.setState({dummy: !this.state.dummy});\n    };\n\n    downgrade = () => {\n        const instance = this.props.selected.instance;\n        let index = this.props.selected.upgradeTypes.indexOf(instance);\n        const n = this.props.selected.upgradeTypes.length;\n        index = index - 1;\n\n        if (index < 0) return;\n\n        this.props.selected.instance = this.props.selected.upgradeTypes[index];\n        this.update();\n\n        this.setState({dummy: !this.state.dummy});\n    };\n\n    changeSlider = (event, value) => {\n        this.setState({sliderValue: value}, () => {\n            this.debouncedUpdate();\n        });\n    };\n\n\n\n    render() {\n        const {classes, label} = this.props;\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant='h5'>{label}</Typography>\n                <Typography variant=\"body1\">\n                <IconButton color=\"secondary\" className={classes.button} onClick={this.downgrade}>\n                    <ArrowDownwardIcon/>\n                </IconButton>\n                {this.props.selected.instance.name}\n                <IconButton color=\"primary\" className={classes.button} onClick={this.upgrade}>\n                    <ArrowUpwardIcon/>\n                </IconButton>\n                </Typography>\n                {this.props.overclock !== -1 ?\n                    <React.Fragment>\n                        <Typography id=\"label\" className={classes.overclock} variant=\"body1\">Overclock: {this.state.sliderValue}%</Typography>\n                        <Slider\n                            classes={{ root: classes.slider }}\n                            value={this.state.sliderValue}\n                            min={0}\n                            max={250}\n                            step={1}\n                            onChange={this.changeSlider}\n                        />\n                    </React.Fragment>\n\n\n                    : null}\n\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(SelectorPanel);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {createMuiTheme, MuiThemeProvider, withStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport InfoIcon from '@material-ui/icons/Info';\nimport * as ReactGA from 'react-ga';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\n\nimport Button from '@material-ui/core/Button';\nimport Loader from './Loader';\nimport GraphSvg from './GraphSvg';\n\nimport SidebarButton from './SidebarButton';\nimport FabPopup from './FabPopup';\nimport SidebarPopup from './SidebarPopup';\nimport NestedSidebarButton from './NestedSidebarButton';\nimport SimpleSidebarButton from './SimpleSidebarButton';\nimport SidebarPanel from './SidebarPanel';\nimport ClearButton from './ClearButton';\nimport ShareButton from './ShareButton';\nimport SelectorPanel from './SelectorPanel';\nimport {loadHash, useExperimentalFeature} from \"./GraphSvg/util\";\n\nimport firebase from 'firebase/app'\nimport 'firebase/database'\nimport 'firebase/auth'\n\nconst drawerWidth = 310;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexGrow: 1,\n        flexBasis: 'auto',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        display: 'flex',\n        paddingTop: 64,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        position: 'unset'\n    },\n    drawerTitle: {\n        paddingLeft: 15,\n        paddingTop: 5,\n    },\n    content: {\n        display: 'flex',\n        flexGrow: 1,\n        paddingTop: 64,\n    },\n    toolbar: theme.mixins.toolbar,\n    logo: {\n        width: drawerWidth,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    pathIcon: {\n        height: 15,\n        width: 15,\n        display: 'inline-block'\n    },\n    pathText: {\n        display: 'inline-block'\n    },\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    button: {\n        flex: '0 0 100%',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    inlineDialogButton: {\n        paddingTop: 10,\n        paddingBottom: 10,\n    },\n    dialogButton: {\n        marginTop: 10,\n    },\n    dialogContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    clearButton: {\n        paddingTop: 20,\n    },\n});\n\nconst palette = {\n    primary: { main: '#FF9100' },\n    secondary: { main: '#FF3D00', contrastText: '#FAFAFA' }\n};\n\nconst themeName = 'Pizazz Vermilion Gayal';\n\nconst theme = createMuiTheme({ typography: {\n        useNextVariants: true,\n    }, palette, themeName: themeName});\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false\n        };\n    }\n\n    getRefkeyTableFireBase(table) {\n        const db = this.state.fbdb;\n        const tableRef = db.ref('/' + table);\n        return new Promise(resolve => tableRef.once(\"value\").then(results => resolve(results.val())));\n    }\n\n    generateRecursiveStructureFireBase(startingTable) {\n        const db = this.state.fbdb;\n        const starting = db.ref('/' + startingTable);\n        this.globalStructure = this.globalStructure || {};\n        const globalStructure = this.globalStructure;\n\n        return starting.once(\"value\").then(item => item.val()).then( async results => {\n            if (results.length > 0) {\n                globalStructure[startingTable] = results;\n                const refKeysToProcess = Object.keys(results[0]).filter(str => str.endsWith('_id'));\n\n                while (refKeysToProcess.length > 0) {\n                    const refKey = refKeysToProcess.pop();\n                    const tableName = refKey.slice(0, -3);\n                    if (!globalStructure[tableName]) {\n                        globalStructure[tableName] = await this.getRefkeyTableFireBase(tableName);\n                        Object.keys(globalStructure[tableName]).filter(str => str.endsWith('_id'))\n                            .forEach(name => {\n                                if (!globalStructure[name.slice(0, -3)]) {\n                                    refKeysToProcess.push(name);\n                                }\n                            });\n                    }\n                }\n\n                const recursiveFind = (element, functionToApply) => {\n                    if (Array.isArray(element)) {\n                        element.forEach((elem, index) => {\n                            const shouldChangeThis = recursiveFind(elem, functionToApply);\n                            if (shouldChangeThis) {\n                                console.error('Why are we doing this to an array?');\n                                element[index] = functionToApply(elem);\n                            }\n                        });\n                        return false;\n                    } else if (typeof element === 'object') {\n                        Object.keys(element).forEach(key => {\n                            const elem = element[key];\n\n                            const shouldChangeThis = recursiveFind(elem, functionToApply);\n                            if (shouldChangeThis) {\n                                functionToApply(elem, key, element);\n                            }\n                        });\n                        return false;\n                    } else {\n                        return true;\n                    }\n                };\n\n                Object.keys(globalStructure).forEach(key => {\n                    const rows = globalStructure[key];\n\n                    rows.forEach(row => {\n                        Object.keys(row).filter(str => str.endsWith('_id')).forEach(rowKey => {\n                            const refId = row[rowKey];\n                            const tableName = rowKey.slice(0, -3);\n                            const associatedData = globalStructure[tableName];\n                            delete row[rowKey];\n                            const possibleData = associatedData.filter(elem => elem.id === refId);\n                            if (possibleData.length === 1) {\n                                row[tableName] = possibleData[0];\n                            } else {\n                                throw new Error('Unrecognized Id ' + refId + ' in ' + rowKey + ' within ' + key);\n                            }\n                        });\n                    });\n                });\n\n                Object.keys(globalStructure).forEach(key => {\n                    const rows = globalStructure[key];\n                    rows.forEach(row => {\n                        Object.keys(row).filter(str => str.endsWith('_id')).forEach(rowKey => {\n                            const refId = row[rowKey];\n                            const tableName = rowKey.slice(0, -3);\n                            const associatedData = globalStructure[tableName];\n                            delete row[rowKey];\n\n                            const possibleData = associatedData.filter(elem => elem.id === refId);\n                            if (possibleData.length === 1) {\n                                row[tableName] = possibleData[0];\n                            } else {\n                                throw new Error('Unrecognized Id ' + refId + ' in ' + rowKey + ' within ' + key);\n                            }\n                        });\n                        Object.keys(row).filter(str => !str.endsWith('_id')).forEach(rowKey => {\n                            const rowValue = row[rowKey];\n                            const replaceTable = (id, id_name, object) => {\n                                if (!id_name.endsWith('_id')) {\n                                    if (typeof object[id_name] === 'string' && object[id_name].startsWith('http')) {\n                                        const img = new Image();\n                                        img.src = object[id_name];\n                                    }\n                                    return;\n                                }\n\n                                const refId = id;\n                                const tableName = id_name.slice(0, -3);\n                                const associatedData = globalStructure[tableName];\n                                delete object[id_name];\n\n                                const possibleData = associatedData.filter(elem => elem.id === refId);\n                                if (possibleData.length === 1) {\n                                    object[tableName] = possibleData[0];\n                                } else {\n                                    throw new Error('Unrecognized Id ' + refId + ' in table ' + id_name + ' within ' + object);\n                                }\n                            };\n                            recursiveFind(rowValue, replaceTable);\n                        });\n                    });\n                });\n            }\n\n            return globalStructure;\n        })\n    }\n\n    componentDidMount() {\n        ReactGA.initialize('UA-136827615-1');\n        ReactGA.pageview(window.location.pathname + window.location.search);\n        window.addEventListener(\"hashchange\", () => {\n            document.location.reload();\n        }, false);\n\n        loadHash().then(data => {\n            this.setState({coreGraphData: data}, () => {\n\n                const firebaseInstance = firebase.initializeApp({\n                    apiKey: \"AIzaSyC6qyWIC6Yvc3NmTXYUzQ-jcFE1p3VsKX4\",\n                    authDomain: \"satisgraphtory.firebaseapp.com\",\n                    databaseURL: \"https://satisgraphtory.firebaseio.com\",\n                    projectId: \"satisgraphtory\",\n                    storageBucket: \"satisgraphtory.appspot.com\",\n                    messagingSenderId: \"463653345773\"\n                });\n\n                const fbdb =  firebaseInstance.database();\n\n                this.setState({fbdb, loaded: true}, () => {\n\n                        const generate = (name, cb = () => {}) => {\n                            return () => {\n                                return this.generateRecursiveStructureFireBase(name).then(data => {\n                                    this.setState({[name]: data}, () => {\n                                        console.debug(\"Loaded\", name);\n                                        cb();\n                                    });\n                                });\n                            }\n                        };\n\n                        let wrappedFunction = () => {\n                            this.setState({isLoaded: true})\n                        };\n                        const list = ['spring', 'recipe', 'path_type','machine_node', 'player_unlock', 'machine_class', 'item', 'spring_type', 'purity_type', 'node_type', 'machine_version', \"machine_class\"];\n\n                        list.forEach(item => {\n                            wrappedFunction = generate(item, wrappedFunction);\n                        });\n\n                        wrappedFunction();\n\n\n                        // const gen = generate('player_unlock', generate('item', generate('recipe',\n                        //     generate('machine_class',  generate('machine_node',  generate('machine_version',  generate('spring',\n                        //\n                        //         generate('path_type',  generate('purity_type',   )\n                        //         )))))));\n                        // gen();\n\n                //     return this.generateRecursiveStructureFireBase('player_unlock').then(player_unlock => {\n                //         this.setState({player_unlock}, () => {\n                //             return this.generateRecursiveStructureFireBase('recipe').then(recipe => {\n                //                 this.setState({recipe}, () => {\n                //                     return this.generateRecursiveStructureFireBase('machine_class').then(machine_node => {\n                //                     return this.generateRecursiveStructureFireBase('machine_node').then(machine_node => {\n                //                 //         this.setState({machine_node}, () => {\n                //                 //             return this.generateRecursiveStructureFireBase('spring').then(spring => {\n                //                 //                 this.setState({spring}, () => {\n                //                 //                     return this.generateRecursiveStructureFireBase('path_type').then(path_type => {\n                //                 //                         this.setState({path_type}, () => {\n                //                 //                             return this.generateRecursiveStructureFireBase('purity_type').then(purity_type => {\n                //                 //                                 this.setState({purity_type, isLoaded: true});\n                //                 //                             });\n                //                 //                         });\n                //                 //                     });\n                //                 //                 });\n                //                 //             });\n                //                 //         });\n                //                     });\n                //                 });\n                //             });\n                //         });\n                //     });\n                // });\n\n                // ref.once(\"value\", function(data) {\n                //     const stateObject = {isLoaded: true, loaded: true };\n                //     const endObject = {};\n                //     const dataFull = data.val();\n                //     Object.keys(data.val()).forEach(key => {\n                //         endObject[key] = dataFull[key];\n                //     });\n                //\n                //     Object.keys(data.val()).forEach(key => {\n                //         stateObject[key] = endObject;\n                //     });\n                //\n                //     console.log(stateObject);\n                //     tVar.setState(stateObject);\n                // });\n\n\n\n                // createDatabase().then((db) => {\n                //     this.setState({db, loaded: true});\n                // }).then(() => {\n                //     return this.generateRecursiveStructure('player_unlock').then(player_unlock => {\n                //         this.setState({player_unlock}, () => {\n                //             return this.generateRecursiveStructure('recipe').then(recipe => {\n                //                 this.setState({recipe}, () => {\n                //                     return this.generateRecursiveStructure('machine_node').then(machine_node => {\n                //                         this.setState({machine_node}, () => {\n                //                             return this.generateRecursiveStructure('spring').then(spring => {\n                //                                 this.setState({spring}, () => {\n                //                                     return this.generateRecursiveStructure('path_type').then(path_type => {\n                //                                         this.setState({path_type}, () => {\n                //                                             return this.generateRecursiveStructure('purity_type').then(purity_type => {\n                //\n                //                                                 this.setState({purity_type, isLoaded: true});\n                //                                             });\n                //                                         });\n                //                                     });\n                //                                 });\n                //                             });\n                //                         });\n                //                     });\n                //                 });\n                //             });\n                //         });\n                //     });\n                // });\n\n\n\n                 });\n            });\n        });\n        // saveHash({data: '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'});\n    }\n\n    generateNodeList() {\n        const recipesByMachineClass = {};\n        const machineClassPlural = {};\n        this.state.recipe && this.state.recipe.recipe.forEach(recipe => {\n            const thisList = recipesByMachineClass[recipe.machine_class.name] || [];\n            thisList.push(recipe);\n            recipesByMachineClass[recipe.machine_class.name] = thisList;\n            machineClassPlural[recipe.machine_class.name] = recipe.machine_class.plural;\n        });\n        return Object.keys(recipesByMachineClass).map(key =>\n            <SidebarButton appObject={this} label={machineClassPlural[key]} key={key}\n                           items={recipesByMachineClass[key]}/>\n        );\n    }\n\n    generateContainerList() {\n        const springByClass = {};\n        this.state.purity_type && this.state.spring && this.state.spring.spring.forEach(spring => {\n            const thisList = springByClass[spring.spring_type.name] || [];\n            thisList.push(spring);\n            springByClass[spring.spring_type.name] = thisList;\n        });\n\n        // Manually handle splitters and mergers\n        springByClass['Logistic'] = this.state.machine_node.machine_node.filter(elem => elem.machine_class.name === 'Logistic');\n\n\n        return (\n            <React.Fragment>\n                <SimpleSidebarButton label=\"Logistics\" appObject={this} listItems={springByClass}/>\n            </React.Fragment>\n\n        );\n    }\n\n    generateUnlocksList() {\n        const dataList = [];\n        this.state.player_unlock && this.state.player_unlock.player_unlock.forEach(player_unlock => {\n            const item = this.state.recipe.recipe.filter(elem => elem.player_unlock && (elem.player_unlock.id === player_unlock.id))[0];\n            if (item) {\n                // dataList.push({player_unlock, item});\n            }\n        });\n        return (\n            <div>hello</div>\n        );\n    }\n\n    generateSpringList() {\n        this.generateUnlocksList();\n        const springByClass = {};\n        this.state.spring && this.state.spring.spring.forEach(spring => {\n            const thisList = springByClass[spring.spring_type.name] || [];\n            thisList.push(spring);\n            springByClass[spring.spring_type.name] = thisList;\n        });\n        return (\n            <NestedSidebarButton label='Miners' listItems={springByClass} appObject={this}/>\n        );\n    }\n\n    render() {\n        const {classes} = this.props;\n        if (!this.state.isReady) {\n            return <Loader ready={this.state.isLoaded} parentState={this}/>;\n        }\n        const t = this;\n\n        return <div className={classes.root}>\n\n            <CssBaseline/>\n            <MuiThemeProvider theme={theme}>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <img alt=\"wow so satis factory\" className={classes.logo}\n                             src=\"https://raw.githubusercontent.com/rhocode/rhocode.github.io/master/img/satisgraphtory.png\"\n                             title=\"logo\"/>\n                        <div className={classes.grow} />\n                        {useExperimentalFeature('opt') ? <Button color=\"inherit\">\n                            <OfflineBoltIcon/>\n                            <div className={classes.label}>Optimize</div>\n                        </Button> : null }\n                        <Button color=\"inherit\" onClick={() => t.graphSvg.analyze()}>\n                            <SettingsInputComponentIcon/>\n                            <div className={classes.label}>Analyze</div>\n                        </Button>\n                        <ShareButton t={t}/>\n                        {/*<LoadButton t={t}/>*/}\n                        <ClearButton t={t}/>\n                    </Toolbar>\n                </AppBar>\n\n                <FabPopup>\n                    <Typography variant=\"h4\">Welcome to SatisGraphtory!</Typography>\n                    <Typography variant=\"body1\">Thanks for checking out our tool! If you have any questions or suggestions whatsoever, feel free to join our discord <a href={\"https://discord.gg/ZRpcgqY\"}>here!</a> I'm always looking to add more\n                    functionality!</Typography>\n                    <br />\n                    <Typography variant=\"h5\">This tool will always be free.</Typography>\n                    <Typography variant=\"body1\">If you would like to contribute, contact us on the discord, we'd love your help!</Typography>\n                    <br />\n                    <Typography variant=\"h5\">Graph Basics</Typography>\n                    <ul>\n                        <li><Typography variant=\"body1\">Use the <b>left menu</b> to <b>add</b> machines to the diagram</Typography>\n                        </li>\n                        <li><Typography variant=\"body1\"><b>Click</b> on a node/path to <b>select</b> it</Typography></li>\n                        <li><Typography variant=\"body1\">Press <b>BACKSPACE</b> on a selected node/path to delete\n                            it</Typography></li>\n                        <li><Typography variant=\"body1\">Hold down <b>shift</b> and <b>drag</b> from node to node to create belts</Typography></li>\n                        <li><Typography variant=\"body1\">Use <b>mouse wheel</b> to control overclock (black text in the\n                            white circle)</Typography></li>\n                    </ul>\n                    <Typography variant=\"h5\">Sharing</Typography>\n                    <Typography variant=\"body1\">You can share codes using the Share top left button.</Typography>\n                    <br/>\n                    <Typography variant=\"h5\">Legend</Typography>\n                    <Typography variant=\"body1\"><span style={{'color': 'orange'}}>Orange</span> numbers means machine\n                        wastes time doing nothing</Typography>\n                    <Typography variant=\"body1\"><span style={{'color': 'LightCoral'}}>Red</span> numbers means\n                        machine isn't processing fast enough</Typography>\n                    <Typography variant=\"body1\"><span style={{'color': 'Blue'}}>Blue</span> numbers means the belt capacity was overridden (fix it ASAP!)</Typography>\n                    <br/>\n                    {/*<Typography variant=\"body1\">Special thanks to the following testers: GeekyMeerkat, Stay, HartWeed, safken, marcspc, Laugexd</Typography>*/}\n                    <Typography variant=\"body1\">You can revisit these instructions anytime by clicking on the bottom left.</Typography>\n\n                </FabPopup>\n                {(this.state.selectedNode && this.state.selectedNode.upgradeTypes.length > 1) || (this.state.selectedPath && this.state.selectedPath.upgradeTypes && this.state.selectedPath.upgradeTypes.length > 1) ?\n                    <SelectorPanel label='Options' graphSvg={this.graphSvg}\n                                   overclock={this.state.selectedNode ? this.state.selectedNode.overclock : -1} selected={this.state.selectedNode || this.state.selectedPath}/> : null}\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <List>\n                        <Typography variant=\"h5\" className={classes.drawerTitle}>Nodes</Typography>\n                        {this.generateNodeList()}\n                        {this.generateSpringList()}\n                        {this.generateContainerList()}\n                    </List>\n                    <Divider/>\n\n                    <SidebarPanel parentState={this} playerUnlock={this.state.player_unlock}/>\n\n                    <Divider/>\n\n                    <List>\n                        <SidebarPopup Icon={InfoIcon} label='About/Disclaimers' title='About/Disclaimers'>\n                            <Typography variant=\"body1\">Created by <a href=\"https://github.com/tehalexf\">Alex</a> and <a\n                                href=\"https://github.com/thinkaliker\">Adam</a> (<a\n                                href=\"https://twitter.com/thinkaliker\">@thinkaliker</a>).</Typography>\n                            <Typography variant=\"body1\">Not officially affiliated with Satisfactory, Coffee Stain\n                                Studios AB, or THQ Nordic AB.</Typography>\n                            <Typography variant=\"body1\">Images sourced from the Satisfactory Wiki, which is sourced from\n                                Coffee Stain Studios AB's Satisfactory.</Typography>\n                        </SidebarPopup>\n                        <SidebarPopup Icon={WarningIcon} label='Known Issues' title='Known Issues'>\n                            <ul>\n                                <li>Resource nodes do not have purities displayed on the graph.</li>\n                                <li>No option yet to hide belt and factory numbers.</li>\n                            </ul>\n                        </SidebarPopup>\n                    </List>\n                </Drawer>\n                <div id=\"svgParent\" className={classes.content}>\n                    {this.state.loaded ? <GraphSvg parentAccessor={this} ref={(graphSvg) => {\n                        t.graphSvg = graphSvg;\n                    }}/> : <div/>}\n                </div>\n            </MuiThemeProvider>\n        </div>;\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// PACKAGE DEPENDENCIES\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\nimport './styles/app.scss';\n\n// COMPONENTS\n\n// STYLES\n\n\nReactDOM.render(<App/>, document.getElementById('app'));"],"sourceRoot":""}