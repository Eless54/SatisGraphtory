{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Loader.jsx","webpack:///./src/components/newData.js","webpack:///./src/components/GraphSvg/constants.jsx","webpack:///./src/components/GraphSvg/mouseEvents.jsx","webpack:///./src/components/GraphSvg/algorithms.jsx","webpack:///./src/components/GraphSvg/util.jsx","webpack:///./src/components/TinyQueue.jsx","webpack:///./src/components/GraphSvg/graphActions.jsx","webpack:///./src/components/GraphSvg/edgeActions.jsx","webpack:///./src/components/GraphSvg/nodeActions.jsx","webpack:///./src/components/GraphSvg/keyboardEvents.jsx","webpack:///./src/components/GraphSvg/markerActions.jsx","webpack:///./src/components/GraphSvg/index.js","webpack:///./src/components/ClickAwayListenerV2.jsx","webpack:///./src/components/SidebarButton.jsx","webpack:///./src/components/PopupDialog.jsx","webpack:///./src/components/FabPopup.jsx","webpack:///./src/components/SidebarPopup.jsx","webpack:///./src/components/InnerNestedSidebarButton.jsx","webpack:///./src/components/NestedSidebarButton.jsx","webpack:///./src/components/SimpleSidebarButton.jsx","webpack:///./src/components/SidebarPanel.jsx","webpack:///./src/components/ClearButton.jsx","webpack:///./src/components/ShareButton.jsx","webpack:///./src/components/LoadButton.jsx","webpack:///./src/components/SelectorPanel.jsx","webpack:///./src/components/App.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","loading","Loader","props","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","React","Component","previousProps","previousState","ready","parentState","setState","isReady","console","info","d3","_this$props","classes","react_default","a","createElement","Fragment","className","Math","floor","random","withStyles","theme","root","schemaBuilder","lf","schema","createTable","addColumn","Type","INTEGER","addPrimaryKey","BOOLEAN","STRING","addNullable","OBJECT","getTableEntryIdByName","table","db","tableRef","getSchema","Promise","resolve","reject","select","from","where","eq","exec","then","rows","id","getTableEntries","baseUrl","parseRecipeIngredients","recipes","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","recipe","keys","item","wrap","_context","prev","next","sent","abrupt","stop","_x","arguments","generateSpringList","_ref2","_callee2","ret","types","machine_type_miner","machine_type_container","spring_type_miner","spring_type_container","purity_types","ore","structure","container","_context2","item_id","machine_class_id","spring_type_id","purities","_x2","quantity","icon","representation","rank","speed","machine_version_id","plural","node_type_id","input_slots","output_slots","power","hidden","inputs","time","player_unlock_id","createDatabase","_ref3","_callee5","_context7","connect","_ref4","_callee4","promiseList","_loop","_context6","obj","valuePromiseRows","_loop2","_context5","forEach","row","index","createRow","blockingPromises","_context4","map","_ref5","_callee3","k","_context3","_x4","all","delegateYield","insertOrReplace","into","values","_x3","constants","lineObjectClass","lineParentObjectClass","lineHitboxObjectClass","lineStylingPathClass","lineStylingArrowClass","lineStylingFullClass","overclockedTextClass","nodeVersionTextClass","nodeRequirementsIconClass","nodeSurplusIconClass","nodeRequirementsSubIconClass","nodeProducesClass","nodeSurplusClass","nodeProducesPerMinText","nodeLimitingThroughputText","nodeLimitingThroughputClass","lineLimitedThroughputText","lineLimitedThroughputClass","selectedClass","selectedNodeClass","selectedLineClass","connectableClass","graphNodeClass","graphNodeHoverClass","overclockedArcClass","graphNodeGrabbedClass","graphNodeIdBase","svgGraphClass","activeEditId","BACKSPACE_KEY","DELETE_KEY","ENTER_KEY","nodeRadius","round_up","x","factor","round","strongly_connected_components_standalone","graph","index_counter","stack","lowlink","node","includes","_strong_connect","parseInt","toString","successor","undefined","Error","JSON","stringify","min","connected_component","pop","spliceUtil","indexOf","inflate","parse","pako","Base64","atob","to","TinyQueue","compare","defaultCompare","TinyQueue_classCallCheck","reheapify","_down","_up","top","bottom","pos","parent","current","halfLength","left","best","right","b","analyzeGraph","_this","nodeUnion","Set","nodeIn","nodeOut","add","nodeUnionArray","Array","nodeLookup","graphData","nodes","filter","elem","childProvides","hasSources","containedItems","machine","allowedIn","allowedOut","nodeOutWithSets","componentsList","superNodeGraphLookup","superNodeGraphLookupInflated","lookupArray","list","derivedGraphOutgoing","ids","thisNode","derivedGraphAccessor","thisId","derivedGraphIncoming","immutableDerivedGraphIncoming","myTinyQueue","concat","_toConsumableArray","size","providedThroughput","itemLookup","parentAccessor","state","efficiency","itemThroughPut","itemsPerMinute","internalError","location","search","workaroundHack","rec","log","itemIconLookup","links","link","tempIndex","forceOverwritable","thisNodeInflated","outgoing","nodeGroupSource","nodeGroupTarget","origin","targets","nodeGroupSourceThroughput","throughput","nodeSpeed","instance","overclock","provided","purity","fetchedPurity","actualPurity","maxThroughput","source","_defineProperty","max","actual","resources","providedSet","provideRaw","provide","maxItemsPerSecLimiter","calculatedItemPerSecond","reconstructionMultiplier","itemPerSec","providedItem","resourceCount","missing","efficiencies","Infinity","inp","providedQuantity","has","resourceThroughputNeeded","calculatedThroughput","maxThroughputPerItem","totalItemThroughput","totalLinkThroughput","totalItemThroughputByItem","linkPairs","outgoingNode","sources","target","foundLink","localItemThroughput","q","e","tmp","reduce","sort","t1","t2","processingType","remainingItemProcessing","remainingLinkPairs","pair","limitedSpeed","fraction","itemsUsed","itemRaw","itemPerSecBeforeBeltLimiting","limitedItemPerSecByBelt","beltMaxForThisEntry","loopedNodes","itemPerNode","resultantResource","nodeInitial","initialItemPerSec","initialNode","previousOutput","outputIterator","visitedNodes","_loop3","theseResources","outNode","delta","v","_ret","graphActions_typeof","visit","nodeId","linkSpeed","totalItems","outerNode","provideByItem","thisProvide","totalCalculated","localModifier","propagateNodeToEdgesRevised","delete","editEfficiencyArc","updateGraph","simulation","graphNodesGroup","graphLinksGroup","_this2","incoming","open_in_slots","open_out_slot","recalculateStorageContainers","drag","clickDistance","on","graphSvg","shiftHeld","mouseDragSource","active","alphaTarget","restart","wasFixed","fx","fy","dragLine","classed","attr","y","svgGroup","wasMoved","sourceEvent","stopImmediatePropagation","mouseOverNode","addPath","snapToGrid","graphNodesData","selectAll","graphNodesEnter","enter","append","wheelZoomCalculation","node_clicked","remove_select_from_nodes","node_mouse_over","node_mouse_out","node_mouse_down","node_mouse_up","exit","remove","addEfficiencyArc","addNodeImage","insertNodeOverclock","insertNodeTier","insertComponents","merge","graphLinksData","graphLinksEnter","linkFullObject","insertEdgeLabel","pathMouseClick","handleTick","force","callback","deselect_path_and_nodes","selectedPath","selectedNode","alpha","calculateLabelPositions","each","vx","edgeActions_toConsumableArray","globalProvideMap","reverseTraversalStack","combinedProvides","combinedProvidesSource","allowed","nodeGroup","propagateNodeToEdgesReversed","passedThis","sourceChecker","targetChecker","specialSource","specialTarget","mergerTarget","mergerSource","targetSlotsUsed","error","path_type","path1","path2","upgrades","path","newEdge","upgradeTypes","usedOut","usedIn","updateGraphHelper","removePath","sharedItems","parentElement","link_label","pathLength","getTotalLength","point","getPointAtLength","updateNodeTierExternal","edgeThis","definedColor","style","text","previouslySelected","datum","shiftKey","sourceId","percentage_metric","offset","endOffset","endOffsetRaw","percentage","innerRadius","outerRadius","arc","startAngle","PI","endAngle","overClockCalculation","roughEstimate","deltaY","updateOverclock","textElement","updateNodeTier","machine_version","forceUpdateComponentLabel","elementsToUpdate","itemAccessor","allowedInRemaining","flat","element","fetchRemainingIn","findItem","outputtedItems","remaining","findSuitableSource","allowedOutRemaining","fetchRemainingOut","outputtedItemsIn","findSuitableTarget","nodeThis","containedItem","combinedSum","el","backgroundText","tspan","gEl","svgKeyDown","document","activeElement","nodeName","pressedKey","keyCode","appendMarkerAttributes","marker","GraphSvg","GraphSvg_classCallCheck","GraphSvg_getPrototypeOf","GraphSvg_assertThisInitialized","nodeData","zoomData","parseSvg","viewCenter","bodyEl","getElementById","width","clientWidth","height","clientHeight","scaleX","translateX","scaleY","translateY","add_node","inputSvg","transition","duration","zoom_handler","transform","vy","GraphSvg_toConsumableArray","Number","NEGATIVE_INFINITY","graphObjects","zoom_actions","scaleExtent","defs","feMerge","distance","strength","radius","initialX","initialY","svg","clearGraphDataRaw","createGraph","compressedData","satisgraphtory","version","playerData","secret","btoa","deflate","fetch","method","headers","Content-Type","body","response","json","uri","resp","replace","encodeURIComponent","catch","message","saveHash","compressGraphData","loadGraphData","coreGraphData","analyze","prevProps","prevState","snapshot","ClickAwayListenerV2","ClickAwayListenerV2_classCallCheck","ClickAwayListenerV2_possibleConstructorReturn","ClickAwayListenerV2_getPrototypeOf","windowOnClobber","clobberList","clobberedElement","onClickAway","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","querySelectorAll","iterator","done","addEventListener","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeEventListener","index_es","children","propTypes","PropTypes","isRequired","string","func","SidebarButton","SidebarButton_classCallCheck","SidebarButton_getPrototypeOf","SidebarButton_defineProperty","SidebarButton_assertThisInitialized","event","currentTarget","lastTarget","anchorEl","setTimeout","label","appObject","open","Boolean","listItems","items","Tooltip_default","tooltip","placement","title","src","tooltipIconFirst","tooltipIcon","tooltipText","MenuItem_default","onClick","machine_nodes","machine_node","node1","node2","machine_class","addNode","dict","handleClose","alt","itemListIcon","grow","Paper_default","paper","Button_default","aria-owns","aria-haspopup","handleMenu","button","AddBox_default","Popper_default","popper","TransitionProps","Grow_default","_extends","transformOrigin","components_ClickAwayListenerV2","MenuList_default","flex","justifyContent","padding","margin","spacing","unit","display","paddingLeft","zIndex","paddingRight","fontSize","PopupDialog","PopupDialog_classCallCheck","PopupDialog_possibleConstructorReturn","PopupDialog_getPrototypeOf","contents","handleModalClose","Dialog_default","onClose","DialogTitle_default","DialogContent_default","DialogActions_default","color","modal","position","backgroundColor","palette","background","boxShadow","shadows","outline","FabPopup","FabPopup_classCallCheck","FabPopup_possibleConstructorReturn","FabPopup_getPrototypeOf","modalOpen","Fab_default","aria-label","fab","Help_default","components_PopupDialog","SidebarPopup","SidebarPopup_classCallCheck","SidebarPopup_possibleConstructorReturn","SidebarPopup_getPrototypeOf","Icon","ListItem_default","ListItemIcon_default","icons","ListItemText_default","primary","marginRight","InnerNestedSidebarButton","InnerNestedSidebarButton_classCallCheck","InnerNestedSidebarButton_getPrototypeOf","InnerNestedSidebarButton_defineProperty","InnerNestedSidebarButton_assertThisInitialized","selectedButton","resource","machineIcon","selected","InnerNestedSidebarButton_extends","NestedSidebarButton","NestedSidebarButton_classCallCheck","NestedSidebarButton_getPrototypeOf","NestedSidebarButton_defineProperty","NestedSidebarButton_assertThisInitialized","NestedSidebarButton_extends","ClickAwayListener_default","returnDivList","components_InnerNestedSidebarButton","SimpleSidebarButton","SimpleSidebarButton_classCallCheck","SimpleSidebarButton_getPrototypeOf","SimpleSidebarButton_defineProperty","SimpleSidebarButton_assertThisInitialized","SimpleSidebarButton_extends","SidebarPanel","SidebarPanel_classCallCheck","SidebarPanel_getPrototypeOf","SidebarPanel_assertThisInitialized","options","getAttribute","selectedDrives","querySelector","checked","playerUnlock","player_unlock","featureName","vars","Typography_default","variant","href","useExperimentalFeatures","split","FormControlLabel_default","control","Checkbox_default","onChange","fullWidth","jiggle","Shuffle_default","resetCamera","Replay_default","fixNodes","unfixNodes","Undo_default","flexDirection","flexShrink","textField","paddingBottom","marginTop","chips","flexWrap","chip","ClearButton","ClearButton_classCallCheck","ClearButton_getPrototypeOf","ClearButton_defineProperty","ClearButton_assertThisInitialized","handleModalOpen","Delete_default","dialogContainer","dialogButton","clearGraphData","ShareButton","ShareButton_classCallCheck","ShareButton_getPrototypeOf","ShareButton_defineProperty","ShareButton_assertThisInitialized","uploadDataWithResponse","port","url","protocol","hostname","pathname","join","_this3","Share_default","TextField_default","inputRef","ref","inlineDialogButton","execCommand","statusMessage","FileCopy_default","paddingTop","LoadButton","LoadButton_classCallCheck","LoadButton_getPrototypeOf","LoadButton_defineProperty","LoadButton_assertThisInitialized","inputValue","Input_default","inflateGraphData","SelectorPanel","SelectorPanel_classCallCheck","SelectorPanel_getPrototypeOf","SelectorPanel_defineProperty","SelectorPanel_assertThisInitialized","update","dummy","IconButton_default","upgrade","ArrowUpward_default","downgrade","ArrowDownward_default","formControl","maxWidth","drawerWidth","minWidth","createMuiTheme","typography","useNextVariants","main","App","App_classCallCheck","App_possibleConstructorReturn","App_getPrototypeOf","loaded","results","startingTable","starting","globalStructure","refKeysToProcess","refKey","tableName","recursiveFind","str","endsWith","getRefkeyTable","functionToApply","isArray","App_typeof","rowKey","refId","associatedData","possibleData","rowValue","id_name","startsWith","Image","ReactGA","debug","process","reload","hash","decodeURIComponent","responseRaw","generateRecursiveStructure","spring","purity_type","isLoaded","_this4","recipesByMachineClass","machineClassPlural","thisList","components_SidebarButton","springByClass","spring_type","components_SimpleSidebarButton","_this5","generateUnlocksList","components_NestedSidebarButton","components_Loader","CssBaseline_default","styles","AppBar_default","appBar","Toolbar_default","logo","disabled","OfflineBolt_default","SettingsInputComponent_default","components_ShareButton","components_LoadButton","components_ClearButton","components_FabPopup","components_SelectorPanel","Drawer_default","drawer","drawerPaper","List_default","drawerTitle","generateNodeList","generateContainerList","Divider_default","components_SidebarPanel","components_SidebarPopup","InfoIcon","WarningIcon","content","components_GraphSvg","flexGrow","flexBasis","toolbar","mixins","pathIcon","pathText","clearButton","ReactDOM","render","components_App"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([458,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport {withStyles} from '@material-ui/core';\nimport * as d3 from 'd3';\n\nconst loading = [\n    'Loading...',\n    'Burning Coal...',\n    'Deleting Steam Keys...',\n    'Exploiting Resources...',\n    'Petting Lizard Doggo...',\n    'Adding Pipes...',\n    'Adding Mana...',\n    'Spilling Coffee...',\n    'Becoming A Goat...',\n    'Charging Batteries...'\n];\n\nexport const styles = theme => ({\n    root: {},\n});\n\nclass Loader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidUpdate(previousProps, previousState) {\n        if (this.props.ready === true && !previousProps.ready) {\n            this.props.parentState.setState({isReady: true}, () => {\n                console.info('App set as \"Ready\"', d3);\n            });\n        }\n    }\n\n    render() {\n        const {ready, parentState, classes} = this.props;\n        return (\n            <React.Fragment>\n                <div className=\"loader-spinner\"/>\n                <div className=\"align-loading\">\n                    <div\n                        className='loading-text align-loading-text'>{loading[Math.floor(Math.random() * loading.length)]}</div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(Loader);","import lf from 'lovefield';\n\n/** @namespace lf.Type */\nconst schemaBuilder = lf.schema.create('test', 6);\n\nschemaBuilder.createTable('node_type')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('name', lf.Type.STRING);\n\nschemaBuilder.createTable('machine_node_type')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('hidden', lf.Type.BOOLEAN);\n\nschemaBuilder.createTable('machine_version')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('color', lf.Type.STRING)\n    .addColumn('rank', lf.Type.INTEGER)\n    .addColumn('representation', lf.Type.STRING)\n    .addColumn('name', lf.Type.STRING)\n    .addNullable(['color', 'rank']);\n\nschemaBuilder.createTable('machine_class')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('icon', lf.Type.STRING)\n    .addNullable(['icon'])\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('plural', lf.Type.STRING);\n\nschemaBuilder.createTable('machine_node')\n    .addColumn('id', lf.Type.INTEGER)\n    .addColumn('speed', lf.Type.INTEGER)\n    .addColumn('power', lf.Type.INTEGER)\n    .addNullable(['power'])\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('node_type_id', lf.Type.STRING)\n    .addColumn('icon', lf.Type.STRING)\n    .addColumn('input_slots', lf.Type.INTEGER)\n    .addColumn('output_slots', lf.Type.INTEGER);\n\n\nschemaBuilder.createTable('path_type')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('speed', lf.Type.INTEGER)\n    .addColumn('rank', lf.Type.INTEGER)\n    .addColumn('machine_class_id', lf.Type.INTEGER)\n    .addNullable(['machine_class_id'])\n    .addColumn('hidden', lf.Type.BOOLEAN);\n\nschemaBuilder.createTable('purity_type')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('quantity', lf.Type.INTEGER);\n\nschemaBuilder.createTable('spring_type')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('hidden', lf.Type.BOOLEAN);\n\nschemaBuilder.createTable('spring')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('spring_type_id', lf.Type.INTEGER)\n    .addColumn('machine_class_id', lf.Type.INTEGER)\n    .addColumn('item_id', lf.Type.INTEGER)\n    .addColumn('icon', lf.Type.STRING)\n    .addNullable(['item_id', 'icon'])\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('purities', lf.Type.OBJECT);\n\nschemaBuilder.createTable('item')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('icon', lf.Type.STRING)\n    .addColumn('hidden', lf.Type.BOOLEAN);\n\nschemaBuilder.createTable('recipe')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('inputs', lf.Type.OBJECT)\n    .addColumn('machine_class_id', lf.Type.INTEGER)\n    .addColumn('item_id', lf.Type.INTEGER) // The output Item Id\n    .addColumn('time', lf.Type.INTEGER)\n    .addColumn('quantity', lf.Type.INTEGER)\n    .addColumn('power', lf.Type.INTEGER)\n    .addColumn('hidden', lf.Type.BOOLEAN)\n    .addColumn('player_unlock_id', lf.Type.INTEGER)\n    .addColumn('icon', lf.Type.STRING)\n    .addNullable(['item_id', 'icon', 'player_unlock_id']);\n\nschemaBuilder.createTable('player_unlock')\n    .addColumn('id', lf.Type.INTEGER)\n    .addPrimaryKey(['id'])\n    .addColumn('name', lf.Type.STRING)\n    .addColumn('chip_name', lf.Type.STRING)\n    .addNullable(['chip_name'])\n    .addColumn('hidden', lf.Type.BOOLEAN);\n\nconst getTableEntryIdByName = (table, name) => {\n    return (db) => {\n        const tableRef = db.getSchema().table(table);\n        return new Promise((resolve, reject) => {\n            db.select().from(tableRef).where(tableRef.name.eq(name)).exec()\n                .then((rows) => {\n                    if (rows.length == 1) {\n                        resolve(rows[0].id);\n                    } else {\n                        reject('No element found or too many matching rows: ' + table + '|' + name + '|' + rows);\n                    }\n                });\n        });\n    };\n};\n\nconst getTableEntries = (table, db) => {\n    const tableRef = db.getSchema().table(table);\n    return new Promise((resolve) => {\n        db.select().from(tableRef).exec()\n            .then((rows) => {\n                resolve(rows);\n            });\n    });\n};\n\nconst baseUrl = 'https://raw.githubusercontent.com/rhocode/rhocode.github.io/master/img/satoolsfactory_icons/';\n\nconst parseRecipeIngredients = recipes => {\n    return async db => {\n        for (let i = 0; i < recipes.length; i++) {\n            const recipe = recipes[i];\n            const keys = Object.keys(recipe);\n            for (let j = 0; j < keys.length; j++) {\n                const item = recipe[keys[j]];\n                if (typeof item == 'function') {\n                    recipe[keys[j]] = await item(db);\n                }\n            }\n        }\n\n        return recipes;\n    };\n};\n\nconst generateSpringList = async db => {\n    const ret = [];\n    const types = ['Coal Ore', 'Iron Ore', 'Limestone Ore', 'Copper Ore', 'Caterium Ore'];\n    const machine_type_miner = await getTableEntryIdByName('machine_class', 'Miner')(db);\n    const machine_type_container = await getTableEntryIdByName('machine_class', 'Container')(db);\n    const spring_type_miner = await getTableEntryIdByName('spring_type', 'Miner')(db);\n    const spring_type_container = await getTableEntryIdByName('spring_type', 'Container')(db);\n    const purity_types = await getTableEntries('purity_type', db);\n    for (let i = 0; i < types.length; i++) {\n        const ore = await getTableEntryIdByName('item', types[i])(db);\n\n        const structure = {\n            item_id: ore,\n            machine_class_id: machine_type_miner,\n            spring_type_id: spring_type_miner,\n            purities: purity_types\n        };\n        ret.push(structure);\n    }\n\n    const container = {\n        machine_class_id: machine_type_container,\n        spring_type_id: spring_type_container\n    };\n\n    ret.push(container);\n\n    return ret;\n};\n\nconst data = [\n    {\n        key: 'purity_type',\n        value: [\n            {name: 'Impure', quantity: 30},\n            {name: 'Normal', quantity: 60},\n            {name: 'Pure', quantity: 120}\n        ]\n    },\n    {\n        key: 'item',\n        value: [\n            {\n                name: 'Copper Ore',\n                icon: baseUrl + 'Copper_Ore.png'\n            },\n            {\n                name: 'Iron Ore',\n                icon: baseUrl + 'Iron_Ore.png'\n            },\n            {\n                name: 'Limestone Ore',\n                icon: baseUrl + 'Limestone.png'\n            },\n            {\n                name: 'Coal Ore',\n                icon: baseUrl + 'Coal.png'\n            },\n            {\n                name: 'Iron Ingot',\n                icon: baseUrl + 'Iron_Ingot.png'\n            },\n            {\n                name: 'Copper Ingot',\n                icon: baseUrl + 'Copper_Ingot.png'\n            },\n            {\n                name: 'Iron Plate',\n                icon: baseUrl + 'Iron_Plate.png'\n            },\n            {\n                name: 'Iron Rod',\n                icon: baseUrl + 'Iron_Rod.png'\n            },\n            {\n                name: 'Screw',\n                icon: baseUrl + 'Screw.png'\n            },\n            {\n                name: 'Wire',\n                icon: baseUrl + 'Wire.png'\n            },\n            {\n                name: 'Cable',\n                icon: baseUrl + 'Cable.png'\n            },\n            {\n                name: 'Concrete',\n                icon: baseUrl + 'Concrete.png'\n            },\n            {\n                name: 'Reinforced Iron Plate',\n                icon: baseUrl + 'Reinforced_Iron_Plate.png'\n            },\n            {\n                name: 'Modular Frame',\n                icon: baseUrl + 'Modular_Frame.png'\n            },\n            {\n                name: 'Rotor',\n                icon: baseUrl + 'Rotor.png'\n            },\n            {\n                name: 'Caterium Ore',\n                icon: baseUrl + 'Caterium_Ore.png'\n            },\n            {\n                name: 'Caterium Ingot',\n                icon: baseUrl + 'Caterium_Ingot.png'\n            },\n            {\n                name: 'Quickwire',\n                icon: baseUrl + 'Quickwire.png'\n            },\n            {\n                name: 'Steel Ingot',\n                icon: baseUrl + 'Steel_Ingot.png'\n            },\n            {\n                name: 'Steel Beam',\n                icon: baseUrl + 'Steel_Beam.png'\n            },\n            {\n                name: 'Steel Pipe',\n                icon: baseUrl + 'Steel_Pipe.png'\n            },\n            {\n                name: 'Encased Industrial Beam',\n                icon: baseUrl + 'Encased_Industrial_Beam.png'\n            },\n            {\n                name: 'Stator',\n                icon: baseUrl + 'Stator.png'\n            },\n            {\n                name: 'Heavy Modular Frame',\n                icon: baseUrl + 'Heavy_Modular_Frame.png'\n            },\n            {\n                name: 'Motor',\n                icon: baseUrl + 'Motor.png'\n            }\n        ]\n    },\n    {\n        key: 'node_type',\n        value: [\n            {name: 'Machine Node'},\n            {name: 'Resource Node'},\n        ]\n    },\n    {\n        key: 'machine_version',\n        value: [\n            {name: 'internal', representation: ''},\n            {name: 'Mk.1', rank: 0, representation: 'I'},\n            {name: 'Mk.2', rank: 1, representation: 'II'},\n            {name: 'Mk.3', rank: 2, representation: 'III'},\n            {name: 'Mk.4', rank: 3, representation: 'IV'},\n            {name: 'Mk.5', rank: 4, representation: 'V'},\n            {name: 'Mk.6', rank: 5, representation: 'VI'},\n            {name: 'S', rank: 6, representation: 'S'}, // For Splitters\n            {name: 'M', rank: 7, representation: 'M'},\n        ]\n    },\n    {\n        key: 'path_type',\n        value: [\n            {\n                name: 'Item Belt Mk 1',\n                speed: 60,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                rank: 0\n            },\n            {\n                name: 'Item Belt Mk 2',\n                speed: 120,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                rank: 1\n            },\n            {\n                name: 'Item Belt Mk 3',\n                speed: 270,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.3'),\n                rank: 2\n            },\n            {\n                name: 'Item Belt Mk 4',\n                speed: 450,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.4'),\n                rank: 3\n            },\n            {\n                name: 'Item Belt Mk 5',\n                speed: 6600,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.5'),\n                rank: 4\n            },\n            {\n                name: 'Item Belt Mk 6',\n                speed: 900,\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.6'),\n                rank: 5\n            },\n            {\n                name: 'internal',\n                speed: 9999999,\n                machine_version_id: getTableEntryIdByName('machine_version', 'internal'),\n                rank: -1\n            },\n        ]\n    },\n    {\n        key: 'machine_class',\n        value: [\n            {name: 'Constructor', plural: 'Constructors', icon: baseUrl + 'Constructor.png'},\n            {name: 'Miner', plural: 'Miners', icon: baseUrl + 'Miner_MK1.png'},\n            {name: 'Assembler', plural: 'Assemblers', icon: baseUrl + 'Assembler.png'},\n            {name: 'Smelter', plural: 'Smelters', icon: baseUrl + 'Smelter.png'},\n            {name: 'Coal Generator', plural: 'Coal Generators', icon: baseUrl + 'Coal_Generator.png'},\n            {name: 'Manufacturer', plural: 'Manufacturer', icon: baseUrl + 'Manufacturer.png'},\n            {name: 'Container', plural: 'Containers', icon: baseUrl + 'Storage_Container_MK1.png'},\n            {name: 'Logistic', plural: 'Logistics', icon: baseUrl + 'Splitter.png'},\n            {name: 'Foundry', plural: 'Foundries', icon: baseUrl + 'Foundry_MK1.png'}\n        ]\n    },\n    {\n        key: 'machine_node',\n        value: [\n            {\n                name: 'Container',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Container'),\n                speed: 999999,\n                icon: baseUrl + 'Storage_Container_MK1.png',\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Splitter',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'S'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Logistic'),\n                speed: 999999,\n                icon: baseUrl + 'Splitter.png',\n                input_slots: 1,\n                output_slots: 3\n            },\n            {\n                name: 'Merger',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'M'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Logistic'),\n                speed: 999999,\n                icon: baseUrl + 'Merger.png',\n                input_slots: 3,\n                output_slots: 1\n            },\n            {\n                name: 'Miner Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Miner'),\n                speed: 100,\n                power: 5,\n                icon: baseUrl + 'Miner_MK1.png'\n                ,\n                input_slots: 0,\n                output_slots: 1\n            },\n            {\n                name: 'Miner Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Miner'),\n                icon: baseUrl + 'Miner_MK2.png',\n                speed: 200,\n                power: 5,\n                hidden: true\n                ,\n                input_slots: 0,\n                output_slots: 1\n            },\n            {\n                name: 'Smelter Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                speed: 100,\n                icon: baseUrl + 'Smelter.png'\n                ,\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Smelter Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                icon: baseUrl + 'Smelter.png',\n                speed: 200,\n                hidden: true,\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Constructor Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                icon: baseUrl + 'Constructor.png',\n                speed: 100,\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Constructor Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                icon: baseUrl + 'Constructor.png',\n                speed: 200,\n                hidden: true,\n                input_slots: 1,\n                output_slots: 1\n            },\n            {\n                name: 'Assembler Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                icon: baseUrl + 'Assembler.png',\n                speed: 100,\n                input_slots: 2,\n                output_slots: 1\n            },\n            {\n                name: 'Assembler Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                icon: baseUrl + 'Assembler.png',\n                speed: 100,\n                hidden: true,\n                input_slots: 2,\n                output_slots: 1\n            },\n            {\n                name: 'Manufacturer Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Manufacturer'),\n                icon: '',\n                speed: 100,\n                hidden: true,\n                input_slots: 4,\n                output_slots: 1\n            },\n            {\n                name: 'Manufacturer Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Manufacturer'),\n                icon: '',\n                speed: 200,\n                hidden: true,\n                input_slots: 4,\n                output_slots: 1\n            },\n            {\n                name: 'Coal Generator',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Coal Generator'),\n                icon: baseUrl + 'Coal_Generator.png',\n                speed: 100,\n                hidden: true,\n                input_slots: 1,\n                output_slots: 0\n            },\n            {\n                name: 'Foundry Mk.1',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.1'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                icon: baseUrl + 'Foundry_MK1.png',\n                speed: 100,\n                hidden: true,\n                input_slots: 2,\n                output_slots: 1\n            },\n            {\n                name: 'Foundry Mk.2',\n                node_type_id: getTableEntryIdByName('node_type', 'Machine Node'),\n                machine_version_id: getTableEntryIdByName('machine_version', 'Mk.2'),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                icon: baseUrl + 'Foundry_MK2.png', //TODO get MK2 icon\n                speed: 200,\n                hidden: true,\n                input_slots: 2,\n                output_slots: 1\n            }\n        ]\n    },\n    {\n        key: 'spring_type',\n        value: [\n            {name: 'Miner'},\n            {name: 'Container'}\n        ]\n    },\n    {\n        key: 'player_unlock',\n        value: [\n            {name: 'Reinforced Iron Plate (Alt.)'},\n            {name: 'Stitched Iron Plate'},\n            {name: 'Caterium Wire'},\n            {name: 'Encased Industrial Beam (Alt.)'},\n            {name: 'Heavy Modular Frame (Alt.)'},\n            {name: 'Iron Ingot (Alt.)'},\n            {name: 'Iron Wire'},\n            {name: 'Modular Frame (Alt.)'},\n            {name: 'Rotor (Alt.)'},\n            {name: 'Stator (Alt.)'},\n            {name: 'Steel Ingot (Alt.)'},\n            {name: 'Screw (Alt.)'},\n            // {name: 'Rubber Cable'},\n            // {name: 'Circuit Board'},\n            // {name: 'Caterium Computer'},\n            {name: 'Quickwire (Alt.)'},\n            // {name: 'Caterium Circuit Board'},\n            // {name: 'Crystal Computer'}\n            // time = output_quantity * 60 / ppm\n        ]\n    },\n    {\n        key: 'spring',\n        value: generateSpringList\n    },\n    {\n        key: 'recipe',\n        value: [\n            {\n                name: 'Iron Ingot',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ore'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                time: 2,\n                power: 4,\n                quantity: 1\n            },\n            {\n                name: 'Copper Ingot',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Copper Ore'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                item_id: getTableEntryIdByName('item', 'Copper Ingot'),\n                time: 2,\n                power: 4,\n                quantity: 1\n            },\n            {\n                name: 'Caterium Ingot',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Caterium Ore'),\n                    quantity: 4\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Smelter'),\n                item_id: getTableEntryIdByName('item', 'Caterium Ingot'),\n                time: 4,\n                power: 4,\n                quantity: 1,\n            },\n            {\n                name: 'Iron Plate',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Iron Plate'),\n                time: 4,\n                power: 4,\n                quantity: 1\n            },\n            {\n                name: 'Iron Rod',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Iron Rod'),\n                time: 4,\n                power: 4,\n                quantity: 1\n            },\n            {\n                name: 'Wire',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Copper Ingot'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Wire'),\n                time: 4,\n                power: 4,\n                quantity: 3\n            },\n            {\n                name: 'Iron Wire',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Wire'),\n                time: 8,\n                power: 4,\n                quantity: 9,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Iron Wire')\n            },\n            {\n                name: 'Caterium Wire',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Caterium Ingot'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Wire'),\n                time: 8,\n                power: 4,\n                quantity: 9,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Caterium Wire')\n            },\n            {\n                name: 'Cable',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Wire'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Cable'),\n                time: 4,\n                power: 4,\n                quantity: 1\n            },\n            {\n                name: 'Screw',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Rod'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Screw'),\n                time: 4,\n                power: 4,\n                quantity: 6\n            },\n            {\n                name: 'Screw (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Screw'),\n                time: 8,\n                power: 4,\n                quantity: 12,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Screw (Alt.)')\n            },\n            {\n                name: 'Concrete',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Limestone Ore'),\n                    quantity: 3\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Concrete'),\n                time: 4,\n                power: 4,\n                quantity: 1\n            },\n            {\n                name: 'Reinforced Iron Plate',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Plate'),\n                    quantity: 4\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Screw'),\n                    quantity: 24\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Reinforced Iron Plate'),\n                time: 12,\n                power: 15,\n                quantity: 1,\n            },\n            {\n                name: 'Reinforced Iron Plate (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Plate'),\n                    quantity: 10\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Screw'),\n                    quantity: 24\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Reinforced Iron Plate'),\n                time: 24,\n                power: 15,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Reinforced Iron Plate (Alt.)')\n            },\n            {\n                name: 'Stitched Iron Plate',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Plate'),\n                    quantity: 6\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Wire'),\n                    quantity: 30\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Reinforced Iron Plate'),\n                time: 24,\n                power: 15,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Stitched Iron Plate')\n            },\n            {\n                name: 'Rotor',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Rod'),\n                    quantity: 3\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Screw'),\n                    quantity: 22\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Rotor'),\n                time: 10,\n                power: 15,\n                quantity: 1,\n            },\n            {\n                name: 'Rotor (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                    quantity: 6\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Wire'),\n                    quantity: 20\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Rotor'),\n                time: 20,\n                power: 15,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Rotor (Alt.)')\n            },\n            {\n                name: 'Modular Frame',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Reinforced Iron Plate'),\n                    quantity: 3\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Iron Rod'),\n                    quantity: 6\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Modular Frame'),\n                time: 15,\n                power: 15,\n                quantity: 1,\n            },\n            {\n                name: 'Modular Frame (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Reinforced Iron Plate'),\n                    quantity: 6\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                    quantity: 6\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Modular Frame'),\n                time: 30,\n                power: 15,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Modular Frame (Alt.)')\n            },\n            {\n                name: 'Encased Industrial Beam',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Steel Beam'),\n                    quantity: 4\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Concrete'),\n                    quantity: 5\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Encased Industrial Beam'),\n                time: 15,\n                power: 15,\n                quantity: 1,\n            },\n            {\n                name: 'Encased Industrial Beam (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                    quantity: 18\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Concrete'),\n                    quantity: 10\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Encased Industrial Beam'),\n                time: 30,\n                power: 15,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Encased Industrial Beam (Alt.)')\n            },\n            {\n                name: 'Heavy Modular Frame',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Modular Frame'),\n                    quantity: 5\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Encased Industrial Beam'),\n                    quantity: 5\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                    quantity: 15\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Screw'),\n                    quantity: 90\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Manufacturer'),\n                item_id: getTableEntryIdByName('item', 'Heavy Modular Frame'),\n                time: 30,\n                power: 60,\n                quantity: 1,\n            },\n            {\n                name: 'Heavy Modular Frame (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Modular Frame'),\n                    quantity: 8\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Encased Industrial Beam'),\n                    quantity: 10\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                    quantity: 36\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Concrete'),\n                    quantity: 25\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Manufacturer'),\n                item_id: getTableEntryIdByName('item', 'Heavy Modular Frame'),\n                time: 64, //TODO\n                power: 60,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Heavy Modular Frame (Alt.)')\n            },\n            {\n                name: 'Iron Ingot (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ore'),\n                    quantity: 1\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Copper Ore'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                time: 4,\n                power: 4,\n                quantity: 3,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Iron Ingot (Alt.)')\n            },\n            {\n                name: 'Steel Ingot',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ore'),\n                    quantity: 3\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Coal Ore'),\n                    quantity: 3\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                item_id: getTableEntryIdByName('item', 'Steel Ingot'),\n                time: 4,\n                power: 12,\n                quantity: 2,\n            },\n            {\n                name: 'Steel Ingot (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Iron Ingot'),\n                    quantity: 3\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Coal Ore'),\n                    quantity: 6\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Foundry'),\n                item_id: getTableEntryIdByName('item', 'Steel Ingot'),\n                time: 8,\n                power: 12,\n                quantity: 6,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Steel Ingot (Alt.)')\n            },\n            {\n                name: 'Steel Beam',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Steel Ingot'),\n                    quantity: 3\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Steel Beam'),\n                time: 6,\n                power: 4,\n                quantity: 1,\n            },\n            {\n                name: 'Steel Pipe',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Steel Ingot'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Steel Pipe'),\n                time: 4,\n                power: 4,\n                quantity: 1,\n            },\n            {\n                name: 'Quickwire',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Caterium Ingot'),\n                    quantity: 1\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Constructor'),\n                item_id: getTableEntryIdByName('item', 'Quickwire'),\n                time: 4,\n                power: 4,\n                quantity: 4,\n            },\n            {\n                name: 'Quickwire (Alt.)',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Caterium Ingot'),\n                    quantity: 1\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Copper Ingot'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Quickwire'),\n                time: 8,\n                power: 4,\n                quantity: 12,\n                hidden: true,\n                player_unlock_id: getTableEntryIdByName('player_unlock', 'Quickwire (Alt.)')\n            },\n            {\n                name: 'Motor',\n                inputs: parseRecipeIngredients([{\n                    item_id: getTableEntryIdByName('item', 'Rotor'),\n                    quantity: 2\n                }, {\n                    item_id: getTableEntryIdByName('item', 'Stator'),\n                    quantity: 2\n                }]),\n                machine_class_id: getTableEntryIdByName('machine_class', 'Assembler'),\n                item_id: getTableEntryIdByName('item', 'Motor'),\n                time: 12,\n                power: 15,\n                quantity: 1,\n            },\n        ]\n    }\n];\n\nconst createDatabase = () => {\n    const createDB = async () => {\n        const p = schemaBuilder.connect().then(async db => {\n            const schema = db.getSchema();\n            const promiseList = [];\n\n            for (let i = 0; i < data.length; i++) {\n                const obj = data[i];\n                const key = obj.key;\n                const table = schema.table(key);\n                const rows = [];\n                const valuePromiseRows = [];\n\n                if (typeof obj.value == 'function') {\n                    const value = await obj.value(db);\n                    value.forEach((row, index) => {\n                        row.hidden = row.hidden || false;\n                        row.id = index;\n                        rows.push(table.createRow(row));\n                    });\n                } else {\n                    for (let j = 0; j < obj.value.length; j++) {\n                        const index = j;\n                        const row = obj.value[j];\n                        row.hidden = row.hidden || false;\n                        row.id = index;\n\n                        const blockingPromises = Object.keys(row).map(async k => {\n                            if (typeof row[k] == 'function') {\n                                row[k] = await row[k](db);\n                            }\n                            return Promise.resolve();\n                        });\n\n                        await Promise.all(blockingPromises);\n                        rows.push(table.createRow(row));\n                        valuePromiseRows.push(Promise.resolve());\n                    }\n                }\n\n                await Promise.all(valuePromiseRows);\n                await db.insertOrReplace().into(table).values(rows).exec();\n                console.info('Loaded ' + rows.length + ' into ' + key);\n            }\n            await Promise.all(promiseList);\n            return db;\n        });\n\n        return await p;\n    };\n    return createDB();\n};\n\nexport default createDatabase;","const constants = {\n    lineObjectClass: 'line-object',\n    lineParentObjectClass: 'lineParentObjectClass',\n    lineHitboxObjectClass: 'line-object-hitbox',\n    lineStylingPathClass: 'line-object-path-styled',\n    lineStylingArrowClass: 'line-object-arrow-styled',\n    lineStylingFullClass: 'line-object-combined-styled',\n    overclockedTextClass: 'overclockedTextClass',\n    nodeVersionTextClass: 'nodeVersionTextClass',\n    nodeRequirementsIconClass: 'nodeRequirementsIconClass',\n    nodeSurplusIconClass: 'nodeSurplusIconClass',\n    nodeRequirementsSubIconClass: 'nodeRequirementsSubIconClass',\n    nodeProducesClass: 'nodeProducesClass',\n    nodeSurplusClass: 'nodeSurplusClass',\n    nodeProducesPerMinText: 'nodeProducesPerMinText',\n    nodeLimitingThroughputText: 'nodeLimitingThroughputText',\n    nodeLimitingThroughputClass: 'nodeLimitingThroughputClass',\n\n    lineLimitedThroughputText: 'lineLimitedThroughputText',\n    lineLimitedThroughputClass: 'lineLimitedThroughputClass',\n\n    selectedClass: 'selected',\n    selectedNodeClass: 'selected-node',\n    selectedLineClass: 'selected-line',\n    connectableClass: 'potential-connectable-node',\n    graphNodeClass: 'graphMachineNode',\n    graphNodeHoverClass: 'graphNodeHoverClass',\n    overclockedArcClass: 'overclockedArcClass',\n    graphNodeGrabbedClass: 'graphNodeGrabbedClass',\n    graphNodeIdBase: 'graph-svg-node-',\n    svgGraphClass: 'graph-svg',\n    activeEditId: 'active-editing',\n    BACKSPACE_KEY: 8,\n    DELETE_KEY: 46,\n    ENTER_KEY: 13,\n    nodeRadius: 50\n};\n\nexport default constants;","import {addPath} from './edgeActions';\nimport * as d3 from 'd3';\nimport constants from './constants';\n\n// V2 functions\nexport const drag_start = function (d, simulation, graphSvg) {\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n        //ignore drag...it's probably not important.\n        graphSvg.setState({mouseDragSource: d});\n    } else {\n        if (!d3.event.active)\n            simulation.alphaTarget(0.3).restart();\n        graphSvg.setState({wasFixed: d.fx !== null && d.fy != null});\n    }\n};\n\n\n//make sure you can't drag the circle outside the box\nexport const drag_drag = (d, graphSvg) => {\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n        //ignore drag...it's probably not important.\n        graphSvg.dragLine.classed('hidden', false).attr('d', 'M' + d.x + ',' + d.y + 'L' +\n            d3.mouse(graphSvg.svgGroup.node())[0] + ',' + d3.mouse(graphSvg.svgGroup.node())[1]);\n    } else {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n        graphSvg.setState({wasMoved: true});\n    }\n};\n\nconst round_up = function (x, factor) {\n    return Math.round(x / factor) * factor;\n};\n\nexport const drag_end = (d, graphSvg, simulation) => {\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n        if (graphSvg.state.mouseOverNode) {\n            const source = graphSvg.state.mouseDragSource;\n            const target = graphSvg.state.mouseOverNode;\n            addPath.call(this, graphSvg, graphSvg.state.mouseDragSource, graphSvg.state.mouseOverNode);\n        }\n        graphSvg.dragLine.classed('hidden', true).attr('d', 'M0,0L0,0');\n    } else {\n        if (graphSvg.state && graphSvg.state.wasMoved) {\n            d.x = d.fx;\n            d.y = d.fy;\n\n            if (graphSvg.state.snapToGrid) {\n                if (d.fx) {\n                    d.fx = round_up(d.fx, 100);\n                    d.fy = round_up(d.fy, 100);\n                }\n            }\n        } else if (graphSvg.state && !graphSvg.state.wasFixed) {\n            d.fx = null;\n            d.fy = null;\n        }\n    }\n    d3.select('.' + constants.graphNodeGrabbedClass).classed(constants.graphNodeGrabbedClass, false);\n    graphSvg.setState({shiftHeld: false, wasMoved: false, wasFixed: false});\n};","export const strongly_connected_components = function (graph) {\n    console.error(graph);\n    throw new Error('JKNFDKJNFDJN');\n    const index_counter = ['0'];\n    const stack = [];\n    const lowlink = {};\n    const index = {};\n    const result = [];\n\n    const _strong_connect = function (node) {\n        index[node] = index_counter[0];\n        lowlink[node] = index_counter[0];\n        index_counter[0] = (parseInt(index_counter[0]) + 1).toString();\n        stack.push(node);\n\n        const successors = graph[node] || [];\n        successors.forEach(successor => {\n            if (!Object.keys(index).includes(successor)) {\n                _strong_connect(successor);\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node]), parseInt(lowlink[successor])).toString();\n            } else if (stack.includes(successor)) {\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink) + ' ' + JSON.stringify(index));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node]), parseInt(index[successor])).toString();\n            }\n        });\n\n        if (lowlink[node] === index[node]) {\n            const connected_component = [];\n            /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n            while (true) {\n                const successor = stack.pop();\n                connected_component.push(successor);\n                if (successor === node) break;\n            }\n            result.push(connected_component.slice());\n        }\n    };\n    Object.keys(graph).forEach(node => {\n        if (!Object.keys(index).includes(node)) {\n            _strong_connect(node);\n        }\n    });\n\n    return result;\n};\n\nconst remove_node = function (G, target) {\n    delete G[target];\n    const values = Object.keys(G).map(key => G[key]);\n    values.forEach(value => {\n        value.delete(target);\n    });\n};\n\nconst subgraphs = function (G, vertices) {\n    const returnMap = {};\n    vertices.forEach(v => {\n        const gvarray = Array.from(G[v]);\n        const filtered = gvarray.filter(elem => vertices.has(elem));\n\n\n        returnMap[v] = new Set(filtered);\n    });\n    return returnMap;\n};\n\nexport const strongly_connected_components_standalone = function (graph) {\n    const index_counter = ['0'];\n    const stack = [];\n    const lowlink = {};\n    const index = {};\n    const result = [];\n\n    const _strong_connect = function (node) {\n        index[node] = index_counter[0];\n        lowlink[node] = index_counter[0];\n        index_counter[0] = (parseInt(index_counter[0], 10) + 1).toString();\n        stack.push(node);\n\n        const successors = graph[node] || [];\n        successors.forEach(successor => {\n            if (!Object.keys(index).includes(successor)) {\n                _strong_connect(successor);\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node], 10), parseInt(lowlink[successor], 10)).toString();\n            } else if (stack.includes(successor)) {\n                if (lowlink[node] === undefined || lowlink[successor] === undefined) {\n                    throw new Error('Not defined: ' + node + ' ' + successor + ' ' + JSON.stringify(lowlink) + ' ' + JSON.stringify(index));\n                }\n                lowlink[node] = Math.min(parseInt(lowlink[node], 10), parseInt(index[successor], 10)).toString();\n            }\n        });\n\n        if (lowlink[node] === index[node]) {\n            const connected_component = [];\n            /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n            while (true) {\n                const successor = stack.pop();\n                connected_component.push(successor);\n                if (successor === node) break;\n            }\n            result.push(connected_component.slice());\n        }\n    };\n    Object.keys(graph).forEach(node => {\n        if (!Object.keys(index).includes(node)) {\n            _strong_connect(node);\n        }\n    });\n\n    return result;\n};\n\nexport const simple_cycle = function (Ginput) {\n    const _unblock = function (thisnode, blocked, B) {\n        const stack = new Set([thisnode]);\n        while (stack.size) {\n            const node = stack.values().next().value;\n            stack.delete(node);\n            if (blocked.has(node)) {\n                blocked.delete(node);\n                if (!B[node]) {\n                    B[node] = new Set();\n                }\n                B[node].forEach(elem => {\n                    stack.add(elem);\n                });\n                B[node].clear();\n            }\n        }\n    };\n\n\n    const G = {};\n    Object.keys(Ginput).forEach(key => {\n        G[key] = new Set(Ginput[key].map(elem => elem.toString()));\n    });\n\n    const sccs = strongly_connected_components(G);\n    const returnValues = [];\n    while (sccs.length) {\n        const scc = sccs.pop();\n        const startnode = scc.pop();\n        const path = [startnode];\n        const blocked = new Set();\n        const closed = new Set();\n        blocked.add(startnode);\n        const B = {};\n        const stack = [[startnode, Array.from(G[startnode] || new Set())]];\n        while (stack.length) {\n            const [thisnode, nbrs] = stack[stack.length - 1];\n            if (nbrs && nbrs.length) {\n                const nextnode = nbrs.pop();\n                if (nextnode === startnode) {\n                    returnValues.push(path.slice().map(elem => parseInt(elem)));\n                    path.forEach(node => {\n                        closed.add(node);\n                    });\n                } else if (!blocked.has(nextnode)) {\n                    path.push(nextnode);\n                    stack.push([nextnode, Array.from(G[nextnode] || new Set())]);\n                    closed.delete(nextnode);\n                    blocked.add(nextnode);\n                }\n            } else {\n                if (closed.has(thisnode)) {\n                    _unblock(thisnode, blocked, B);\n                } else {\n                    (G[thisnode] || []).forEach(nbr => {\n                        B[nbr] = B[nbr] || new Set();\n                        if (!B[nbr].has(nbr)) {\n                            B[nbr].add(thisnode);\n                        }\n                    });\n                }\n\n                stack.pop();\n                path.pop();\n            }\n        }\n\n        remove_node(G, startnode);\n        const H = subgraphs(G, new Set(scc));\n        const toAdd = strongly_connected_components(H);\n        toAdd.forEach(elem => {\n            sccs.push(elem);\n        });\n    }\n    return returnValues;\n};\n\n// how to remove dups\n\n//to generate the specific indexes\n// pos = myArray.map(function(e) { return e.hello; }).indexOf('stevie');\n\n\n// var a = [1, 2, 3], b = [101, 2, 1, 10];\n// var c = a.concat(b);\n// var d = c.filter(function (item, pos) {return c.indexOf(item) == pos});","import {parse, stringify} from 'flatted/esm';\nimport pako from 'pako';\nimport Base64 from 'Base64';\n\nexport const spliceUtil = function (object, item) {\n    if (object.indexOf(item) === -1) return;\n    object.splice(object.indexOf(item), 1);\n};\n\nconst inflate = (data) => parse(pako.inflate(Base64.atob(data), {to: 'string'}));\n\nexport const saveHash = (data) => {\n    return new Promise((resolve, reject) => {\n        return fetch('https://api.myjson.com/bins/', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n            },\n            body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n        }).then(response => response.json()).then(function(response) {\n            if (response.uri) {\n                const resp = response.uri.replace('https:\\/\\/api.myjson.com/bins//','');\n                console.log(response.uri);\n                console.log(resp);\n                console.log(encodeURIComponent(Base64.btoa(resp)));\n                return resolve(encodeURIComponent(Base64.btoa(resp)));\n            }\n            throw new Error(\"Invalid save\");\n        })\n        .catch(function(error) {\n            console.log('Fetch error:', error.message);\n            reject(error);\n        });\n    })\n};\n\nconst data = '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';\n\nexport const loadHash = () => {\n    return new Promise((resolve, reject) => {\n\n        if (window.location.hash) {\n            let location = null;\n            if (window.location.hash.indexOf('?') === -1) {\n                location = window.location.hash.slice(1);\n            } else {\n                location = window.location.hash.slice(1, window.location.hash.indexOf('?'));\n            }\n\n            return fetch('https://api.myjson.com/bins//' + Base64.atob(decodeURIComponent(location)), {\n                method: \"GET\"\n            }).then(response => response.json()).then(function(responseRaw) {\n                resolve(inflate(responseRaw.data));\n            })\n            .catch(function(error) {\n                console.log('Fetch error:', error.message);\n                resolve(inflate(data));\n            });\n        } else {\n            resolve(inflate(data));\n        }\n    })\n};\n\nexport const rebuildQueryParams = () => {\n    const vars = {};\n    window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        vars[key] = value;\n    });\n    if (Object.keys(vars).length) {\n        return '?' + Object.keys(vars).map(k => k+ '=' + vars[k]).join('&');\n    }\n\n    return '';\n};\n\nexport const useExperimentalFeature = (featureName) => {\n    const vars = {};\n    window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        vars[key] = value;\n    });\n    vars.useExperimentalFeatures = vars.useExperimentalFeatures || '';\n    return (vars.useExperimentalFeatures || '').split(',').includes(featureName) || vars.useExperimentalFeatures === 'all'\n};","import {spliceUtil} from \"./GraphSvg/util\";\n\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        this.reheapify();\n    }\n\n    reheapify() {\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    size() {\n        return this.data.length;\n    }\n\n    remove(item) {\n        spliceUtil(this.data, item);\n        this.length = this.data.length;\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}","import constants from './constants';\nimport * as d3 from 'd3';\nimport {\n    addEfficiencyArc,\n    addNodeImage,\n    editEfficiencyArc,\n    insertComponents,\n    insertNodeOverclock,\n    insertNodeTier,\n    node_clicked,\n    node_mouse_down,\n    node_mouse_out,\n    node_mouse_over,\n    node_mouse_up,\n    remove_select_from_nodes,\n    wheelZoomCalculation\n} from './nodeActions';\nimport {drag_drag, drag_end, drag_start} from './mouseEvents';\nimport {calculateLabelPositions, insertEdgeLabel, pathMouseClick, recalculateStorageContainers} from './edgeActions';\nimport {strongly_connected_components_standalone} from './algorithms';\nimport TinyQueue from '../TinyQueue';\n\n\nexport const analyzeGraph = function () {\n    const nodeUnion = new Set(Object.keys(this.nodeIn));\n    Object.keys(this.nodeOut).forEach(node => nodeUnion.add(node));\n    const nodeUnionArray = Array.from(nodeUnion);\n\n    const nodeLookup = {};\n\n    nodeUnionArray.forEach((value, index) => {\n        nodeUnionArray[index] = this.graphData.nodes.filter(elem => elem.id.toString() === value)[0];\n        nodeLookup[nodeUnionArray[index].id] = nodeUnionArray[index];\n        nodeUnionArray[index].childProvides = [];\n        nodeUnionArray[index].hasSources = new Set();\n        nodeUnionArray[index].containedItems = [];\n\n        if (nodeUnionArray[index].machine.name !== 'Container' && nodeUnionArray[index].machine.name !== 'Logistic') {\n        } else {\n            nodeUnionArray[index].allowedIn = [];\n            nodeUnionArray[index].allowedOut = [];\n        }\n    });\n\n    const nodeOutWithSets = {};\n    Object.keys(this.nodeOut).forEach(key => {\n        const value = this.nodeOut[key];\n        nodeOutWithSets[key] = new Set(value.map(elem => elem.id.toString()));\n    });\n\n    const componentsList = strongly_connected_components_standalone(nodeOutWithSets);\n    const superNodeGraphLookup = {};\n    const superNodeGraphLookupInflated = {};\n    const lookupArray = {};\n    componentsList.forEach((list, index) => {\n        superNodeGraphLookup[index] = list;\n        superNodeGraphLookupInflated[index] = list.map(id => nodeLookup[id]);\n        list.forEach(item => {\n            lookupArray[item] = index;\n        });\n    });\n    const derivedGraphOutgoing = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphOutgoing[thisNode] = derivedGraphOutgoing[thisNode] || new Set();\n        const derivedGraphAccessor = derivedGraphOutgoing[thisNode];\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n            derivedGraphAccessor.add(thisId);\n        });\n    });\n    const derivedGraphIncoming = {};\n    const immutableDerivedGraphIncoming = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphIncoming[thisNode] = derivedGraphIncoming[thisNode] || new Set();\n        immutableDerivedGraphIncoming[thisNode] = immutableDerivedGraphIncoming[thisNode] || new Set();\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n\n            if (!derivedGraphIncoming[thisId]) {\n                derivedGraphIncoming[thisId] = new Set();\n                immutableDerivedGraphIncoming[thisId] = new Set();\n            }\n\n            const derivedGraphAccessor = derivedGraphIncoming[thisId];\n            derivedGraphAccessor.add(thisNode);\n            immutableDerivedGraphIncoming[thisId].add(thisNode);\n        });\n    });\n    const myTinyQueue = new TinyQueue(Array.from(new Set([...Object.keys(derivedGraphOutgoing), ...Object.keys(derivedGraphIncoming)])), (a, b) => {\n        return (derivedGraphIncoming[a] || []).size - (derivedGraphIncoming[b] || []).size;\n    });\n\n    const providedThroughput = {};\n\n    const itemLookup = {};\n\n    this.props.parentAccessor.state.recipe.item.forEach(item => {\n        itemLookup[item.id] = item.icon;\n    });\n\n    this.graphData.nodes.forEach(node => {\n        delete node.efficiency;\n        delete node.itemThroughPut;\n        delete node.itemsPerMinute;\n        delete node.internalError;\n\n        if (node.data && node.data.recipe && !node.data.node && this.props.parentAccessor.state && this.props.parentAccessor.state.recipe && this.props.parentAccessor.state.recipe.recipe) {\n            if (window.location.search.indexOf('thankYouStay=veryYes') > -1) {\n                const workaroundHack = this.props.parentAccessor.state.recipe.recipe.filter(rec => rec.id === node.data.recipe.id);\n                if (workaroundHack.length > 0) {\n                    node.data.recipe = workaroundHack[0];\n                }\n                console.log('Replaced recipe', workaroundHack[0]);\n            }\n        }\n\n        node.itemIconLookup = itemLookup;\n    });\n\n    this.graphData.links.forEach(link => {\n        delete link.itemThroughPut;\n        delete link.tempIndex;\n        delete link.forceOverwritable;\n        link.itemIconLookup = itemLookup;\n    });\n\n\n    while (myTinyQueue.size()) {\n        const node = myTinyQueue.pop();\n\n        const thisNodeInflated = superNodeGraphLookupInflated[node];\n        const outgoing = Array.from(derivedGraphOutgoing[node] || new Set());\n        const outgoingInflated = outgoing.map(item => superNodeGraphLookupInflated[item]);\n\n        const propagateNodeToEdgesRevised = (nodeGroupSource, nodeGroupTarget, origin, targets) => {\n            const nodeGroupSourceThroughput = [];\n            if (nodeGroupSource.length === 1) {\n                const node = nodeGroupSource[0];\n                let throughput = null;\n                let efficiency = null;\n\n                const nodeSpeed = node.instance.speed / 100;\n                const overclock = node.overclock / 100;\n\n                const provided = providedThroughput[node.id] || [];\n\n                if (node.data.node) {\n                    // this is a purity calculation\n                    const recipe = node.data.recipe;\n                    const purity = node.data.purity;\n                    const fetchedPurity = recipe.purities.filter(item => item.name === purity);\n\n                    if (fetchedPurity.length !== 1) {\n                        throw new Error('Trying to get purity', purity, 'wtf?');\n                    }\n                    const actualPurity = fetchedPurity[0];\n\n                    throughput = {\n                        speed: nodeSpeed,\n                        overclock,\n                        quantity: actualPurity.quantity,\n                        item: recipe.item.id,\n                        time: 60,\n                        power: node.instance.power,\n                        inputs: []\n                    };\n                    efficiency = 1;\n\n                    const maxThroughput = (throughput.quantity / throughput.time) * 60 * node.instance.speed / 100 * throughput.overclock;\n                    nodeGroupSourceThroughput.push({throughput, efficiency, source: origin});\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = efficiency;\n                        node.itemsPerMinute = {[throughput.item]: maxThroughput};\n\n                        // Comment this out if we should remove the display from nodes\n                        node.itemThroughPut = {[throughput.item]: {max: maxThroughput, actual: maxThroughput}};\n                    });\n                } else if (node.machine.name === 'Logistic' && node.instance.name === 'Splitter') {\n                    const resources = {};\n                    const providedSet = new Set();\n                    provided.forEach(provideRaw => {\n                        const provide = JSON.parse(JSON.stringify(provideRaw));\n\n                        //TODO: change the 3 to the actual number of links out\n                        provide.maxItemsPerSecLimiter = provide.calculatedItemPerSecond;\n                        // / ((this.nodeOut[nodeGroupSource[0].id] || []).length || 1);\n\n                        provide.reconstructionMultiplier = ((this.nodeOut[nodeGroupSource[0].id] || []).length || 1);\n\n                        const i = provide.throughput.item;\n                        providedSet.add(i);\n                        const itemPerSec = provide.calculatedItemPerSecond;\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = 1;\n                        node.itemsPerMinute = {};\n                        node.itemThroughPut = {};\n                        providedSet.forEach(providedItem => {\n                            const resourceCount = resources[providedItem];\n                            node.itemsPerMinute[providedItem] = resourceCount;\n                            node.itemThroughPut[providedItem] = {max: resourceCount, actual: resourceCount};\n                        });\n                    });\n                } else if (node.machine.name === 'Logistic' && node.instance.name === 'Merger') {\n                    const resources = {};\n                    const providedSet = new Set();\n                    provided.forEach(provideRaw => {\n                        const provide = JSON.parse(JSON.stringify(provideRaw));\n                        const i = provide.throughput.item;\n                        providedSet.add(i);\n                        const itemPerSec = provide.calculatedItemPerSecond;\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = 1;\n                        node.itemsPerMinute = {};\n                        node.itemThroughPut = {};\n                        providedSet.forEach(providedItem => {\n                            const resourceCount = resources[providedItem];\n                            node.itemsPerMinute[providedItem] = resourceCount;\n                            node.itemThroughPut[providedItem] = {max: resourceCount, actual: resourceCount};\n                        });\n                    });\n                } else if (node.machine.name === 'Container') {\n                    const resources = {};\n                    const providedSet = new Set();\n                    provided.forEach(provide => {\n                        const i = provide.throughput.item;\n                        providedSet.add(i);\n                        const itemPerSec = provide.calculatedItemPerSecond;\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = 1;\n                        node.itemsPerMinute = {};\n                        providedSet.forEach(providedItem => {\n                            const resourceCount = resources[providedItem];\n                            node.itemsPerMinute[providedItem] = resourceCount;\n                            node.itemThroughPut = {[providedItem]: {max: resourceCount, actual: resourceCount}};\n                        });\n                    });\n                } else {\n                    throughput = {\n                        speed: nodeSpeed,\n                        overclock,\n                        quantity: node.data.recipe.quantity,\n                        item: node.data.recipe.item.id,\n                        time: node.data.recipe.time,\n                        power: node.data.recipe.power,\n                        inputs: node.data.recipe.inputs.map(elem => {\n                            return {item: elem.item.id, quantity: elem.quantity};\n                        })\n                    };\n\n                    const resources = {};\n\n                    const providedSet = new Set();\n\n                    provided.forEach(provide => {\n                        const i = provide.throughput.item;\n\n                        providedSet.add(i);\n\n                        const itemPerSec = provide.calculatedItemPerSecond;\n\n                        resources[i] = resources[i] || 0;\n                        resources[i] += itemPerSec * 60;\n                    });\n\n                    const missing = new Set();\n                    const efficiencies = [Infinity];\n\n                    const maxThroughput = (throughput.quantity / throughput.time) * 60 * node.instance.speed / 100 * throughput.overclock;\n\n                    throughput.inputs.forEach(inp => {\n                        const item = inp.item;\n                        const quantity = inp.quantity;\n                        const providedQuantity = resources[item] || 0;\n                        if (!providedSet.has(item)) {\n                            missing.add(item);\n                        }\n\n                        const resourceThroughputNeeded = maxThroughput * (quantity / throughput.quantity);\n                        const calculatedThroughput = maxThroughput * (Math.min(resourceThroughputNeeded, providedQuantity) / resourceThroughputNeeded);\n                        const maxThroughputPerItem = resourceThroughputNeeded;\n\n                        node.itemThroughPut = node.itemThroughPut || {};\n                        node.itemThroughPut[item] = node.itemThroughPut[item] || {max: 0, actual: 0};\n                        node.itemThroughPut[item].max += maxThroughputPerItem;\n                        node.itemThroughPut[item].actual += providedQuantity;\n\n                        const efficiency = calculatedThroughput / maxThroughput;\n\n                        efficiencies.push(Math.min(1, efficiency));\n                    });\n\n                    if (missing.size > 0) {\n                        efficiency = 0;\n                    } else {\n                        efficiency = Math.min(...efficiencies);\n                    }\n\n                    nodeGroupSourceThroughput.push({throughput, efficiency, source: origin});\n\n                    nodeGroupSource.forEach(node => {\n                        node.efficiency = efficiency;\n                        node.itemsPerMinute = {[throughput.item]: maxThroughput * efficiency};\n                    });\n                }\n\n                let totalItemThroughput = 0;\n                let totalLinkThroughput = 0;\n                let totalItemThroughputByItem = {};\n\n                let linkPairs = [];\n\n                (derivedGraphOutgoing[origin] || []).forEach(outgoingNode => {\n                    const sources = nodeGroupSource.map(node => node.id);\n                    const targets = superNodeGraphLookupInflated[outgoingNode].map(node => node.id);\n\n                    sources.forEach(source => {\n                        targets.forEach(target => {\n                            const link = this.graphData.links.filter(link => link.source.id === source && link.target.id === target);\n                            let foundLink = null;\n                            if (link && link.length === 1) {\n                                foundLink = link[0];\n                            } else if (link && link.length > 1) {\n                                throw new Error('Too many links found!!!');\n                            } else {\n                                return;\n                            }\n\n                            linkPairs.push({source, target, speed: foundLink.instance.speed, link: foundLink});\n                            totalLinkThroughput += foundLink.instance.speed;\n                        });\n                    });\n                });\n\n                const localItemThroughput = nodeGroupSourceThroughput.map(throughput => {\n\n                    const q = throughput.throughput.quantity;\n                    const t = throughput.throughput.time;\n                    const e = throughput.efficiency;\n                    const o = throughput.throughput.overclock;\n                    const s = throughput.throughput.speed;\n                    const i = throughput.throughput.item;\n\n                    const maxItemsPerSecLimiter = throughput.maxItemsPerSecLimiter === undefined ? Infinity : throughput.maxItemsPerSecLimiter;\n                    const tmp = Math.min(q / t * e * o * s || 0, maxItemsPerSecLimiter);\n\n                    totalItemThroughputByItem[i] = totalItemThroughputByItem[i] || 0;\n                    totalItemThroughputByItem[i] += tmp;\n\n                    return tmp;\n                }).reduce((a, b = 0) => a + b, 0);\n\n                totalItemThroughput += localItemThroughput;\n\n                linkPairs.sort(\n                    (t1, t2) => {\n                        return t1.speed - t2.speed;\n                    }\n                );\n\n                let processingType = 1;\n                if (totalItemThroughput * 60 > totalLinkThroughput) {\n                    // split proportioanly the totalItemThroughput\n                } else {\n                    processingType = 0;\n                    //fill things sequentiually\n                }\n\n\n                let remainingItemProcessing = totalItemThroughput * 60;\n                let remainingLinkPairs = linkPairs.length;\n                linkPairs.forEach(pair => {\n                    const target = pair.target;\n                    const limitedSpeed = pair.speed;\n\n                    providedThroughput[target] = providedThroughput[target] || [];\n                    if (processingType === 1) {\n                        // split everything\n                        // fraction of this belt of ALL belts:\n                        const fraction = limitedSpeed / (totalLinkThroughput);\n                        pair.fraction = fraction;\n                    } else {\n                        if (remainingItemProcessing / remainingLinkPairs > limitedSpeed) {\n                            // there will be residuals\n                            const itemsUsed = limitedSpeed;\n                            remainingItemProcessing -= itemsUsed;\n                            const fraction = limitedSpeed / (totalItemThroughput * 60);\n                            pair.fraction = fraction;\n                        } else {\n                            // no residuals.\n                            const itemsUsed = remainingItemProcessing / remainingLinkPairs;\n                            remainingItemProcessing -= itemsUsed;\n                            const fraction = itemsUsed / (totalItemThroughput * 60);\n                            pair.fraction = fraction;\n                        }\n                    }\n                    remainingLinkPairs -= 1;\n                });\n\n                linkPairs.forEach(pair => {\n                    const source = pair.source;\n                    const target = pair.target;\n                    const speed = pair.speed;\n                    const foundLink = pair.link;\n                    const fraction = pair.fraction || 1;\n                    const limitedSpeed = speed;\n\n                    providedThroughput[target] = providedThroughput[target] || [];\n\n                    nodeGroupSourceThroughput.forEach(itemRaw => {\n                        const throughput = JSON.parse(JSON.stringify(itemRaw));\n                        const q = throughput.throughput.quantity;\n                        const t = throughput.throughput.time;\n                        const e = throughput.efficiency;\n                        const o = throughput.throughput.overclock;\n                        const s = throughput.throughput.speed;\n                        const i = throughput.throughput.item;\n                        //check propagated limited\n                        const maxItemsPerSecLimiter = throughput.maxItemsPerSecLimiter === undefined ? Infinity : throughput.maxItemsPerSecLimiter;\n\n                        let itemPerSecBeforeBeltLimiting = Math.min(q / t * e * o * s || 0, maxItemsPerSecLimiter);\n\n                        // need to do some weird math to constrain the items/psec to a PORTION of the belt limited\n                        const limitedItemPerSecByBelt = limitedSpeed / 60;\n\n                        const beltMaxForThisEntry = limitedItemPerSecByBelt * 60;\n\n                        throughput.maxItemsPerSecLimiter = Math.min(limitedItemPerSecByBelt * (maxItemsPerSecLimiter / totalItemThroughput), beltMaxForThisEntry * (maxItemsPerSecLimiter / totalItemThroughput), limitedItemPerSecByBelt, maxItemsPerSecLimiter, itemPerSecBeforeBeltLimiting * fraction);\n                        throughput.calculatedItemPerSecond = throughput.maxItemsPerSecLimiter;\n\n                        foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                        foundLink.itemThroughPut[i] = foundLink.itemThroughPut[i] || {max: 0, actual: 0};\n                        foundLink.itemThroughPut[i].max += (itemPerSecBeforeBeltLimiting / totalItemThroughput) * beltMaxForThisEntry;\n                        foundLink.itemThroughPut[i].actual += itemPerSecBeforeBeltLimiting * 60 * fraction;\n\n                        providedThroughput[target].push(throughput);\n                    });\n                })\n            } else {\n                const loopedNodes = new Set();\n                nodeGroupSource.forEach((node) => {\n                    loopedNodes.add(node.id);\n                    const provided = providedThroughput[node.id] || [];\n                    provided.forEach(provideRaw => {\n                        const provide = JSON.parse(JSON.stringify(provideRaw));\n                        nodeGroupSourceThroughput.push(provide);\n                    });\n                });\n\n                const visit = (nodeInitial, provide, loopedNodes) => {\n                    let i = 0;\n\n                    let initialItemPerSec = provide.calculatedItemPerSecond;\n\n                    let resources = {[nodeInitial.id]: initialItemPerSec * 60};\n                    const initialNode = nodeInitial.id;\n                    let previousOutput = {[nodeInitial.id]: initialItemPerSec * 60};\n                    let outputIterator = {[nodeInitial.id]: initialItemPerSec * 60};\n                    let iteratorTemp = initialItemPerSec * 60;\n                    while (i < 999) {\n                        const visitedNodes = new Set();\n                        const stack = [nodeInitial];\n                        visitedNodes.add(nodeInitial.id);\n                        while (stack.length) {\n                            const node = stack.pop();\n\n                            let theseResources = resources[node.id];\n\n                            if (node.machine.name === 'Logistic' && node.instance.name === 'Splitter') {\n                                theseResources = theseResources / ((this.nodeOut[node.id] || []).length || 1);\n                            } else if (node.machine.name === 'Logistic' && node.instance.name === 'Merger') {\n\n                            } else if (node.machine.name === 'Container') {\n\n                            }\n\n                            this.nodeOut[node.id].forEach(outNode => {\n                                if (!loopedNodes.has(outNode.id)) {\n                                    return;\n                                }\n\n                                const links = this.graphData.links.filter(link => link.source.id === node.id && link.target.id === outNode.id);\n                                if (links && links.length !== 1) {\n                                    throw new Error('Too many links found!!!');\n                                }\n                                const link = links[0];\n                                const limitedSpeed = link.instance.speed;\n                                resources[outNode.id] = resources[outNode.id] || 0;\n                                resources[outNode.id] += (theseResources);\n                            });\n\n                            (this.nodeOut[node.id] || []).forEach(outNode => {\n                                if (!visitedNodes.has(outNode.id) && loopedNodes.has(outNode.id)) {\n                                    visitedNodes.add(outNode.id);\n                                    stack.push(outNode);\n                                }\n                            });\n\n                        }\n\n                        const delta = resources[initialNode] - previousOutput[initialNode];\n\n                        if (!nodeGroupTarget.length || delta > previousOutput || Math.round(delta * 1000000) === 0 || i === 998) {\n                            Object.keys(resources).forEach(key => {\n                                outputIterator[key] = Math.round(100 * outputIterator[key]) / 100;\n                            });\n                            return outputIterator;\n                        } else {\n\n                            iteratorTemp += delta;\n\n                            resources[initialNode] -= previousOutput[initialNode];\n\n                            Object.keys(resources).forEach(key => {\n                                outputIterator[key] = outputIterator[key] || 0;\n                                outputIterator[key] += resources[key];\n                            });\n\n                            previousOutput[initialNode] = delta; // rabbit and the hare.\n                            resources = {[initialNode]: delta};\n                            i++;\n                        }\n                    }\n                };\n\n                const itemPerNode = {};\n                nodeGroupSource.forEach((node) => {\n                    const providedThroughputFromOthers = JSON.parse(JSON.stringify(providedThroughput[node.id] || []));\n                    providedThroughputFromOthers.forEach(provide => {\n                        const resultantResource = visit(node, provide, loopedNodes);\n                        const item = provide.throughput.item;\n                        Object.keys(resultantResource || []).forEach(nodeId => {\n                            itemPerNode[nodeId] = itemPerNode[nodeId] || {};\n                            itemPerNode[nodeId][item] = itemPerNode[nodeId][item] || 0;\n                            itemPerNode[nodeId][item] += resultantResource[nodeId];\n                        });\n                    });\n                });\n\n                nodeGroupSource.forEach((node) => {\n                    this.nodeOut[node.id].forEach(outNode => {\n\n                        if (!loopedNodes.has(outNode.id)) {\n                            return;\n                        }\n\n                        const links = this.graphData.links.filter(link => link.source.id === node.id && link.target.id === outNode.id);\n                        if (links && links.length !== 1) {\n                            throw new Error('Too many links found!!!');\n                        }\n                        const foundLink = links[0];\n                        const linkSpeed = foundLink.instance.speed;\n\n                        const totalItems = Object.keys(itemPerNode[node.id] || {}).map(item => itemPerNode[node.id][item]).reduce((a, b = 0) => a + b, 0);\n\n                        Object.keys(itemPerNode[node.id] || {}).forEach(item => {\n                            const q = itemPerNode[node.id][item];\n                            foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                            foundLink.itemThroughPut[item] = foundLink.itemThroughPut[item] || {max: 0, actual: 0};\n                            foundLink.itemThroughPut[item].max = (q / totalItems * linkSpeed);\n                            foundLink.itemThroughPut[item].actual += (q / ((this.nodeOut[node.id] || []).length || 1));\n                            foundLink.forceOverwritable = true;\n                        });\n                    });\n                });\n\n                nodeGroupSource.forEach((outerNode) => {\n                    outerNode.itemsPerMinute = {};\n                    outerNode.efficiency = 1;\n                    nodeGroupSource.forEach((node) => {\n                        const provided = providedThroughput[node.id] || [];\n                        provided.forEach(provideRaw => {\n                            const provide = JSON.parse(JSON.stringify(provideRaw));\n                            const item = provide.throughput.item;\n                            outerNode.itemsPerMinute[item] = (itemPerNode[outerNode.id][item] || 0);\n                        });\n                    });\n                });\n\n\n                //=========================\n                // let totalLinkThroughput = {};\n                //\n                // let linkPairs = [];\n                // let sourcesSet = new Set();\n                //\n                // (derivedGraphOutgoing[origin] || []).forEach(outgoingNode => {\n                //   const sources = nodeGroupSource.map(node => node.id);\n                //   const targets = superNodeGraphLookupInflated[outgoingNode].map(node => node.id);\n                //\n                //   sources.forEach(source => {\n                //     targets.forEach(target => {\n                //       const link = this.graphData.links.filter(link => link.source.id === source && link.target.id === target);\n                //       let foundLink = null;\n                //       if (link && link.length === 1) {\n                //         foundLink = link[0];\n                //       } else if (link && link.length > 1) {\n                //         throw new Error('Too many links found!!!');\n                //       } else {\n                //         return;\n                //       }\n                //\n                //       linkPairs.push({source, target, speed: foundLink.instance.speed, link: foundLink});\n                //       sourcesSet.add(source);\n                //       totalLinkThroughput[source] = totalLinkThroughput[source] || 0;\n                //       totalLinkThroughput[source] += foundLink.instance.speed;\n                //     });\n                //   });\n                // });\n                //\n                // linkPairs.sort(\n                //     (t1, t2) => {\n                //       return t1.speed - t2.speed;\n                //     }\n                // );\n                //\n                // console.error(\"HE WASSSSS\", sourcesSet);\n                //\n                // sourcesSet.forEach(sourceMain => {\n                //   let totalItemThroughput = 0;\n                //   const localItemThroughput = nodeGroupSourceThroughput.map(throughput => {\n                //\n                //     const q = throughput.throughput.quantity;\n                //     const t = throughput.throughput.time;\n                //     const e = throughput.efficiency;\n                //     const o = throughput.throughput.overclock;\n                //     const s = throughput.throughput.speed;\n                //     const i = throughput.throughput.item;\n                //\n                //     const maxItemsPerSecLimiter = throughput.maxItemsPerSecLimiter === undefined ? Infinity : throughput.maxItemsPerSecLimiter;\n                //     const tmp = Math.min(q / t * e * o * s || 0, maxItemsPerSecLimiter);\n                //\n                //     return tmp;\n                //   }).reduce((a, b = 0) => a + b, 0);\n                //\n                //   const totalItems = Object.keys(itemPerNode[sourceMain] || {}).map(item => itemPerNode[sourceMain][item]).reduce((a, b = 0) => a + b, 0);\n                //\n                //   console.log(\"HE WAS\", itemPerNode, totalItems, sourceMain);\n                //\n                //   totalItemThroughput += (totalItems / 60);\n                //\n                //   let processingType = 1;\n                //   if (totalItemThroughput * 60 > totalLinkThroughput[sourceMain]) {\n                //     // split proportioanly the totalItemThroughput\n                //     console.error(\"WE HAVE TOO MANY ITEMS DAMMIT!!!\", totalItemThroughput * 60, totalLinkThroughput[sourceMain])\n                //   } else {\n                //     processingType = 0;\n                //     console.error(\"fewer items!!!\")\n                //     //fill things sequentiually\n                //   }\n                //\n                //\n                //\n                //   let remainingItemProcessing = totalItemThroughput * 60;\n                //   let remainingLinkPairs = linkPairs.filter((link) => link.source === sourceMain).length;\n                //   console.error(\"Starting calc with\", remainingItemProcessing, \"items\", remainingLinkPairs, \"pairs\", \"on\", sourceMain);\n                //   linkPairs.filter((link) => link.source === sourceMain).forEach(pair => {\n                //     const target = pair.target;\n                //     const limitedSpeed = pair.speed;\n                //\n                //     providedThroughput[target] = providedThroughput[target] || [];\n                //     if (processingType === 1) {\n                //       // split everything\n                //       // fraction of this belt of ALL belts:\n                //       const fraction = limitedSpeed / (totalLinkThroughput[sourceMain]);\n                //       pair.fraction = fraction;\n                //       console.error(\"Processing type 1\", limitedSpeed, totalLinkThroughput[sourceMain])\n                //     } else {\n                //       if (remainingItemProcessing / remainingLinkPairs > limitedSpeed) {\n                //         // there will be residuals\n                //         const itemsUsed = limitedSpeed;\n                //         remainingItemProcessing -= itemsUsed;\n                //         const fraction = limitedSpeed / (totalItemThroughput * 60);\n                //         pair.fraction = fraction;\n                //         console.error(\"Processing type 2.1\", limitedSpeed, totalItemThroughput * 60)\n                //       } else {\n                //         // no residuals.\n                //         const itemsUsed = remainingItemProcessing / remainingLinkPairs;\n                //         remainingItemProcessing -= itemsUsed;\n                //         const fraction = itemsUsed / (totalItemThroughput * 60);\n                //         pair.fraction = fraction;\n                //         console.error(\"Processing type 2.2\", itemsUsed, totalItemThroughput * 60)\n                //       }\n                //     }\n                //     console.error(\"Created one link with fraction\", pair.fraction);\n                //     remainingLinkPairs -= 1;\n                //   });\n                //\n                //   linkPairs.filter((link) => link.source === sourceMain).forEach(pair => {\n                //     const source = pair.source;\n                //     const target = pair.target;\n                //     const speed = pair.speed;\n                //     const foundLink = pair.link;\n                //     const fraction = pair.fraction || 1;\n                //     const limitedSpeed = speed;\n                //\n                //     providedThroughput[target] = providedThroughput[target] || [];\n                //\n                //     console.error(\"OK HERE IS THE DEBUG\", nodeGroupSourceThroughput, linkPairs.filter((link) => link.source === sourceMain));\n                //\n                //     nodeGroupSourceThroughput.forEach(itemRaw => {\n                //       const throughput = JSON.parse(JSON.stringify(itemRaw));\n                //       const i = throughput.throughput.item;\n                //       //check propagated limited\n                //       const maxItemsPerSecLimiter = throughput.maxItemsPerSecLimiter === undefined ? Infinity : throughput.maxItemsPerSecLimiter;\n                //\n                //       let itemPerSecBeforeBeltLimiting = itemPerNode[sourceMain][i]  * fraction / 60 / (nodeGroupSourceThroughput.filter(item => item.throughput.item ===i)).length;\n                //       console.error(\"???\", itemPerNode[sourceMain][i], fraction)\n                //       console.log(\"Here is the limiting thing\", itemPerSecBeforeBeltLimiting * 60 * 2)\n                //\n                //       // need to do some weird math to constrain the items/psec to a PORTION of the belt limited\n                //       const limitedItemPerSecByBelt = limitedSpeed / 60;\n                //\n                //       const beltMaxForThisEntry = limitedItemPerSecByBelt * 60;\n                //\n                //       throughput.maxItemsPerSecLimiter = itemPerSecBeforeBeltLimiting;\n                //       console.log(\"Here are the prereqs\", itemPerSecBeforeBeltLimiting)\n                //       console.error(\"Processing throughput from\", source, '->', target, 'quantity: ', 60 * throughput.maxItemsPerSecLimiter, 'fraction:', fraction);\n                //       throughput.calculatedItemPerSecond = throughput.maxItemsPerSecLimiter;\n                //       throughput.efficiency = Infinity;\n                //\n                //       foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                //       foundLink.itemThroughPut[i] = foundLink.itemThroughPut[i] || {max: 0, actual: 0};\n                //       foundLink.itemThroughPut[i].max +=  (itemPerSecBeforeBeltLimiting / totalItemThroughput) * beltMaxForThisEntry;\n                //       foundLink.itemThroughPut[i].actual += itemPerSecBeforeBeltLimiting * 60 * fraction;\n                //\n                //       providedThroughput[target].push(throughput);\n                //     });\n                //   })\n                // })\n\n\n                //=========================\n\n\n                (derivedGraphOutgoing[origin] || []).forEach(outgoingNode => {\n                    const sources = nodeGroupSource.map(node => node.id);\n                    const targets = superNodeGraphLookupInflated[outgoingNode].map(node => node.id);\n\n                    sources.forEach(source => {\n                        targets.forEach(target => {\n\n                            const link = this.graphData.links.filter(link => link.source.id === source && link.target.id === target);\n\n                            let foundLink = null;\n                            if (link && link.length === 1) {\n                                foundLink = link[0];\n                            } else if (link && link.length > 1) {\n                                throw new Error('Too many links found!!!');\n                            } else {\n                                return;\n                            }\n\n                            const linkSpeed = foundLink.instance.speed;\n\n                            const totalItems = Object.keys(itemPerNode[source] || {}).map(item => itemPerNode[source][item]).reduce((a, b = 0) => a + b, 0);\n\n\n                            Object.keys(itemPerNode[source] || {}).forEach(item => {\n                                const q = itemPerNode[source][item];\n                                foundLink.itemThroughPut = foundLink.itemThroughPut || {};\n                                foundLink.itemThroughPut[item] = foundLink.itemThroughPut[item] || {max: 0, actual: 0};\n                                foundLink.itemThroughPut[item].max = (q / totalItems * linkSpeed);\n                                foundLink.itemThroughPut[item].actual += (q / ((this.nodeOut[source] || []).length || 1));\n                                foundLink.forceOverwritable = true;\n                            });\n\n\n                            nodeGroupSource.forEach((node) => {\n                                const provided = providedThroughput[node.id] || [];\n\n\n                                const provideByItem = {};\n\n                                provided.forEach(provide => {\n                                    const item = provide.throughput.item;\n                                    provideByItem[item] = provideByItem[item] || [];\n                                    provideByItem[item].push(provide);\n                                });\n\n                                Object.keys(provideByItem).forEach(item => {\n                                    const thisProvide = provideByItem[item];\n                                    const totalCalculated = thisProvide.map(item => item.calculatedItemPerSecond).reduce((a, b = 0) => a + b, 0);\n\n                                    thisProvide.forEach(provideRaw => {\n                                        const provide = JSON.parse(JSON.stringify(provideRaw));\n\n                                        const localModifier = provide.calculatedItemPerSecond / totalCalculated;\n\n                                        provide.calculatedItemPerSecond = localModifier / 60 * (itemPerNode[source][item] / ((this.nodeOut[source] || []).length || 1));\n\n                                        provide.calculatedItemPerSecond = Math.min(provide.calculatedItemPerSecond, linkSpeed / 60);\n                                        provide.maxItemsPerSecLimiter = provide.calculatedItemPerSecond;\n\n                                        const throughput = provide;\n                                        const q = throughput.throughput.quantity;\n                                        const t = throughput.throughput.time;\n                                        const e = throughput.efficiency;\n                                        const o = throughput.throughput.overclock;\n                                        const s = throughput.throughput.speed;\n\n                                        const rawCalculation = q / t * e * o * s || 0;\n\n                                        if (rawCalculation < provide.calculatedItemPerSecond) {\n                                            throughput.throughput.overclock = Infinity;\n                                        }\n\n                                        providedThroughput[target] = providedThroughput[target] || [];\n                                        providedThroughput[target].push(throughput);\n                                    });\n                                });\n                            });\n\n                        });\n                    });\n\n                });\n\n\n            }\n        };\n\n        propagateNodeToEdgesRevised(thisNodeInflated, outgoingInflated, node, outgoing);\n\n        Object.keys(derivedGraphIncoming).forEach(key => {\n            const accessor = derivedGraphIncoming[key];\n            accessor.delete(parseInt(node, 10));\n        });\n\n        myTinyQueue.reheapify();\n    }\n\n    editEfficiencyArc('efficiency', 59, 322);\n};\nexport const initSimulation = () => {\n    const bodyEl = document.getElementById('mainRender');\n\n    const width = bodyEl.clientWidth;\n    const height = bodyEl.clientHeight;\n    return d3.forceSimulation()\n        .force('link', d3.forceLink().id(function (d) {\n            return d.id;\n        }).distance(60))\n        .force('charge', d3.forceManyBody().strength(20))\n        // .force('center', d3.forceCenter(width / 2, height / 2))\n        .force('collision', d3.forceCollide().radius(function (d) {\n            return 120;\n        }))\n        .force('xAxis', d3.forceX().strength(0.1).x(function (d) {\n            return d.initialX || (width / 2);\n        }))\n        .force('yAxis', d3.forceY().strength(0.5).y(function (d) {\n            return d.initialY || (height / 2);\n        }));\n};\n\nexport const updateGraph = function (simulation, graphNodesGroup, graphLinksGroup) {\n    const t = this;\n    let nodes = this.graphData.nodes;\n    let links = this.graphData.links;\n\n    this.nodeIn = {};\n    this.nodeOut = {};\n\n    links.forEach(elem => {\n        const outgoing = elem.source.id;\n        const incoming = elem.target.id;\n        this.nodeOut[outgoing] = this.nodeOut[outgoing] || [];\n        this.nodeIn[incoming] = this.nodeIn[incoming] || [];\n\n        this.nodeOut[outgoing].push(elem.target);\n        this.nodeIn[incoming].push(elem.source);\n    });\n\n    nodes.forEach(node => {\n        const input_slots = node.instance.input_slots;\n        const output_slots = node.instance.output_slots;\n        node.open_in_slots = input_slots - (t.nodeIn[node.id] || []).length;\n        node.open_out_slot = output_slots - (t.nodeOut[node.id] || []).length;\n    });\n\n    recalculateStorageContainers.call(t);\n\n    const drag = d3.drag()\n        .clickDistance(10)\n        .on('start', (d) => {\n            drag_start.call(this, d, simulation, t);\n        }).on('drag', (d) => {\n            drag_drag.call(this, d, t);\n        }).on('end', function (d) {\n            d3.event.sourceEvent.stopImmediatePropagation();\n            drag_end.call(this, d, t, simulation);\n        });\n\n    let graphNodesData =\n        graphNodesGroup\n            .selectAll('.' + 'node-data-class')\n            .data(nodes, d => d.id);\n\n    let graphNodesEnter =\n        graphNodesData\n            .enter()\n            .append('g')\n            .classed('node-data-class', true)\n            .attr('id', d => d.id || null)\n            // .on('contextmenu', (d, i)  => {\n            //   t.remove(d);\n            //   d3.event.preventDefault();\n            // })\n            // .on('mouseover', d => console.log(`d.id: ${d.id}`))\n            // .on('click', d => t.handleNodeClicked(d))\n            .on('wheel.zoom', function (d) {\n                wheelZoomCalculation.call(this, d);\n            })\n            .on('click', function (d) {\n                d3.event.stopImmediatePropagation();\n                node_clicked.call(this, d, t);\n                // self.onNodeClicked.emit(d.id);\n            }).on('dblclick', function (d) {\n            d3.event.stopImmediatePropagation();\n            remove_select_from_nodes(t);\n            d.fx = null;\n            d.fy = null;\n        }).on('mouseover', function (d) {\n            node_mouse_over.call(this, d, t);\n        }).on('mouseout', function (d) {\n            node_mouse_out.call(this, d, t);\n        }).on('mousedown', function (d) {\n            node_mouse_down.call(this, d, t);\n        }).on('mouseup', function (d) {\n            node_mouse_up.call(this, d, t);\n        }).call(drag);\n\n    let graphNodesExit =\n        graphNodesData\n            .exit()\n            .remove();\n\n    let graphNodeCircles =\n        graphNodesEnter\n            .append('circle')\n            .classed(constants.graphNodeClass, true)\n            .attr('cursor', 'pointer')\n            .attr('r', d => 50);\n\n    const callbacks = [];\n    addEfficiencyArc(graphNodesEnter, 'efficiency', 59, 322);\n    addNodeImage(graphNodesEnter);\n    insertNodeOverclock(graphNodesEnter);\n    insertNodeTier(graphNodesEnter);\n    insertComponents.call(t, graphNodesEnter);\n\n    // merge\n    graphNodesData =\n        graphNodesEnter.merge(graphNodesData);\n\n    // links\n    let graphLinksData =\n        graphLinksGroup\n            .selectAll('.' + 'link-data-class')\n            .data(links, function (d) {\n                return d.source.id + '-' + d.target.id;\n            });\n    let graphLinksEnter =\n        graphLinksData\n            .enter()\n            .append('g')\n            .classed('link-data-class', true);\n\n    let graphLinksExit =\n        graphLinksData\n            .exit()\n            .remove();\n\n\n    const linkFullObject = graphLinksEnter\n        .append('g')\n        .attr('id', function (d) {\n            return 'path-parent' + d.source.id + '-' + d.target.id;\n        })\n        .classed(constants.lineParentObjectClass, true);\n\n\n    // apply styling to each selected line\n    linkFullObject.append('path')\n        .classed(constants.lineStylingPathClass, true)\n        .classed(constants.lineStylingFullClass, true)\n        .attr('display', 'none')\n        .attr('stroke', 'orange')\n        .attr('stroke-width', 10);\n    linkFullObject.append('path')\n        .classed(constants.lineStylingArrowClass, true)\n        .classed(constants.lineStylingFullClass, true)\n        .attr('display', 'none')\n        .attr('stroke', null)\n        .attr('marker-end', 'url(#highlight-path-arrow-orange)')\n        .attr('stroke-width', 3);\n\n    linkFullObject\n        .append('path')\n        .classed(constants.lineObjectClass, true)\n        .attr('stroke', function (d) {\n            return d3.color('#000000');\n        })\n        .attr('marker-end', 'url(#default-path-arrow)');\n\n    insertEdgeLabel.call(this, linkFullObject);\n\n    // apply styling to each selected line\n    linkFullObject\n        .append('path')\n        .classed(constants.lineHitboxObjectClass, true)\n        .on('mouseover', function (d) {\n        }).on('mouseout', function (d) {\n    }).on('click', function (d) {\n        pathMouseClick.call(this, d, t);\n    });\n\n    // merge\n    graphLinksData =\n        graphLinksEnter.merge(graphLinksData);\n\n    simulation\n        .nodes(nodes)\n        .on('tick', () => {\n            handleTick.call(this, graphNodesData, graphLinksData, simulation);\n        })\n        .on('end', () => {\n            console.log('Simulation Ended!');\n        });\n\n    simulation\n        .force('link')\n        .links(links);\n    // simulation\n    // .force('link', d3.forceLink().links(forceLinks))\n    // experiment: weights>\n    // t.linkWeights = {}\n    // links.forEach(elem => {\n    //   t.linkWeights[elem.target.id] = t.linkWeights[elem.target.id] + 1 || 1;\n    //   // t.linkWeights[elem.source.id] = t.linkWeights[elem.source.id] + 1 || 1;\n    // })\n    //\n    // simulation.force('charge', d3.forceManyBody().strength(function(d) {\n    //   return 20 - (20 * t.linkWeights[d.id]);\n    // }));\n    callbacks.forEach(callback => callback());\n    simulation.alphaTarget(0.3).restart();\n};\n\nexport const deselect_path_and_nodes = function (t) {\n    t.setState({selectedPath: null, selectedNode: null});\n    d3.selectAll('.' + constants.lineStylingFullClass).attr('display', 'none');\n    remove_select_from_nodes(t);\n};\n\nexport const zoom_actions = (graphObjects) => {\n    graphObjects.attr('transform', d3.event.transform);\n};\n\nexport const handleTick = function (graphNodesData, graphLinksData, simulation) {\n    //update circle positions each tick of the simulation\n    const k = 100 * simulation.alpha();\n    graphNodesData\n        .attr('transform', function (d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        })\n        .attr('cx', function (d) {\n            return d.x;\n        })\n        .attr('cy', function (d) {\n            return d.y;\n        });\n\n    //update link positions\n    graphLinksData.selectAll('line')\n        .attr('x1', function (d) {\n            return d.source.x;\n        })\n        .attr('y1', function (d) {\n            return d.source.y;\n        })\n        .attr('x2', function (d) {\n            return d.target.x;\n        })\n        .attr('y2', function (d) {\n            return d.target.y;\n        });\n\n    //update link positions\n    graphLinksData.selectAll('path')\n        .attr('d', function (d) {\n            return 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y;\n        });\n\n    calculateLabelPositions.call(this, graphLinksData);\n\n    graphLinksData.selectAll('.' + constants.lineObjectClass)\n        .each(function (d) {\n            d.source.vx += k;\n            d.target.vx -= k;\n        });\n};","import constants from './constants';\nimport {deselect_path_and_nodes} from './graphActions';\nimport * as d3 from 'd3';\nimport TinyQueue from '../TinyQueue';\nimport {strongly_connected_components_standalone} from './algorithms';\nimport {spliceUtil} from './util';\nimport {updateNodeTierExternal} from \"./nodeActions\";\n\nexport const recalculateStorageContainers = function () {\n\n    const nodeUnion = new Set(Object.keys(this.nodeIn));\n    Object.keys(this.nodeOut).forEach(node => nodeUnion.add(node));\n    const nodeUnionArray = Array.from(nodeUnion);\n\n    const nodeLookup = {};\n\n    nodeUnionArray.forEach((value, index) => {\n        nodeUnionArray[index] = this.graphData.nodes.filter(elem => elem.id.toString() === value)[0];\n        nodeLookup[nodeUnionArray[index].id] = nodeUnionArray[index];\n        nodeUnionArray[index].childProvides = [];\n        nodeUnionArray[index].hasSources = new Set();\n        nodeUnionArray[index].containedItems = [];\n\n        if (nodeUnionArray[index].machine.name !== 'Container' && nodeUnionArray[index].machine.name !== 'Logistic') {\n        } else {\n            nodeUnionArray[index].allowedIn = [];\n            nodeUnionArray[index].allowedOut = [];\n        }\n    });\n\n    const nodeOutWithSets = {};\n    Object.keys(this.nodeOut).forEach(key => {\n        const value = this.nodeOut[key];\n        nodeOutWithSets[key] = new Set(value.map(elem => elem.id.toString()));\n    });\n\n    const componentsList = strongly_connected_components_standalone(nodeOutWithSets);\n    const superNodeGraphLookup = {};\n    const superNodeGraphLookupInflated = {};\n    const lookupArray = {};\n    componentsList.forEach((list, index) => {\n        superNodeGraphLookup[index] = list;\n        superNodeGraphLookupInflated[index] = list.map(id => nodeLookup[id]);\n        list.forEach(item => {\n            lookupArray[item] = index;\n        });\n    });\n    const derivedGraphOutgoing = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphOutgoing[thisNode] = derivedGraphOutgoing[thisNode] || new Set();\n        const derivedGraphAccessor = derivedGraphOutgoing[thisNode];\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n            derivedGraphAccessor.add(thisId);\n        });\n    });\n    const derivedGraphIncoming = {};\n    const immutableDerivedGraphIncoming = {};\n\n    // Derive a graph from this new info\n    Object.keys(this.nodeOut).forEach(node => {\n        const ids = this.nodeOut[node].map(item => item.id);\n        const thisNode = lookupArray[node];\n        derivedGraphIncoming[thisNode] = derivedGraphIncoming[thisNode] || new Set();\n        immutableDerivedGraphIncoming[thisNode] = immutableDerivedGraphIncoming[thisNode] || new Set();\n        ids.forEach(id => {\n            const thisId = lookupArray[id];\n            if (thisId === thisNode) return;\n\n            if (!derivedGraphIncoming[thisId]) {\n                derivedGraphIncoming[thisId] = new Set();\n                immutableDerivedGraphIncoming[thisId] = new Set();\n            }\n\n            const derivedGraphAccessor = derivedGraphIncoming[thisId];\n            derivedGraphAccessor.add(thisNode);\n            immutableDerivedGraphIncoming[thisId].add(thisNode);\n        });\n    });\n\n    const myTinyQueue = new TinyQueue(Array.from(new Set([...Object.keys(derivedGraphOutgoing), ...Object.keys(derivedGraphIncoming)])), (a, b) => {\n        return (derivedGraphIncoming[a] || []).size - (derivedGraphIncoming[b] || []).size;\n    });\n\n    const globalProvideMap = {};\n\n    const reverseTraversalStack = [];\n\n    while (myTinyQueue.size()) {\n        const node = myTinyQueue.pop();\n\n        reverseTraversalStack.push(node);\n\n        const thisNodeInflated = superNodeGraphLookupInflated[node];\n        const outgoing = Array.from(derivedGraphOutgoing[node] || new Set());\n        const outgoingInflated = outgoing.map(item => superNodeGraphLookupInflated[item]);\n\n        const propagateNodeToEdges = (nodeGroupSource, nodeGroupTarget, origin, targets) => {\n            //gather this node\n            const combinedProvides = [];\n            const combinedProvidesSource = new Set();\n            nodeGroupSource.forEach(node => {\n                if (node.machine.name !== 'Container' && node.machine.name !== 'Logistic') {\n                    combinedProvides.push({item: node.data.recipe, source: origin});\n                } else {\n                    node.childProvides = globalProvideMap[origin] || [];\n                    node.childProvides.forEach(provide => {\n                        if (!combinedProvidesSource.has(provide.source)) {\n                            combinedProvides.push(provide);\n                            combinedProvidesSource.add(provide.source);\n                        }\n                    });\n                    node.allowedIn = node.childProvides.map(elem => elem.item.item.id);\n                    node.allowedOut = node.childProvides.map(elem => elem.item.item.id);\n                    node.containedItems = node.childProvides.map(elem => elem.item.item);\n                }\n            });\n\n            targets.forEach(target => {\n                if (!globalProvideMap[target]) {\n                    globalProvideMap[target] = [];\n                }\n\n                combinedProvides.forEach(provide => {\n                    if (!new Set(globalProvideMap[target].map(elem => elem.source)).has(provide.source)) {\n                        globalProvideMap[target].push(provide);\n                    }\n                });\n            });\n        };\n\n        propagateNodeToEdges(thisNodeInflated, outgoingInflated, node, outgoing);\n\n        Object.keys(derivedGraphIncoming).forEach(key => {\n            const accessor = derivedGraphIncoming[key];\n            accessor.delete(parseInt(node, 10));\n        });\n\n        myTinyQueue.reheapify();\n    }\n\n    while (reverseTraversalStack.length) {\n        const node = reverseTraversalStack.pop();\n\n        const thisNodeInflated = superNodeGraphLookupInflated[node];\n\n        const outgoing = Array.from(derivedGraphOutgoing[node] || new Set());\n        const outgoingInflated = outgoing.map(item => superNodeGraphLookupInflated[item]);\n\n        const propagateNodeToEdgesReversed = (nodeGroupSource, nodeGroupTarget, origin, targets) => {\n\n            const allowed = new Set();\n            nodeGroupTarget.forEach(nodeGroup => nodeGroup.forEach(node => {\n                node.allowedIn.forEach(item => allowed.add(item))\n            }));\n\n            nodeGroupSource.forEach(node => {\n                if (node.machine.name !== 'Container' && node.machine.name !== 'Logistic') {\n                    // NoOp\n                } else {\n                    if (node.allowedIn.length === 0 && node.allowedOut.length === 0) {\n                        node.allowedIn = Array.from(allowed);\n                        node.allowedOut = Array.from(allowed);\n                    }\n                }\n            });\n        };\n        propagateNodeToEdgesReversed(thisNodeInflated, outgoingInflated, node, outgoing);\n    }\n};\n\nexport const addPath = function (passedThis, source, target) {\n\n    const sourceChecker = (source.allowedIn || []).length > 0 || (source.allowedOut || []).length > 0;\n    const targetChecker = (target.allowedIn || []).length > 0 || (target.allowedOut || []).length > 0;\n    const specialSource = ['Container', 'Logistic'].includes(source.machine.name);\n    const specialTarget = ['Container', 'Logistic'].includes(target.machine.name);\n    const mergerTarget = ['Logistic'].includes(source.machine.name) && ['Merger'].includes(source.instance.name);\n    const mergerSource = ['Logistic'].includes(target.machine.name) && ['Merger'].includes(target.instance.name);\n    const targetSlotsUsed = target.instance.input_slots === (passedThis.nodeIn[target.id] ? passedThis.nodeIn[target.id].length : 0);\n    const sourceSlotsUsed = source.instance.output_slots === (passedThis.nodeOut[source.id] ? passedThis.nodeOut[source.id].length : 0);\n\n    console.error(sourceChecker, targetChecker, specialSource, specialTarget, targetSlotsUsed);\n\n    const path_type = passedThis.props.parentAccessor.state.path_type.path_type;\n    path_type.sort((path1, path2) => path1.rank - path2.rank);\n    const upgrades = path_type.filter(path => path.rank >= 0);\n\n    // TODO: Set the correct instance by default\n    const instance = upgrades[0];\n\n    const newEdge = {source: source, target: target, instance, upgradeTypes: upgrades};\n\n    if (((specialSource && !sourceChecker) || (specialTarget && !targetChecker)) || (mergerTarget || mergerSource)) {\n        console.log(\"Special Handling\");\n        // special handling if the source is a container\n\n        // check if there are open slots\n        const outgoing = source.id;\n        const incoming = target.id;\n\n        const usedOut = (passedThis.nodeOut[outgoing] ? passedThis.nodeOut[outgoing].length : 0);\n        const usedIn = (passedThis.nodeIn[incoming] ? passedThis.nodeIn[incoming].length : 0);\n\n        // return early if we can't do anything with this node,\n        if (usedOut >= source.instance.output_slots || usedIn >= target.instance.input_slots) {\n            passedThis.updateGraphHelper();\n            return;\n        }\n\n        const filterResult = passedThis.graphData.links.filter(function (d) {\n            if (d.source.id === newEdge.target.id && d.target.id === newEdge.source.id) {\n                removePath(d, passedThis);\n            }\n            return (d.source.id === newEdge.source.id && d.target.id === newEdge.target.id) || newEdge.source.id === newEdge.target.id;\n        });\n\n        if (filterResult.length === 0) {\n            passedThis.graphData.links.push(newEdge);\n        }\n        passedThis.updateGraphHelper();\n    } else {\n        //checked\n\n        // Check if there are items you can shove in\n        const sharedItems = target.allowedIn.filter(value => source.allowedOut.includes(value));\n\n        // check if there are open slots\n        const outgoing = source.id;\n        const incoming = target.id;\n\n        const usedOut = (passedThis.nodeOut[outgoing] ? passedThis.nodeOut[outgoing].length : 0);\n        const usedIn = (passedThis.nodeIn[incoming] ? passedThis.nodeIn[incoming].length : 0);\n\n        // return early if we can't do anything with this node.\n        if (usedOut >= source.instance.output_slots || usedIn >= target.instance.input_slots ||\n            sharedItems.length <= 0) {\n            passedThis.updateGraphHelper();\n            return;\n        }\n\n        const filterResult = passedThis.graphData.links.filter(function (d) {\n            if (d.source.id === newEdge.target.id && d.target.id === newEdge.source.id) {\n                removePath(d, passedThis);\n            }\n            return (d.source.id === newEdge.source.id && d.target.id === newEdge.target.id) || newEdge.source.id === newEdge.target.id;\n        });\n\n        if (filterResult.length === 0) {\n            passedThis.graphData.links.push(newEdge);\n        }\n        passedThis.updateGraphHelper();\n    }\n};\n\nexport const pathMouseClick = function (d, t) {\n    d3.event.stopImmediatePropagation();\n    const parentElement = d3.select(this.parentElement);\n    // const styledLine = parentElement.select('.' + constants.lineStylingPathClass);\n    // const styledMarker = parentElement.select('.' + constants.lineStylingArrowClass);\n\n    if (t.state && t.state.selectedPath && t.state.selectedPath === d) {\n        // set the new selected one to this one\n        deselect_path_and_nodes.call(this, t);\n    } else {\n        deselect_path_and_nodes.call(this, t);\n        d3.selectAll('.' + constants.lineStylingFullClass).attr('display', 'none');\n        t.setState({selectedPath: d});\n        const both = parentElement.selectAll('.' + constants.lineStylingFullClass);\n        both.attr('display', 'inherit');\n    }\n};\n\nexport const removePath = function (d, t) {\n    if (t.graphData.links.indexOf(d) === -1) {\n        throw new Error('d not found in graph links: ' + JSON.stringify(d));\n    }\n    const outgoing = d.source.id;\n    const incoming = d.target.id;\n    spliceUtil(t.nodeOut[outgoing], d.target);\n    spliceUtil(t.nodeIn[incoming], d.source);\n    spliceUtil(t.graphData.links, d);\n};\n\n\nexport const calculatePathTooltipPosition = function (link_label, d3) {\n    link_label.attr('x', function (d) {\n        const node = d3.select(link_label.node().parentElement).selectAll('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x - (d3.select(this).attr('width') / 2);\n    }).attr('y', function (d) {\n        return d.point.y - (d3.select(this).attr('height') / 2);\n    });\n};\n\n\nexport const calculateLabelPositions = function (link_label) {\n    const text = link_label.selectAll('.' + constants.nodeVersionTextClass);\n    text.attr('x', function (d) {\n        const node = d3.select(d3.select(this).node().parentElement.parentElement).select('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x;\n    }).attr('y', function (d) {\n        return d.point.y;\n    });\n\n    const image = link_label.selectAll('.' + constants.lineLimitedThroughputClass);\n    image.attr('x', function (d) {\n        const node = d3.select(d3.select(this).node().parentElement.parentElement).select('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x - 44;\n    }).attr('y', function (d) {\n        return d.point.y + d.tempIndex[d3.select(this).attr('data-key')] * 20 + 15;\n    });\n\n    const secondarytext = link_label.selectAll('.' + constants.lineLimitedThroughputText);\n    secondarytext.attr('x', function (d) {\n        const node = d3.select(d3.select(this).node().parentElement.parentElement).select('path').node();\n        const pathLength = node.getTotalLength();\n        d.point = node.getPointAtLength(pathLength / 2);\n        return d.point.x - 20;\n    }).attr('y', function (d) {\n        return d.point.y + d.tempIndex[d3.select(this).attr('data-key')] * 20 + 24;\n    });\n\n\n};\n\n\nexport const insertEdgeLabel = function (elem) {\n\n    // Perhaps not needed!\n    const link_label = elem.append('g').attr('class', 'textLabel');\n\n\n    updateNodeTierExternal(link_label, 0, 0);\n\n    const link_label2 = elem.append('g').attr('class', 'resourceThroughput');\n\n    d3.selectAll('.' + constants.lineLimitedThroughputText).remove();\n    d3.selectAll('.' + constants.lineLimitedThroughputClass).remove();\n\n    d3.selectAll('.resourceThroughput').each(function (d) {\n\n        const edgeThis = d3.select(this);\n\n        let index = 0;\n        d.tempIndex = {};\n        Object.keys(d.itemThroughPut || {}).forEach((key) => {\n            const item = d.itemThroughPut[key];\n\n            if (!d.itemIconLookup) return;\n\n            // d.tempIndex\n            d.tempIndex[key] = index++;\n\n            let definedColor = 'LightCoral';\n\n            if (d.forceOverwritable) {\n                definedColor = 'LightBlue';\n            }\n\n            if (item.actual <= item.max) {\n                definedColor = 'white';\n            }\n\n            const icon = d.itemIconLookup[key];\n\n            edgeThis.append('svg:image')\n                .classed(constants.lineLimitedThroughputClass, true)\n                .attr('xlink:href', function (d) {\n                    return icon;\n                })\n                .attr('data-key', key)\n                .attr('height', 20)\n                .attr('width', 20);\n\n\n            edgeThis.append('text')\n                .attr('fill', 'black')\n                .attr('class', 'overclockFont')\n                .classed(constants.lineLimitedThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('stroke', 'black')\n                .attr('stroke-width', 4)\n                .attr('font-size', 20)\n                .attr('data-key', key)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n\n            edgeThis.append('text').attr('fill', definedColor)\n                .attr('class', 'overclockFont')\n                .classed(constants.lineLimitedThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('font-size', 20)\n                .attr('data-key', key)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n        });\n    });\n};","import constants from './constants';\nimport {addPath, removePath} from './edgeActions';\nimport * as d3 from 'd3';\nimport {deselect_path_and_nodes} from './graphActions';\nimport {spliceUtil} from './util';\n\nimport {parseSvg} from 'd3-interpolate/src/transform/parse';\n\nexport const add_node = (d, t) => {\n\n    const zoomData = parseSvg(d3.select('#svgGroup').attr('transform'));\n    console.error(zoomData);\n\n    var viewCenter = [];\n\n\n    const bodyEl = document.getElementById('mainRender');\n\n    const width = bodyEl.clientWidth;\n    const height = bodyEl.clientHeight;\n\n    viewCenter[0] = (0.5) * (width / zoomData.scaleX) - (zoomData.translateX / zoomData.scaleX);\n    viewCenter[1] = (0.5) * (height / zoomData.scaleY) - (zoomData.translateY / zoomData.scaleY);\n\n    d.id = d.id || t.id++;\n    d.x = d.x || 0;\n    d.y = d.y || 0;\n\n    d.fx = viewCenter[0];\n    d.fy = viewCenter[1];\n    console.error(viewCenter);\n\n    d.overclock = d.overclock || 100;\n    console.log(JSON.stringify(d));\n    t.graphData.nodes.push(d);\n    t.updateGraphHelper();\n};\n\nexport const delete_node = function (d, t) {\n    // unselect currently selected node\n    const selectedNode = t.state.selectedNode;\n    remove_select_from_nodes(t);\n\n    const toSplice = t.graphData.links.filter(function (l) {\n        return l.source.id === selectedNode.id || l.target.id === selectedNode.id;\n    });\n\n    toSplice.map(function (l) {\n        removePath(l, t);\n    });\n    spliceUtil(t.graphData.nodes, selectedNode);\n};\n\n\nexport const node_clicked = function (d, t) {\n    // unselect currently selected node\n    const previouslySelected = t.state.selectedNode;\n    remove_select_from_nodes(t);\n    if (previouslySelected !== d) {\n        deselect_path_and_nodes(t);\n        t.setState({selectedNode: d});\n\n        d3.select(this).classed(constants.graphNodeHoverClass, true)\n            .classed(constants.graphNodeGrabbedClass, false)\n            .classed(constants.selectedNodeClass, true);\n    }\n};\n\nexport const remove_select_from_nodes = function (graphSvg) {\n    d3.select('.' + constants.selectedNodeClass)\n        .classed(constants.selectedNodeClass, false)\n        .classed(constants.graphNodeGrabbedClass, false);\n    graphSvg.setState({selectedNode: null});\n};\n\n\nexport const node_mouse_over = function (d, graphSvg) {\n\n    graphSvg.setState({mouseOverNode: d3.select(this).datum()});\n    d3.select(this).classed(constants.graphNodeHoverClass, true);\n};\n\nexport const node_mouse_out = function (d, graphSvg) {\n    graphSvg.setState({mouseOverNode: null});\n    d3.select(this).classed(constants.graphNodeHoverClass, false);\n};\n\nexport const node_mouse_down = function (d, graphSvg) {\n    if (d3.event.shiftKey) {\n        graphSvg.setState({shiftHeld: true, sourceId: d3.select(this).datum().id});\n    } else {\n        d3.select(this).classed(constants.graphNodeGrabbedClass, true);\n    }\n};\n\nexport const node_mouse_up = function (d, graphSvg) {\n    // Only triggered if it's not a drag\n    if (graphSvg.state && graphSvg.state.shiftHeld) {\n    } else {\n        //probably can't get to this case\n    }\n    graphSvg.setState({shiftHeld: false});\n};\n\n\nconst overClockCalculation = (d, percentage_metric, offset, endOffsetRaw) => {\n    const endOffset = endOffsetRaw + offset;\n    const percentage = d[percentage_metric] * 100 || 0;\n    const arc = d3.arc()\n        .innerRadius(50)\n        .outerRadius(50);\n\n    const m = (endOffset - offset) / 100;\n    const b = offset;\n\n    const start = b / 180 * Math.PI;\n    const end = (m * percentage + b) / 180 * Math.PI;\n    return arc({startAngle: start, endAngle: end});\n};\n\n\nexport const addEfficiencyArc = (parent, percentage_metric, offset, endOffset) => {\n    parent.append('path').filter(function (d) {\n        return !['Container', 'Logistic'].includes(d.machine.name)\n    })\n        .attr('class', constants.overclockedArcClass)\n        .attr('fill', 'none')\n        .attr('stroke-width', 8);\n\n    editEfficiencyArc(percentage_metric, offset, endOffset);\n};\n\nexport const editEfficiencyArc = (percentage_metric, offset, endOffset) => {\n    d3.selectAll('.' + constants.overclockedArcClass)\n        .attr('d', function (d) {\n            return overClockCalculation(d, percentage_metric, offset, endOffset);\n        })\n        .attr('stroke', function (d) {\n            const p = d[percentage_metric] || 0;\n            const r1 = 255;\n            const g1 = 0;\n            const b1 = 0;\n\n            const r2 = 50;\n            const g2 = 205;\n            const b2 = 50;\n            const r = Math.round((1.0 - p) * r1 + p * r2 + 0.5);\n            const g = Math.round((1.0 - p) * g1 + p * g2 + 0.5);\n            const b = Math.round((1.0 - p) * b1 + p * b2 + 0.5);\n\n            return 'rgb(' + r + ',' + g + ',' + b + ')';\n        });\n};\n\nexport const addNodeImage = (parent) => {\n    parent.append('svg:image')\n        .attr('class', function (d) {\n            if (d.machine && d.machine.icon) {\n                return 'machine-icon';\n            }\n            return 'dev-icon';\n        })\n        .attr('xlink:href', function (d) {\n            if (d.instance && d.instance.icon) {\n                return d.instance.icon;\n            }\n            if (d.machine && d.machine.icon) {\n                return d.machine.icon;\n            }\n            return 'https://raw.githubusercontent.com/rhocode/rhocode.github.io/master/img/satoolsfactory_icons/Smelter.png';\n        })\n        .attr('x', function (d) {\n            return -50;\n        })\n        .attr('y', function (d) {\n            return -50;\n        })\n        .attr('height', 100)\n        .attr('width', 100);\n};\n\nexport const wheelZoomCalculation = function (d) {\n    d3.event.stopImmediatePropagation();\n\n    let roughEstimate = -1;\n\n    if (d3.event.deltaY < 0) {\n        roughEstimate = 1;\n    }\n\n    d.overclock = (d.overclock + (roughEstimate));\n    if (d.overclock < 0) {\n        d.overclock = 251 + d.overclock;\n    } else if (d.overclock > 250) {\n        d.overclock = d.overclock - 251;\n    }\n    updateOverclock(d3.select(this).select('.' + constants.overclockedTextClass));\n};\n\nexport const updateOverclock = function (textElement) {\n    textElement.text(function (d) {\n        return d.overclock;\n    });\n};\n\nexport const updateNodeTier = function (textElement) {\n    textElement.text(function (d) {\n        return d.instance.machine_version.representation;\n        // + (d.id ? '(' + d.id + ')' : '' );\n    });\n};\n\nexport const updateComponents = function (elementsToUpdate) {\n    const t = this;\n    const itemAccessor = t.props.parentAccessor.state.recipe.item;\n    elementsToUpdate.each(function (d) {\n        const allowedInRemaining = d.allowedIn.slice();\n        const provided = t.nodeIn[d.id] || [];\n        const actualIn = provided.map(node => node.allowedOut).flat(1);\n\n        actualIn.forEach(id => {\n            spliceUtil(allowedInRemaining, id);\n        });\n\n        const element = d3.select(this);\n\n        element.selectAll('.' + constants.nodeRequirementsSubIconClass).remove();\n\n        if (allowedInRemaining.length > 0) {\n            element.append('text').attr('class', 'fas fa-arrow-left')\n                .classed(constants.nodeRequirementsSubIconClass, true)\n                .attr('x', function (d) {\n                    return 56;\n                })\n                .attr('y', function (d) {\n                    return -28;\n                })\n                .attr('height', 25)\n                .attr('width', 25);\n            const fetchRemainingIn = allowedInRemaining.map(item =>\n                itemAccessor.filter(findItem => item === findItem.id)[0]\n            );\n\n            if (fetchRemainingIn.length > 1)\n                console.log(fetchRemainingIn);\n\n            const outputtedItems = new Set();\n\n            let index = 0;\n            fetchRemainingIn.forEach((remaining) => {\n                if (outputtedItems.has(remaining.icon)) {\n                    return;\n                }\n                outputtedItems.add(remaining.icon);\n                element.append('svg:image')\n                    .classed(constants.nodeRequirementsSubIconClass, true)\n                    .on('mousedown', function (d) {\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .on('click', function (d) {\n                        const findSuitableSource = t.graphData.nodes.filter(node => node.id !== d.id && node.open_out_slot > 0\n                            && node.allowedOut.includes(remaining.id));\n                        const thisNode = t.graphData.nodes.filter(node => node.id === d.id);\n                        if (findSuitableSource.length > 0) {\n                            addPath(t, findSuitableSource[0], thisNode[0]);\n                        }\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .attr('xlink:href', function (d) {\n                        return remaining.icon;\n                    })\n                    .attr('x', function (d) {\n                        return 58 + 28 + (28 * index++);\n                    })\n                    .attr('y', function (d) {\n                        return -28;\n                    })\n                    .attr('height', 25)\n                    .attr('width', 25);\n            });\n        }\n        const allowedOutRemaining = d.allowedOut.slice();\n        const provides = t.nodeOut[d.id] || [];\n        const actualOut = provides.map(node => node.allowedIn).flat(1);\n        actualOut.forEach(id => {\n            spliceUtil(allowedOutRemaining, id);\n        });\n\n        if (allowedOutRemaining.length > 0) {\n            element.append('text').attr('class', 'fas fa-arrow-left')\n                .classed(constants.nodeRequirementsSubIconClass, true)\n                .attr('x', function (d) {\n                    return -58 - 25;\n                })\n                .attr('y', function (d) {\n                    return 3;\n                })\n                .attr('height', 25)\n                .attr('width', 25);\n            const fetchRemainingOut = allowedOutRemaining.map(item =>\n                itemAccessor.filter(findItem => item === findItem.id)[0]\n            );\n\n            const outputtedItemsIn = new Set();\n\n            let index = 0;\n            fetchRemainingOut.forEach((remaining) => {\n                if (outputtedItemsIn.has(remaining.icon)) {\n                    return;\n                }\n                outputtedItemsIn.add(remaining.icon);\n                element.append('svg:image')\n                    .classed(constants.nodeRequirementsSubIconClass, true)\n                    .on('mousedown', function (d) {\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .on('click', function (d) {\n                        const findSuitableTarget = t.graphData.nodes.filter(node => node.id !== d.id && node.open_in_slots > 0\n                            && node.allowedIn.includes(remaining.id));\n                        const thisNode = t.graphData.nodes.filter(node => node.id === d.id);\n                        if (findSuitableTarget.length > 0) {\n                            addPath(t, thisNode[0], findSuitableTarget[0]);\n                        }\n                        d3.event.stopImmediatePropagation();\n                    })\n                    .attr('xlink:href', function (d) {\n                        return remaining.icon;\n                    })\n                    .attr('x', function (d) {\n                        return -56 - 25 - 28 - (28 * index++);\n                    })\n                    .attr('y', function (d) {\n                        return 3;\n                    })\n                    .attr('height', 25)\n                    .attr('width', 25);\n            });\n        }\n    });\n};\n\nexport const forceUpdateComponentLabel = function () {\n    updateComponents.call(this, d3.selectAll('.' + constants.nodeRequirementsIconClass));\n};\n\n\nexport const insertComponents = function (parentElement) {\n\n    const el1 = parentElement.append('g').classed(constants.nodeRequirementsIconClass, true);\n\n    el1.each(function (d) {\n        if (d.machine && ['Container', 'Logistic'].includes(d.machine.name)) {\n            // save this for later...\n        } else {\n            d3.select(this).append('svg:image')\n                .classed(constants.nodeProducesClass, true)\n                .attr('xlink:href', function (d) {\n                    return d.data.recipe.item.icon;\n                })\n                .attr('x', function (d) {\n                    return -55;\n                })\n                .attr('y', function (d) {\n                    return 18;\n                })\n                .attr('height', 40)\n                .attr('width', 40);\n        }\n    });\n\n    d3.selectAll('.' + constants.nodeRequirementsIconClass).each(function (d) {\n        if (d.machine && ['Container', 'Logistic'].includes(d.machine.name)) {\n            const nodeThis = d3.select(this);\n            nodeThis.selectAll('.' + constants.nodeProducesClass).remove();\n            const outputtedItems = new Set();\n            let i = 0;\n            (d.containedItems || []).forEach((containedItem, index) => {\n                if (outputtedItems.has(containedItem.icon)) {\n                    return;\n                }\n                outputtedItems.add(containedItem.icon);\n                nodeThis.append('svg:image')\n                    .classed(constants.nodeProducesClass, true)\n                    .attr('xlink:href', function (d) {\n                        return d.containedItems[index].icon;\n                    })\n                    .attr('x', function (d) {\n                        return -55;\n                    })\n                    .attr('y', function (d) {\n                        return 18 + (30 * i++);\n                    })\n                    .attr('height', 40)\n                    .attr('width', 40);\n            });\n        }\n    });\n\n\n    parentElement.append('g').classed(constants.nodeSurplusIconClass, true);\n\n    d3.selectAll('.' + constants.nodeSurplusIconClass).each(function (d) {\n        const nodeThis = d3.select(this);\n        nodeThis.selectAll('.' + constants.nodeProducesPerMinText).remove();\n\n        nodeThis.append('text')\n            .attr('fill', 'white')\n            .attr('class', 'overclockFont')\n            .classed(constants.nodeProducesPerMinText, true)\n            .style('text-anchor', 'end')\n            .style('dominant-baseline', 'central')\n            .attr('stroke', 'black')\n            .attr('stroke-width', 4)\n            .attr('x', -5).attr('y', -37)\n            .attr('font-size', 30)\n            .text(function (d) {\n                let combinedSum = 0;\n                Object.keys(d.itemsPerMinute || {}).forEach(item => {\n                    combinedSum += d.itemsPerMinute[item];\n                });\n\n                return ((Math.round(combinedSum * 100) / 100) || 0) + '/m';\n            });\n\n\n        nodeThis.append('text').attr('fill', 'white')\n            .attr('class', 'overclockFont')\n            .classed(constants.nodeProducesPerMinText, true)\n            .style('text-anchor', 'end')\n            .style('dominant-baseline', 'central')\n            .attr('x', -5).attr('y', -37)\n            .attr('font-size', 30)\n            .text(function (d) {\n                let combinedSum = 0;\n                Object.keys(d.itemsPerMinute || {}).forEach(item => {\n                    combinedSum += d.itemsPerMinute[item];\n                });\n\n                return ((Math.round(combinedSum * 100) / 100) || 0) + '/m';\n            });\n    });\n\n    const el3 = parentElement.append('g').classed(constants.nodeLimitingThroughputClass, true);\n\n\n    d3.selectAll('.' + constants.nodeLimitingThroughputClass).each(function (d) {\n        const nodeThis = d3.select(this);\n        nodeThis.selectAll('.' + constants.nodeLimitingThroughputText).remove();\n\n        Object.keys(d.itemThroughPut || {}).forEach((key, index) => {\n            const item = d.itemThroughPut[key];\n\n            if (!d.itemIconLookup) return;\n\n            let definedColor = 'LightCoral';\n\n            if (item.actual === item.max) {\n                definedColor = 'white';\n            } else if (item.actual < item.max) {\n                definedColor = 'gold';\n            }\n\n            const icon = d.itemIconLookup[key];\n\n            nodeThis.append('svg:image')\n                .classed(constants.nodeLimitingThroughputText, true)\n                .attr('xlink:href', function (d) {\n                    return icon;\n                })\n                .attr('x', -49 + 35).attr('y', 59 + (index * 20))\n                .attr('height', 20)\n                .attr('width', 20);\n\n            nodeThis.append('text')\n                .attr('fill', 'black')\n                .attr('class', 'overclockFont')\n                .classed(constants.nodeLimitingThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('stroke', 'black')\n                .attr('stroke-width', 4)\n                .attr('x', -25 + 35).attr('y', 68 + (index * 20))\n                .attr('font-size', 20)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n\n\n            nodeThis.append('text').attr('fill', definedColor)\n                .attr('class', 'overclockFont')\n                .classed(constants.nodeLimitingThroughputText, true)\n                .style('text-anchor', 'start')\n                .style('dominant-baseline', 'central')\n                .attr('x', -25 + 35).attr('y', 68 + (index * 20))\n                .attr('font-size', 20)\n                .text(function (d) {\n                    return Math.round(item.actual * 100) / 100 + '/' + Math.round(item.max * 100) / 100;\n                });\n\n        });\n\n    });\n\n    forceUpdateComponentLabel.call(this);\n};\n\nexport const updateNodeTierExternal = function (el, x = 35, y = 35) {\n    el.selectAll('.' + constants.nodeVersionTextClass).remove();\n\n    const backgroundText = el.append('text')\n        .attr('fill', 'white')\n        .attr('class', 'overclockFont')\n        .classed(constants.nodeVersionTextClass, true)\n        .style('text-anchor', 'middle')\n        .style('dominant-baseline', 'central')\n        .attr('stroke', 'black')\n        .attr('stroke-width', 4)\n        .attr('x', x).attr('y', y)\n        .attr('font-size', 30);\n\n    updateNodeTier(backgroundText);\n\n    const tspan = el.append('text').attr('fill', 'white')\n        .attr('class', 'overclockFont')\n        .classed(constants.nodeVersionTextClass, true)\n        .style('text-anchor', 'middle')\n        .style('dominant-baseline', 'central')\n        .attr('x', x).attr('y', y)\n        .attr('font-size', 30);\n\n    updateNodeTier(tspan);\n\n\n};\n\nexport const insertNodeTier = (gEl) => {\n    // const el = gEl.append('g').attr('text-anchor', 'middle').attr('dy', '-' + (nwords - 1) * 7.5);\n    const el = gEl.append('g').attr('id', function (d) {\n        return 'node-level-accessor-' + d.id;\n    });\n    updateNodeTierExternal(el);\n};\n\nexport const insertNodeOverclock = (gEl) => {\n    // const el = gEl.append('g').attr('text-anchor', 'middle').attr('dy', '-' + (nwords - 1) * 7.5);\n    const el = gEl\n        .filter(function (d) {\n            return !['Container', 'Logistic'].includes(d.machine.name)\n        })\n        .append('g').attr('text-anchor', 'middle').attr('dy', 0);\n    el.append('circle').attr('r', 17).attr('fill', '#FFFFFF').attr('cx', 32).attr('cy', -38).attr('stroke', 'black').attr('stroke-width', 1);\n\n    const tspan = el.append('text').attr('fill', 'black')\n        .attr('class', 'overclockFont')\n        .classed(constants.overclockedTextClass, true)\n        .attr('x', 32).attr('dy', -32)\n        .attr('font-size', 20);\n\n    updateOverclock(tspan);\n};","import constants from './constants';\nimport {delete_node} from './nodeActions';\nimport {removePath} from './edgeActions';\n\nimport * as d3 from 'd3';\n\nexport const svgKeyUp = function (d, t) {\n    t.setState({pressedKey: null});\n};\n\nexport const svgKeyDown = function (d, t) {\n    // make sure repeated keyd presses don't register for each keydown\n    if (document.activeElement && document.activeElement.nodeName === 'INPUT') return;\n    if (t.state.pressedKey) return;\n    t.setState({pressedKey: d3.event.keyCode});\n    // this.lastKeyDown = d3.event.keyCode;\n    // const selectedNode = this.selectedNode,\n    //   selectedEdge = this.selectedEdge;\n    //\n    switch (d3.event.keyCode) {\n        case constants.BACKSPACE_KEY:\n        case constants.DELETE_KEY:\n            if (t.state.selectedPath) {\n                removePath.call(this, t.state.selectedPath, t);\n                t.setState({selectedPath: null});\n                t.updateGraphHelper();\n            } else if (t.state.selectedNode) {\n                delete_node.call(this, d, t);\n                t.setState({selectedNode: null});\n                t.updateGraphHelper();\n            }\n            break;\n    }\n};","export const appendMarkerAttributes = (marker) => {\n    return marker.attr('viewBox', '0 -5 10 10')\n        .attr('markerWidth', 10)\n        .attr('markerHeight', 10)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5');\n};","import React, {Component} from 'react';\nimport {svgKeyDown, svgKeyUp} from './keyboardEvents';\nimport {analyzeGraph, deselect_path_and_nodes, initSimulation, updateGraph, zoom_actions} from './graphActions';\nimport {appendMarkerAttributes} from './markerActions';\n\nimport * as d3 from 'd3';\nimport {add_node} from './nodeActions';\nimport {parse, stringify} from 'flatted/esm';\nimport pako from 'pako';\nimport Base64 from 'Base64';\nimport {saveHash} from \"./util\";\n\nconst styles = theme => ({\n    tooltip: {\n        position: 'absolute',\n        textAlign: 'center',\n        padding: 2,\n        font: '12px sans-serif',\n        background: 'lightsteelblue',\n        border: 0,\n        borderRadius: 8,\n        pointerEvents: 'none',\n        zIndex: 1202\n    }\n});\n\nclass GraphSvg extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            snapToGrid: false\n        };\n    }\n\n    addNode(nodeData) {\n        add_node(nodeData, this);\n\n        console.log(JSON.stringify(nodeData));\n    }\n\n    resetCamera() {\n        this.inputSvg.transition()\n            .duration(750)\n            .call(this.zoom_handler.transform, d3.zoomIdentity);\n\n        this.updateGraphHelper();\n    }\n\n    jiggle() {\n        this.graphData.nodes.forEach(node => {\n            node.x = 0;\n            node.y = 0;\n        });\n\n        this.updateGraphHelper();\n    }\n\n    fixNodes() {\n        this.graphData.nodes.forEach(node => {\n            node.fx = node.x;\n            node.fy = node.y;\n        });\n\n        this.updateGraphHelper();\n    }\n\n    unfixNodes() {\n        this.graphData.nodes.forEach(node => {\n            node.fx = null;\n            node.fy = null;\n            node.vx = 0;\n            node.vy = 0;\n        });\n\n        this.updateGraphHelper();\n    }\n\n    createGraph(inputSvg, nodes = [], links = [], data = {}) {\n        this.graphData = {\n            nodes: nodes,\n            links: links\n        };\n\n        this.id = Math.max(...(this.graphData.nodes.map(elem => elem.id))) + 1;\n        if (this.id === Number.NEGATIVE_INFINITY) {\n            this.id = 0;\n        }\n        this.inputSvg = inputSvg;\n\n        //add encompassing group for the zoom\n        this.svgGroup = inputSvg.append('g')\n            .attr('class', 'objects')\n            .attr('id', 'svgGroup');\n\n        const graphObjects = this.svgGroup;\n\n        const t = this;\n\n        inputSvg.on('click', function (d) {\n            deselect_path_and_nodes.call(this, t);\n        });\n\n        d3.select(window).on('keydown', function (d) {\n            svgKeyDown.call(this, d, t);\n        }).on('keyup', function (d) {\n            svgKeyUp.call(this, d, t);\n        });\n\n        //add zoom capabilities\n        this.zoom_handler = d3.zoom()\n            .on('zoom', () => zoom_actions(graphObjects))\n            .scaleExtent([0.1, 6]);\n        this.zoom_handler(inputSvg);\n        inputSvg.on('dblclick.zoom', null);\n\n        //Create definitions for the arrow markers showing relationship directions\n        const defs = graphObjects.append('defs');\n        appendMarkerAttributes(defs.append('svg:marker')\n            .attr('id', 'default-path-arrow')\n            .attr('refX', 35));\n\n        appendMarkerAttributes(defs.append('svg:marker')\n            .attr('id', 'highlight-path-arrow-orange')\n            .attr('fill', 'orange')\n            .attr('refX', 24));\n\n        appendMarkerAttributes(defs.append('svg:marker')\n            .attr('id', 'dragged-end-arrow')\n            .attr('refX', 7));\n\n        const filter = defs.append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', '130%')\n            .attr('width', '130%')\n            .attr('filterUnits', 'userSpaceOnUse');\n\n        filter.append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 5)\n            .attr('result', 'blur');\n\n        filter.append('feOffset')\n            .attr('in', 'blur')\n            .attr('result', 'offsetBlur');\n\n        filter.append('feFlood')\n            .attr('in', 'offsetBlur')\n            .attr('flood-color', 'white')\n            .attr('flood-opacity', '1')\n            .attr('result', 'offsetColor');\n\n        filter.append('feComposite')\n            .attr('in', 'offsetColor')\n            .attr('in2', 'offsetBlur')\n            .attr('operator', 'in')\n            .attr('result', 'offsetBlur');\n\n        const feMerge = filter.append('feMerge');\n\n        feMerge.append('feMergeNode')\n            .attr('in', 'offsetBlur');\n        feMerge.append('feMergeNode')\n            .attr('in', 'SourceGraphic');\n\n\n        //The dragged line\n        this.dragLine = graphObjects.append('g').append('svg:path')\n            .attr('class', 'link dragline line-object hidden')\n            .attr('d', 'M0,0L0,0')\n            .attr('stroke', function (d) {\n                return d3.color('#000000');\n            })\n            .style('marker-end', 'url(#dragged-end-arrow)');\n\n        const graphLinksGroup = graphObjects.append('g') //graphLinksData\n            .attr('class', 'links-g-group');\n\n        const graphNodesGroup = graphObjects\n            .append('g')\n            .attr('class', 'nodes-g-group');\n\n        let simulation = initSimulation();\n\n        this.graphNodesGroup = graphNodesGroup;\n        this.graphLinksGroup = graphLinksGroup;\n        this.simulation = simulation;\n        this.updateGraphHelper();\n    }\n\n    updateGraphHelper() {\n        updateGraph.call(this, this.simulation, this.graphNodesGroup, this.graphLinksGroup);\n    }\n\n    clearGraphDataRaw() {\n        const parent = d3.select(d3.select('#mainRender').node().parentElement);\n        d3.select('#mainRender').selectAll('*').remove();\n        d3.select('#mainRender').remove();\n\n        return parent.append('svg').attr('id', 'mainRender');\n    }\n\n    clearGraphData(t) {\n        deselect_path_and_nodes.call(this, t);\n        const svg = this.clearGraphDataRaw();\n        this.createGraph(svg);\n    }\n\n    loadGraphData(data) {\n        const svg = this.clearGraphDataRaw();\n        //nodes, links, data\n        this.createGraph(svg, data.graphData.nodes, data.graphData.links);\n    }\n\n    compressGraphData() {\n        const compressedData = {\n            satisgraphtory: {\n                version: 0.01\n            },\n            graphData: this.graphData,\n            playerData: {},\n            secret: {}\n        };\n        return Base64.btoa(pako.deflate(stringify(compressedData), {to: 'string'}));\n    }\n\n    uploadDataWithResponse() {\n        const data = {data: this.compressGraphData()};\n        return saveHash(data);\n    }\n\n    static inflateGraphData(data) {\n        return parse(pako.inflate(Base64.atob(data), {to: 'string'}));\n    }\n\n    analyze = () => {\n        analyzeGraph.call(this);\n        this.updateGraphHelper();\n    };\n\n    componentDidMount() {\n        // const data = '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';\n        const data = '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';\n        // const data = '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';\n        // const data = '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';\n        // const data = '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';\n        this.loadGraphData(this.props.parentAccessor.state.coreGraphData);\n        this.analyze();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.selectedPath !== prevState.selectedPath || this.state.selectedNode !== prevState.selectedNode) {\n            this.props.parentAccessor.setState({\n                selectedPath: this.state.selectedPath,\n                selectedNode: this.state.selectedNode\n            });\n        }\n    }\n\n\n    render() {\n        return <svg id=\"mainRender\"/>;\n    }\n}\n\nexport default GraphSvg;","import React from 'react';\nimport {ClickAwayListener, withStyles} from '@material-ui/core';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({});\n\nclass ClickAwayListenerV2 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.windowOnClobber = null;\n        this.clobberList = [];\n    }\n\n    componentDidMount() {\n        this.windowOnClobber = d3.select(this.props.clobberedElement).on('click');\n        d3.select(this.props.clobberedElement).on('click', this.props.onClickAway);\n\n        for (let elem of document.querySelectorAll('*')) {\n            this.clobberList.push(elem);\n            elem.addEventListener('click', this.props.onClickAway, true);\n        }\n    }\n\n    componentWillUnmount() {\n        d3.select(this.props.clobberedElement).on('click', this.windowOnClobber);\n        for (let elem of this.clobberList) {\n            elem.removeEventListener('click', this.props.onClickAway, true);\n        }\n        this.clobberList = [];\n    }\n\n    render() {\n        const {onClickAway} = this.props;\n\n        return (\n            <ClickAwayListener onClickAway={onClickAway}>\n                {this.props.children}\n            </ClickAwayListener>\n        );\n    }\n}\n\nClickAwayListenerV2.propTypes = {\n    classes: PropTypes.object.isRequired,\n    clobberedElement: PropTypes.string.isRequired,\n    onClickAway: PropTypes.func.isRequired,\n    children: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ClickAwayListenerV2);","import React from 'react';\rimport MenuItem from '@material-ui/core/MenuItem';\rimport Button from '@material-ui/core/Button';\rimport Paper from '@material-ui/core/Paper';\rimport AddBoxIcon from '@material-ui/icons/AddBox';\rimport Popper from '@material-ui/core/Popper';\rimport Tooltip from '@material-ui/core/Tooltip';\r\rimport {withStyles} from '@material-ui/core';\rimport MenuList from '@material-ui/core/MenuList';\rimport Grow from '@material-ui/core/Grow';\rimport ClickAwayListenerV2 from \"./ClickAwayListenerV2\";\r\rconst styles = theme => ({\r    root: {},\r    button: {\r        flex: '0 0 100%',\r        justifyContent: 'left',\r        padding: 10,\r    },\r    paper: {\r        margin: theme.spacing.unit * 2,\r        display: 'flex',\r    },\r    label: {\r        paddingLeft: 10,\r    },\r    popper: {\r        zIndex: 1200,\r        left: '13px !important',\r    },\r    itemListIcon: {\r        height: 24,\r        width: 24,\r        paddingRight: 15,\r    },\r    tooltip: {},\r    tooltipIcon: {\r        height: 40,\r        display: 'inline-block',\r        paddingLeft: 10\r    },\r    tooltipIconFirst: {\r        height: 40,\r        display: 'inline-block',\r    },\r    tooltipText: {\r        fontSize: 18,\r        display: 'inline-block',\r    },\r});\r\rclass SidebarButton extends React.Component {\r\r    constructor(props) {\r        super(props);\r        this.state = {anchorEl: null};\r    }\r\r    handleMenu = event => {\r        if (event.currentTarget === this.state.lastTarget)\r            return;\r        this.setState({anchorEl: event.currentTarget});\r    };\r\r    handleClose = () => {\r        this.setState({\r            anchorEl: null,\r            lastTarget: this.state.anchorEl\r        }, () => new Promise(resolve => setTimeout(resolve, 100)).then(() => this.setState({lastTarget: null})));\r    };\r\r    render() {\r        const {classes, label, appObject} = this.props;\r        const {anchorEl} = this.state;\r        const open = Boolean(anchorEl);\r        const listItems = this.props.items.map((link) => {\r            return (\r                <Tooltip key={link.id} className={classes.tooltip} placement=\"right\" title={\r                    link.inputs.map((element, index) => {\r                        return (\r                            <React.Fragment key={element.item.id}>\r                                <img src={element.item.icon}\r                                     className={index === 0 ? classes.tooltipIconFirst : classes.tooltipIcon}/>\r                                <div className={classes.tooltipText}>{element.quantity}</div>\r                            </React.Fragment>\r                        );\r                    })\r                }>\r                    <MenuItem onClick={() => {\r                        const machine_nodes = appObject.state.machine_node.machine_node;\r                        machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\r                        const upgrades = machine_nodes.filter(node => node.machine_class.id === link.machine_class.id);\r                        const instance = upgrades[0];\r\r                        appObject.graphSvg.addNode(\r                            {\r                                data: {recipe: link},\r                                machine: link.machine_class,\r                                allowedIn: link.inputs.map(dict => dict.item.id),\r                                allowedOut: [link.item.id],\r                                instance: instance,\r                                upgradeTypes: upgrades\r                            }\r                        );\r                        this.handleClose();\r                    }}>\r                        <img alt=\"probably some goat image\" src={link.item.icon} className={classes.itemListIcon}/>\r                        {link.name}\r                        <div className={classes.grow}/>\r                    </MenuItem>\r                </Tooltip>\r            );\r        });\r        return (\r            <React.Fragment key={label}>\r                <Paper className={classes.paper}>\r                    <Button\r                        aria-owns={open ? 'menu-appbar' : null}\r                        aria-haspopup=\"true\"\r                        onClick={open ? this.handleClose : this.handleMenu}\r                        className={classes.button}\r                    >\r                        <AddBoxIcon/>\r                        <div className={classes.label}>\r                            {label}\r                        </div>\r                    </Button>\r                    <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition\r                            placement=\"right-start\">\r                        {({TransitionProps, placement}) => (\r                            <Grow\r                                {...TransitionProps}\r                                id=\"menu-list-grow\"\r                                style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\r                            >\r                                <Paper>\r                                    <ClickAwayListenerV2 onClickAway={this.handleClose}\r                                                         clobberedElement={'#mainRender'}>\r                                        <MenuList>\r                                            {listItems}\r                                        </MenuList>\r                                    </ClickAwayListenerV2>\r                                </Paper>\r                            </Grow>\r                        )}\r                    </Popper>\r                </Paper>\r            </React.Fragment>\r        );\r    }\r}\r\rexport default withStyles(styles)(SidebarButton);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core';\n\nconst styles = theme => ({\n    root: {},\n    modal: {\n        position: 'absolute',\n        width: theme.spacing.unit * 100,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n        margin: 'auto'\n    },\n});\n\nclass PopupDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {classes, title, contents, open, handleModalClose, children} = this.props;\n        return (\n            <Dialog\n                open={Boolean(open)}\n                onClose={handleModalClose}\n                id='modal'\n            >\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    {children}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleModalClose} color='secondary'>Close</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default withStyles(styles)(PopupDialog);","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\n\nconst styles = theme => ({\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing.unit * 2,\n        right: theme.spacing.unit * 2,\n    },\n});\n\nclass FabPopup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false};\n    }\n\n    render() {\n        const {classes, title, contents} = this.props;\n\n        return (\n            <React.Fragment>\n                <Fab aria-label='help' color='primary' className={classes.fab}\n                     onClick={() => this.setState({modalOpen: true})}>\n                    <HelpIcon/>\n                </Fab>\n                <PopupDialog title={title} open={this.state.modalOpen}\n                             handleModalClose={() => this.setState({modalOpen: false})}>\n                    {contents}\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(FabPopup);","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\n\nconst styles = theme => ({\n    icons: {\n        marginRight: 0\n    },\n});\n\nclass SidebarPopup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false};\n    }\n\n    render() {\n        const {classes, Icon, label, title, contents} = this.props;\n\n        return (\n            <React.Fragment>\n                <ListItem button key={label} onClick={() => this.setState({modalOpen: true})}>\n                    <ListItemIcon className={classes.icons}><Icon/></ListItemIcon>\n                    <ListItemText primary={label}/>\n                </ListItem>\n                <PopupDialog title={title} open={this.state.modalOpen}\n                             handleModalClose={() => this.setState({modalOpen: false})}>\n                    {this.props.children}\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(SidebarPopup);","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\n\nimport {withStyles} from '@material-ui/core';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\nimport ClickAwayListenerV2 from \"./ClickAwayListenerV2\";\n\nconst styles = theme => ({\n    root: {},\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    popper: {\n        zIndex: 1200,\n        left: '13px !important',\n    },\n    itemListIcon: {\n        height: 24,\n        width: 24,\n        paddingRight: 15,\n    },\n});\n\nclass InnerNestedSidebarButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null};\n    }\n\n    handleMenu = event => {\n        if (event.currentTarget === this.state.lastTarget)\n            return;\n        this.setState({anchorEl: event.currentTarget, selectedButton: event.currentTarget.id});\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n            lastTarget: this.state.anchorEl,\n            selectedButton: null\n        }, () => new Promise(resolve => setTimeout(resolve, 100)).then(() => this.setState({lastTarget: null})));\n    };\n\n    render() {\n        const {classes, resource, appObject} = this.props;\n        const {anchorEl} = this.state;\n        const icon = resource.item.icon;\n        const label = resource.item.name;\n        const listItems = resource.purities;\n        const machineIcon = resource.machine_class.icon;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment key={label}>\n                <MenuItem\n                    aria-owns={open ? 'menu-appbar' : null}\n                    aria-haspopup=\"true\"\n                    onClick={open ? this.handleClose : this.handleMenu}\n                    selected={this.state.selectedButton === label}\n                    id={label}\n                >\n                    <img src={icon} className={classes.itemListIcon}/>\n                    {label}\n                </MenuItem>\n                <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition placement=\"right-start\">\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            id=\"menu-list-grow\"\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListenerV2 onClickAway={this.handleClose} clobberedElement={'#mainRender'}>\n                                    <MenuList>\n                                        {\n                                            listItems.map((item) => {\n                                                return (\n                                                    <MenuItem onClick={\n                                                        () => {\n                                                            const machine_nodes = appObject.state.machine_node.machine_node;\n                                                            machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\n                                                            const upgrades = machine_nodes.filter(node => node.machine_class.id === resource.machine_class.id);\n                                                            const instance = upgrades[0];\n                                                            console.log(\"YES, ITS TRIGGERED\", item.name);\n                                                            appObject.graphSvg.addNode(\n                                                                {\n                                                                    data: {\n                                                                        machine: resource,\n                                                                        node: item,\n                                                                        recipe: resource,\n                                                                        purity: item.name\n                                                                    },\n                                                                    machine: resource.machine_class,\n                                                                    allowedIn: [],\n                                                                    allowedOut: [resource.item.id],\n                                                                    instance: instance,\n                                                                    upgradeTypes: upgrades,\n                                                                }\n                                                            );\n                                                            this.handleClose();\n                                                        }\n                                                    } key={label + item.name}><img src={machineIcon}\n                                                                                   className={classes.itemListIcon}/>{item.name}\n                                                    </MenuItem>\n                                                );\n                                            })\n                                        }\n                                    </MenuList>\n                                </ClickAwayListenerV2>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(InnerNestedSidebarButton);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport Popper from '@material-ui/core/Popper';\nimport {withStyles} from '@material-ui/core';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\n\nimport InnerNestedSidebarButton from './InnerNestedSidebarButton';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nconst styles = theme => ({\n    root: {},\n    button: {\n        flex: '0 0 100%',\n        justifyContent: 'left',\n        padding: 10,\n    },\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    popper: {\n        zIndex: 1200,\n        left: '13px !important',\n    },\n    itemListIcon: {\n        height: 24,\n        width: 24,\n        paddingRight: 15,\n    },\n});\n\nclass NestedSidebarButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null};\n    }\n\n    handleMenu = event => {\n        if (event.currentTarget === this.state.lastTarget)\n            return;\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n            lastTarget: this.state.anchorEl\n        }, () => new Promise(resolve => setTimeout(resolve, 100)).then(() => this.setState({lastTarget: null})));\n    };\n\n    render() {\n        const {classes, listItems, label, appObject} = this.props;\n        const {anchorEl} = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment key={label}>\n                <Paper className={classes.paper}>\n                    <Button\n                        aria-owns={open ? 'menu-appbar' : null}\n                        aria-haspopup=\"true\"\n                        onClick={open ? this.handleClose : this.handleMenu}\n                        className={classes.button}\n                    >\n                        <AddBoxIcon/>\n                        <div className={classes.label}>{label}</div>\n                    </Button>\n                    <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition\n                            placement=\"right-start\">\n                        {({TransitionProps, placement}) => (\n                            <Grow\n                                {...TransitionProps}\n                                id=\"menu-list-grow\"\n                                style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                            >\n                                <Paper>\n                                    <ClickAwayListener onClickAway={this.handleClose}>\n                                        <MenuList>\n                                            {Object.keys(listItems).map(key => {\n                                                const returnDivList = [];\n                                                if (['Miner'].includes(key)) {\n                                                    listItems[key].forEach(resource => {\n                                                        returnDivList.push(<InnerNestedSidebarButton\n                                                            appObject={appObject} resource={resource}/>);\n                                                    });\n                                                }\n                                                return returnDivList;\n                                            })}\n                                        </MenuList>\n                                    </ClickAwayListener>\n                                </Paper>\n                            </Grow>\n                        )}\n                    </Popper>\n                </Paper>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(NestedSidebarButton);","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport Popper from '@material-ui/core/Popper';\nimport {withStyles} from '@material-ui/core';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\nimport ClickAwayListenerV2 from \"./ClickAwayListenerV2\";\n\nconst styles = theme => ({\n    root: {},\n    button: {\n        flex: '0 0 100%',\n        justifyContent: 'left',\n        padding: 10,\n    },\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    popper: {\n        zIndex: 1200,\n        left: '13px !important',\n    },\n    itemListIcon: {\n        height: 24,\n        width: 24,\n        paddingRight: 15,\n    },\n});\n\nclass SimpleSidebarButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null};\n    }\n\n    handleMenu = event => {\n        if (event.currentTarget === this.state.lastTarget)\n            return;\n        this.setState({anchorEl: event.currentTarget});\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null,\n            lastTarget: this.state.anchorEl\n        }, () => new Promise(resolve => setTimeout(resolve, 100)).then(() => this.setState({lastTarget: null})));\n    };\n\n    render() {\n        const {classes, listItems, label, appObject} = this.props;\n        const {anchorEl} = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <Paper className={classes.paper}>\n                <Button\n                    aria-owns={open ? 'menu-appbar' : null}\n                    aria-haspopup=\"true\"\n                    onClick={open ? this.handleClose : this.handleMenu}\n                    className={classes.button}\n                >\n                    <AddBoxIcon/>\n                    <div className={classes.label}>Logistics</div>\n                </Button>\n                <Popper className={classes.popper} open={open} anchorEl={anchorEl} transition placement=\"right-start\">\n                    {({TransitionProps, placement}) => (\n                        <Grow\n                            {...TransitionProps}\n                            id=\"menu-list-grow\"\n                            style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                        >\n                            <Paper>\n                                <ClickAwayListenerV2 onClickAway={this.handleClose} clobberedElement={'#mainRender'}>\n                                    <MenuList>\n                                        {Object.keys(listItems).map(key => {\n                                            const returnDivList = [];\n                                            if (!['Miner', 'Logistic'].includes(key)) {\n                                                listItems[key].forEach(resource => {\n                                                    returnDivList.push(<MenuItem onClick={() => {\n                                                        const machine_nodes = appObject.state.machine_node.machine_node;\n                                                        machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\n                                                        const upgrades = machine_nodes.filter(node => node.machine_class.id === resource.machine_class.id);\n                                                        const instance = upgrades[0];\n                                                        appObject.graphSvg.addNode(\n                                                            {\n                                                                data: {recipe: resource},\n                                                                machine: resource.machine_class,\n                                                                allowedIn: [],\n                                                                allowedOut: [],\n                                                                instance: instance,\n                                                                upgradeTypes: upgrades\n                                                            }\n                                                        );\n                                                        this.handleClose();\n                                                    }}\n                                                                                 key={resource.machine_class.name + resource.machine_class.id}>\n                                                        <img\n                                                            src={resource.machine_class.icon}\n                                                            className={classes.itemListIcon}/>{resource.machine_class.name}\n                                                    </MenuItem>);\n                                                });\n                                            }\n                                            if (['Logistic'].includes(key)) {\n                                                listItems[key].forEach(resource => {\n                                                    returnDivList.push(<MenuItem onClick={() => {\n                                                        const machine_nodes = appObject.state.machine_node.machine_node;\n                                                        machine_nodes.sort((node1, node2) => node1.rank - node2.rank);\n                                                        const upgrades = machine_nodes.filter(node => node.machine_class.id === resource.machine_class.id && resource.name === node.name);\n                                                        const instance = upgrades[0];\n                                                        appObject.graphSvg.addNode(\n                                                            {\n                                                                data: {recipe: resource},\n                                                                machine: resource.machine_class,\n                                                                allowedIn: [],\n                                                                allowedOut: [],\n                                                                instance: instance,\n                                                                upgradeTypes: upgrades\n                                                            }\n                                                        );\n                                                        this.handleClose();\n                                                    }}\n                                                                                 key={resource.name}>\n                                                        <img src={resource.icon}\n                                                             className={classes.itemListIcon}/>{resource.name}\n                                                    </MenuItem>);\n                                                });\n                                            }\n                                            return returnDivList;\n                                        })}\n                                    </MenuList>\n                                </ClickAwayListenerV2>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(SimpleSidebarButton);","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport {withStyles} from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {useExperimentalFeature} from \"./GraphSvg/util\";\n\nconst styles = theme => ({\n    root: {},\n    paper: {\n        margin: 16,\n        padding: 12,\n        display: 'flex',\n        flexDirection: 'column',\n        flexShrink: 0\n    },\n    textField: {\n        paddingBottom: 10,\n    },\n    button: {\n        flex: 1,\n        marginTop: 10,\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing.unit / 4,\n    },\n    tooltip: {},\n    tooltipIcon: {\n        height: 40,\n        display: 'inline-block',\n        paddingLeft: 10\n    },\n    tooltipIconFirst: {\n        height: 40,\n        display: 'inline-block',\n    },\n    tooltipText: {\n        fontSize: 18,\n        display: 'inline-block',\n    },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        },\n    },\n};\n\nclass SidebarPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            playerUnlock: this.props.playerUnlock.player_unlock,\n            recipe: this.props.playerUnlock.recipe,\n            selectedDrives: []\n        };\n    }\n\n    handleChangeMultiple = event => {\n        console.log(event.currentTarget);\n        const options = event.currentTarget.parentElement.children;\n        const value = [];\n        for (let i = 0, l = options.length; i < l; i += 1) {\n            if (options[i].getAttribute('value') === event.currentTarget.getAttribute('value')) {\n                if (this.state.selectedDrives.indexOf(options[i].getAttribute('value')) === -1) {\n                    value.push(options[i].getAttribute('value'));\n                }\n            } else {\n                if (options[i].querySelector('input').checked) {\n                    value.push(options[i].getAttribute('value'));\n                }\n            }\n        }\n        this.setState({\n            selectedDrives: value,\n        });\n    };\n\n    render() {\n        const {classes, parentState, playerUnlock} = this.props;\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant=\"h5\">Settings</Typography>\n                {/*<TextField*/}\n                {/*label='Default Conveyor Speed'*/}\n                {/*type='number'*/}\n                {/*className={classes.textField}*/}\n                {/*fullWidth*/}\n                {/*>*/}\n                {/*</TextField>*/}\n\n                {/*<FormControl className={classes.formControl}>*/}\n                {/*<InputLabel htmlFor=\"select-multiple-chip\">Hard Drives</InputLabel>*/}\n                {/*<Select*/}\n                {/*multiple*/}\n                {/*value={this.state.selectedDrives}*/}\n                {/*onChange={this.handleChangeMultiple}*/}\n                {/*input={<Input id=\"select-multiple-chip\" />}*/}\n                {/*MenuProps={MenuProps}*/}\n                {/*renderValue={selected => (*/}\n                {/*<div className={classes.chips}>*/}\n                {/*{selected.map(value => (*/}\n                {/*<Chip key={value} label={value} className={classes.chip} />*/}\n                {/*))}*/}\n                {/*</div>*/}\n                {/*)}*/}\n                {/*>*/}\n                {/*{this.state.playerUnlock.map(drive => {*/}\n                {/*return (<Tooltip key={drive.name+drive.id+'toolip'} className={classes.tooltip} placement=\"right\" title={*/}\n                {/*this.state.recipe[drive.id].inputs.map((element, index) => {*/}\n                {/*return (*/}\n                {/*<React.Fragment key={element.item.id}>*/}\n                {/*<img src={element.item.icon} className={index === 0 ? classes.tooltipIconFirst : classes.tooltipIcon}/>*/}\n                {/*<div className={classes.tooltipText}>{element.quantity}</div>*/}\n                {/*</React.Fragment>*/}\n                {/*);*/}\n                {/*})*/}\n                {/*}>*/}\n                {/*<MenuItem key={drive.name+drive.id} value={drive.name}>*/}\n                {/*<Checkbox checked={this.state.selectedDrives.indexOf(drive.name) !== -1} color=\"primary\" />*/}\n                {/*<ListItemText primary={drive.name} />*/}\n                {/*</MenuItem>*/}\n                {/*</Tooltip>);*/}\n                {/*})}*/}\n                {/*</Select>*/}\n                {/*</FormControl>*/}\n                {\n                    useExperimentalFeature('stg') ?\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={parentState.graphSvg && parentState.graphSvg.state.snapToGrid}\n                                    onChange={() => {\n                                        parentState.graphSvg.setState({snapToGrid: !parentState.graphSvg.state.snapToGrid})\n                                    }}\n                                    value=\"snapToGrid\"\n                                />\n                            }\n                            label=\"Snap To Grid\"\n                        /> : null\n                }\n                <Button className={classes.button} fullWidth onClick={() => {\n                    parentState.graphSvg.jiggle();\n                }}>\n                    <ShuffleIcon/>\n                    <div className={classes.label}>Rejiggle Graph</div>\n                </Button>\n                <Button className={classes.button} fullWidth onClick={() => {\n                    parentState.graphSvg.resetCamera();\n                }}>\n                    <ReplayIcon/>\n                    <div className={classes.label}>Reset Camera</div>\n                </Button>\n                <Button className={classes.button} fullWidth onClick={() => {\n                    parentState.graphSvg.fixNodes();\n                }}>\n                    <ReplayIcon/>\n                    <div className={classes.label}>Fix Nodes</div>\n                </Button>\n                <Button className={classes.button} fullWidth onClick={() => {\n                    parentState.graphSvg.unfixNodes();\n                }}>\n                    <UndoIcon/>\n                    <div className={classes.label}>Unfix Nodes</div>\n                </Button>\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(SidebarPanel);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\n\nconst styles = theme => ({\n    label: {\n        paddingLeft: 10,\n    },\n    dialogContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nclass ClearButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false};\n    }\n\n    handleModalClose = () => this.setState({modalOpen: false});\n    handleModalOpen = () => this.setState({modalOpen: true});\n\n\n    render() {\n        const {classes, label, title, children, onClick} = this.props;\n        return (\n            <React.Fragment>\n                <Button color='inherit' onClick={onClick || this.handleModalOpen}>\n                    <DeleteIcon/>\n                    <div className={classes.label}>Clear</div>\n                </Button>\n                <PopupDialog title={'Clear Graph?'} open={this.state.modalOpen}\n                             handleModalClose={this.handleModalClose}>\n                    <div className={classes.dialogContainer}>\n                        <Typography variant=\"h5\">Are you sure you want to clear everything?</Typography>\n                        <Button color=\"secondary\" variant=\"outlined\" className={`${classes.dialogButton}`} onClick={\n                            () => {\n                                this.props.t.graphSvg.clearGraphData(this.props.t);\n                                this.handleModalClose();\n                            }\n                        }>\n                            <DeleteIcon/>\n                            <div className={classes.label}>Yes, I'm sure!</div>\n                        </Button>\n                    </div>\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(ClearButton);","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport TextField from '@material-ui/core/TextField';\nimport {rebuildQueryParams} from \"./GraphSvg/util\";\n\nconst styles = theme => ({\n    label: {\n        paddingLeft: 10,\n    },\n    dialogContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    inlineDialogButton: {\n        paddingTop: 10,\n        paddingBottom: 10,\n    },\n    dialogButton: {\n        marginTop: 10,\n    },\n    statusMessage: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nclass ShareButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false, value: true};\n    }\n\n    handleModalClose = () => this.setState({modalOpen: false});\n    handleModalOpen = () => this.setState({modalOpen: true});\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (!prevState.modalOpen && this.state.modalOpen) {\n            this.setState({value: 'Loading...'}, () => {\n                this.props.t.graphSvg.uploadDataWithResponse().then(resp => {\n                    const port = window.location.port ? ':' + window.location.port : ''\n                    const url = window.location.protocol +  window.location.hostname + port + window.location.pathname\n                        + '#' +  resp + rebuildQueryParams();\n                    this.setState({value: url});\n                })\n            })\n        }\n    }\n\n    render() {\n        const {classes, onClick} = this.props;\n        let value = this.state.value;\n\n        return (\n            <React.Fragment>\n                <Button color='inherit' onClick={onClick || this.handleModalOpen}>\n                    <ShareIcon/>\n                    <div className={classes.label}>Share</div>\n                </Button>\n                <PopupDialog title={'Share Code'} open={this.state.modalOpen}\n                             handleModalClose={this.handleModalClose}>\n                    <div className={classes.dialogContainer}>\n                        <div>\n                            <TextField inputRef={ref => this.inputRef = ref} label=\"Share Code\" value={value}>\n                            </TextField>\n                            <Button color=\"inherit\" className={classes.inlineDialogButton} onClick={\n                                () => new Promise(resolve => {\n                                    this.inputRef.select();\n                                    document.execCommand('copy');\n                                    resolve(true);\n                                }).then(a => {\n                                    this.setState({statusMessage: 'Copied!'}, () => {\n                                        setTimeout(() => {\n                                            this.setState({statusMessage: ''});\n                                        }, 3000);\n                                    });\n                                })}\n                            >\n                                <FileCopyIcon/>\n                                <div className={classes.label}>Copy</div>\n                            </Button>\n                        </div>\n                        <Button color=\"inherit\" className={classes.dialogButton} fullWidth>\n                            <div className={classes.label}>Generate Image</div>\n                        </Button>\n                        <div className={classes.statusMessage}>\n                            {this.state.statusMessage}\n                        </div>\n                    </div>\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShareButton);","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport PopupDialog from './PopupDialog';\nimport {withStyles} from '@material-ui/core';\nimport InputIcon from '@material-ui/icons/Input';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    label: {\n        paddingLeft: 10,\n    },\n    dialogContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    inlineDialogButton: {\n        paddingTop: 10,\n        paddingBottom: 10,\n    },\n    dialogButton: {\n        marginTop: 10,\n    },\n    statusMessage: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nclass LoadButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalOpen: false, inputValue: ''};\n    }\n\n    handleModalClose = () => this.setState({modalOpen: false});\n    handleModalOpen = () => this.setState({modalOpen: true});\n\n\n    render() {\n        const {classes, label, title, children, onClick} = this.props;\n        // if (this.props.t && this.props.t.graphSvg) {\n        //   value =\n        // }\n        return (\n            <React.Fragment>\n                <Button color='inherit' onClick={onClick || this.handleModalOpen}>\n                    <InputIcon/>\n                    <div className={classes.label}>Load</div>\n                </Button>\n                <PopupDialog title={'Load Code'} open={this.state.modalOpen}\n                             handleModalClose={this.handleModalClose}>\n                    <div className={classes.dialogContainer}>\n\n\n                        <div>\n                            <TextField label=\"Load Code\" value={this.state.inputValue} onChange={e => {\n                                this.setState({inputValue: e.target.value})\n                            }}>\n                            </TextField>\n                            <Button color=\"inherit\" className={classes.inlineDialogButton} onClick={\n                                () => new Promise((resolve, reject) => {\n                                    try {\n                                        const data = GraphSvg.inflateGraphData(this.state.inputValue);\n\n                                        this.props.t.graphSvg.loadGraphData(data);\n                                        resolve(true);\n                                    } catch (err) {\n                                        console.error(err);\n                                        reject(err);\n                                    }\n                                }).then(a => {\n                                    this.setState({statusMessage: 'Loaded!'}, () => {\n                                        setTimeout(() => {\n                                            this.setState({statusMessage: ''});\n                                        }, 3000);\n                                    });\n                                }).catch(err => {\n                                    this.setState({statusMessage: 'Invalid load code!'}, () => {\n                                        setTimeout(() => {\n                                            this.setState({statusMessage: ''});\n                                        }, 3000);\n                                    });\n                                })}\n\n                                //     setTimeout(() => {\n                                //\n                                //     }, 200);\n                                //\n                                //   }\n                                // }\n                            >\n                                <InputIcon/>\n                                <div className={classes.label}>Load</div>\n                            </Button>\n                        </div>\n                        <div className={classes.statusMessage}>\n                            {this.state.statusMessage}\n                        </div>\n                    </div>\n                </PopupDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(LoadButton);","import React from 'react';\nimport {Typography, withStyles} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport {updateNodeTierExternal} from \"./GraphSvg/nodeActions\";\nimport * as d3 from 'd3';\n\nconst drawerWidth = 310;\n\nconst styles = theme => ({\n    root: {},\n    formControl: {\n        maxWidth: drawerWidth,\n    },\n    paper: {\n        position: 'absolute',\n        left: drawerWidth + 20,\n        bottom: 20,\n        margin: 16,\n        padding: 12,\n        minWidth: drawerWidth - 100,\n    },\n    textField: {\n        paddingBottom: 10,\n    },\n    button: {},\n    label: {\n        paddingLeft: 10,\n    },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            minWidth: drawerWidth / 2,\n        },\n    },\n};\n\nconst names = [\n    'Oliver Hansen',\n    'Van Henry',\n    'April Tucker',\n    'Ralph Hubbard',\n    'Omar Alexander',\n    'Carlos Abbott',\n    'Miriam Wagner',\n    'Bradley Wilkerson',\n    'Virginia Andrews',\n    'Kelly Snyder',\n];\n\nclass SelectorPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {dummy: false};\n    }\n\n    update = () => {\n        if (this.props.selected.machine) {\n            const el = d3.select('#' + 'node-level-accessor-' + this.props.selected.id);\n            updateNodeTierExternal(el);\n        } else {\n            // it's a path\n            const el = d3.select('#' + 'path-parent' + this.props.selected.source.id + '-' + this.props.selected.target.id);\n            updateNodeTierExternal(el);\n        }\n    };\n\n    upgrade = () => {\n        const instance = this.props.selected.instance;\n        let index = this.props.selected.upgradeTypes.indexOf(instance);\n        const n = this.props.selected.upgradeTypes.length;\n        index = (index + 1);\n        if (index >= n) return;\n        this.props.selected.instance = this.props.selected.upgradeTypes[index];\n        this.update();\n\n        this.setState({dummy: !this.state.dummy});\n    };\n\n    downgrade = () => {\n        const instance = this.props.selected.instance;\n        let index = this.props.selected.upgradeTypes.indexOf(instance);\n        const n = this.props.selected.upgradeTypes.length;\n        index = index - 1;\n\n        if (index < 0) return;\n\n        this.props.selected.instance = this.props.selected.upgradeTypes[index];\n        this.update();\n\n        this.setState({dummy: !this.state.dummy});\n    };\n\n    render() {\n        const {classes, label} = this.props;\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant='h5'>{label}</Typography>\n                <IconButton color=\"primary\" className={classes.button} onClick={this.upgrade}>\n                    <ArrowUpwardIcon/>\n                </IconButton>\n                {this.props.selected.instance.name}\n                <IconButton color=\"secondary\" className={classes.button} onClick={this.downgrade}>\n                    <ArrowDownwardIcon/>\n                </IconButton>\n            </Paper>\n        );\n    }\n}\n\nexport default withStyles(styles)(SelectorPanel);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {createMuiTheme, MuiThemeProvider, withStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport InfoIcon from '@material-ui/icons/Info';\nimport * as ReactGA from 'react-ga';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\n\nimport Button from '@material-ui/core/Button';\nimport Loader from './Loader';\nimport createDatabase from './newData';\nimport GraphSvg from './GraphSvg';\n\nimport SidebarButton from './SidebarButton';\nimport FabPopup from './FabPopup';\nimport SidebarPopup from './SidebarPopup';\nimport NestedSidebarButton from './NestedSidebarButton';\nimport SimpleSidebarButton from './SimpleSidebarButton';\nimport SidebarPanel from './SidebarPanel';\nimport ClearButton from './ClearButton';\nimport ShareButton from './ShareButton';\nimport LoadButton from './LoadButton';\nimport SelectorPanel from './SelectorPanel';\nimport {loadHash, saveHash} from \"./GraphSvg/util\";\n// import * as d3 from 'd3';\n\n/* global d3 */\n\nconst drawerWidth = 310;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexGrow: 1,\n        flexBasis: 'auto',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        display: 'flex',\n        paddingTop: 64,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        position: 'unset'\n    },\n    drawerTitle: {\n        paddingLeft: 15,\n        paddingTop: 5,\n    },\n    content: {\n        display: 'flex',\n        flexGrow: 1,\n        paddingTop: 64,\n    },\n    toolbar: theme.mixins.toolbar,\n    logo: {\n        width: drawerWidth,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    pathIcon: {\n        height: 15,\n        width: 15,\n        display: 'inline-block'\n    },\n    pathText: {\n        display: 'inline-block'\n    },\n    paper: {\n        margin: theme.spacing.unit * 2,\n        display: 'flex',\n    },\n    button: {\n        flex: '0 0 100%',\n    },\n    label: {\n        paddingLeft: 10,\n    },\n    inlineDialogButton: {\n        paddingTop: 10,\n        paddingBottom: 10,\n    },\n    dialogButton: {\n        marginTop: 10,\n    },\n    dialogContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    clearButton: {\n        paddingTop: 20,\n    },\n});\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        primary: {\n            main: '#424242'\n        },\n    }\n});\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false\n        };\n    }\n\n    getRefkeyTable(table) {\n        const db = this.state.db;\n        const tableRef = db.getSchema().table(table);\n        return new Promise(resolve => db.select()\n            .from(tableRef).exec().then(results => resolve(results)));\n    }\n\n    generateRecursiveStructure(startingTable) {\n        const db = this.state.db;\n        const starting = db.getSchema().table(startingTable);\n        this.globalStructure = this.globalStructure || {};\n        const globalStructure = this.globalStructure;\n\n        return db.select().from(starting).exec().then(async results => {\n            if (results.length > 0) {\n                globalStructure[startingTable] = results;\n\n                const refKeysToProcess = Object.keys(results[0]).filter(str => str.endsWith('_id'));\n\n                while (refKeysToProcess.length > 0) {\n                    const refKey = refKeysToProcess.pop();\n                    const tableName = refKey.slice(0, -3);\n                    if (!globalStructure[tableName]) {\n                        globalStructure[tableName] = await this.getRefkeyTable(tableName);\n                        Object.keys(globalStructure[tableName]).filter(str => str.endsWith('_id'))\n                            .forEach(name => {\n                                if (!globalStructure[name.slice(0, -3)]) {\n                                    refKeysToProcess.push(name);\n                                }\n                            });\n                    }\n                }\n\n                const recursiveFind = (element, functionToApply) => {\n                    if (Array.isArray(element)) {\n                        element.forEach((elem, index) => {\n                            const shouldChangeThis = recursiveFind(elem, functionToApply);\n                            if (shouldChangeThis) {\n                                console.error('Why are we doing this to an array?');\n                                element[index] = functionToApply(elem);\n                            }\n                        });\n                        return false;\n                    } else if (typeof element === 'object') {\n                        Object.keys(element).forEach(key => {\n                            const elem = element[key];\n\n                            const shouldChangeThis = recursiveFind(elem, functionToApply);\n                            if (shouldChangeThis) {\n                                functionToApply(elem, key, element);\n                            }\n                        });\n                        return false;\n                    } else {\n                        return true;\n                    }\n                };\n\n                Object.keys(globalStructure).forEach(key => {\n                    const rows = globalStructure[key];\n                    rows.forEach(row => {\n                        Object.keys(row).filter(str => str.endsWith('_id')).forEach(rowKey => {\n                            const refId = row[rowKey];\n                            const tableName = rowKey.slice(0, -3);\n                            const associatedData = globalStructure[tableName];\n                            delete row[rowKey];\n                            const possibleData = associatedData.filter(elem => elem.id === refId);\n                            if (possibleData.length === 1) {\n                                row[tableName] = possibleData[0];\n                            } else {\n                                throw new Error('Unrecognized Id ' + refId + ' in ' + rowKey + ' within ' + key);\n                            }\n                        });\n                    });\n                });\n\n                Object.keys(globalStructure).forEach(key => {\n                    const rows = globalStructure[key];\n                    rows.forEach(row => {\n                        Object.keys(row).filter(str => str.endsWith('_id')).forEach(rowKey => {\n                            const refId = row[rowKey];\n                            const tableName = rowKey.slice(0, -3);\n                            const associatedData = globalStructure[tableName];\n                            delete row[rowKey];\n\n                            const possibleData = associatedData.filter(elem => elem.id === refId);\n                            if (possibleData.length === 1) {\n                                row[tableName] = possibleData[0];\n                            } else {\n                                throw new Error('Unrecognized Id ' + refId + ' in ' + rowKey + ' within ' + key);\n                            }\n                        });\n                        Object.keys(row).filter(str => !str.endsWith('_id')).forEach(rowKey => {\n                            const rowValue = row[rowKey];\n                            const replaceTable = (id, id_name, object) => {\n                                if (!id_name.endsWith('_id')) {\n                                    if (typeof object[id_name] === 'string' && object[id_name].startsWith('http')) {\n                                        const img = new Image();\n                                        img.src = object[id_name];\n                                    }\n                                    return;\n                                }\n\n                                const refId = id;\n                                const tableName = id_name.slice(0, -3);\n                                const associatedData = globalStructure[tableName];\n                                delete object[id_name];\n\n                                const possibleData = associatedData.filter(elem => elem.id === refId);\n                                if (possibleData.length === 1) {\n                                    object[tableName] = possibleData[0];\n                                } else {\n                                    throw new Error('Unrecognized Id ' + refId + ' in table ' + id_name + ' within ' + object);\n                                }\n                            };\n                            recursiveFind(rowValue, replaceTable);\n                        });\n                    });\n                });\n            }\n\n            return globalStructure;\n        });\n    }\n\n    componentDidMount() {\n        ReactGA.initialize('UA-136827615-1', {\n            debug: process.env.NODE_ENV === 'production'\n        });\n        ReactGA.pageview(window.location.pathname + window.location.search);\n        window.addEventListener(\"hashchange\", () => {\n            document.location.reload();\n        }, false);\n\n        loadHash().then(data => {\n            this.setState({coreGraphData: data}, () => {\n                createDatabase().then((db) => {\n                    this.setState({db, loaded: true});\n                }).then(() => {\n                    return this.generateRecursiveStructure('player_unlock').then(player_unlock => {\n                        this.setState({player_unlock}, () => {\n                            return this.generateRecursiveStructure('recipe').then(recipe => {\n                                this.setState({recipe}, () => {\n                                    return this.generateRecursiveStructure('machine_node').then(machine_node => {\n                                        this.setState({machine_node}, () => {\n                                            return this.generateRecursiveStructure('spring').then(spring => {\n                                                this.setState({spring}, () => {\n                                                    return this.generateRecursiveStructure('path_type').then(path_type => {\n                                                        this.setState({path_type}, () => {\n                                                            return this.generateRecursiveStructure('purity_type').then(purity_type => {\n                                                                this.setState({purity_type, isLoaded: true});\n                                                            });\n                                                        });\n                                                    });\n                                                });\n                                            });\n                                        });\n                                    });\n                                });\n                            });\n                        });\n                    });\n                });\n            });\n        });\n        // saveHash({data: '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'});\n    }\n\n    generateNodeList() {\n        const recipesByMachineClass = {};\n        const machineClassPlural = {};\n        this.state.recipe && this.state.recipe.recipe.forEach(recipe => {\n            const thisList = recipesByMachineClass[recipe.machine_class.name] || [];\n            thisList.push(recipe);\n            recipesByMachineClass[recipe.machine_class.name] = thisList;\n            machineClassPlural[recipe.machine_class.name] = recipe.machine_class.plural;\n        });\n        return Object.keys(recipesByMachineClass).map(key =>\n            <SidebarButton appObject={this} label={machineClassPlural[key]} key={key}\n                           items={recipesByMachineClass[key]}/>\n        );\n    }\n\n    generateContainerList() {\n        const springByClass = {};\n        this.state.purity_type && this.state.spring && this.state.spring.spring.forEach(spring => {\n            const thisList = springByClass[spring.spring_type.name] || [];\n            thisList.push(spring);\n            springByClass[spring.spring_type.name] = thisList;\n        });\n\n        // Manually handle splitters and mergers\n        springByClass['Logistic'] = this.state.machine_node.machine_node.filter(elem => elem.machine_class.name === 'Logistic');\n\n\n        return (\n            <React.Fragment>\n                <SimpleSidebarButton label=\"Logistics\" appObject={this} listItems={springByClass}/>\n            </React.Fragment>\n\n        );\n    }\n\n    generateUnlocksList() {\n        const dataList = [];\n        this.state.player_unlock && this.state.player_unlock.player_unlock.forEach(player_unlock => {\n            const item = this.state.recipe.recipe.filter(elem => elem.player_unlock && (elem.player_unlock.id === player_unlock.id))[0];\n            if (item) {\n                // dataList.push({player_unlock, item});\n            }\n        });\n        return (\n            <div>hello</div>\n        );\n    }\n\n    generateSpringList() {\n        this.generateUnlocksList();\n        const springByClass = {};\n        this.state.spring && this.state.spring.spring.forEach(spring => {\n            const thisList = springByClass[spring.spring_type.name] || [];\n            thisList.push(spring);\n            springByClass[spring.spring_type.name] = thisList;\n        });\n        return (\n            <NestedSidebarButton label='Miners' listItems={springByClass} appObject={this}/>\n        );\n    }\n\n    render() {\n        const {classes} = this.props;\n        if (!this.state.isReady) {\n            return <Loader ready={this.state.isLoaded} parentState={this}/>;\n        }\n        const t = this;\n\n        return <div className={classes.root}>\n            <CssBaseline/>\n            <MuiThemeProvider theme={theme}>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <img alt=\"wow so satis factory\" className={classes.logo}\n                             src=\"https://raw.githubusercontent.com/rhocode/rhocode.github.io/master/img/satoolsfactory.png\"\n                             title=\"logo\"/>\n                        <div className={classes.grow}></div>\n                        <Button color=\"inherit\" disabled>\n                            <OfflineBoltIcon/>\n                            <div className={classes.label}>Optimize</div>\n                        </Button>\n                        <Button color=\"inherit\" onClick={() => t.graphSvg.analyze()}>\n                            <SettingsInputComponentIcon/>\n                            <div className={classes.label}>Analyze</div>\n                        </Button>\n                        <ShareButton t={t}/>\n                        <LoadButton t={t}/>\n                        <ClearButton t={t}/>\n                    </Toolbar>\n                </AppBar>\n\n                <FabPopup title='Help' contents={\n                    <React.Fragment>\n                        <Typography variant=\"h5\">Graph Basics</Typography>\n                        <ul>\n                            <li><Typography variant=\"body1\">Use the left menu to add nodes to the graph.</Typography>\n                            </li>\n                            <li><Typography variant=\"body1\">Click once on a node/path to select it.</Typography></li>\n                            <li><Typography variant=\"body1\">Press DELETE on a selected node/path to delete\n                                it.</Typography></li>\n                            <li><Typography variant=\"body1\">Hold down shift - click and drag from a node to direct it to\n                                another\n                                node.</Typography></li>\n                            <li><Typography variant=\"body1\">Use mouse wheel to control overclock (black text in the\n                                white circle)</Typography></li>\n                        </ul>\n                        <Typography variant=\"h5\">Saving/Loading</Typography>\n                        <Typography variant=\"body1\">You can share codes using the Share top left button, and load using\n                            the Load top left button</Typography>\n                        <Typography variant=\"h5\">Legend</Typography>\n                        <Typography variant=\"body1\"><span style={{'color': 'gold'}}>Orange</span> numbers means machine\n                            wastes time doing nothing</Typography>\n                        <Typography variant=\"body1\"><span style={{'color': 'LightCoral'}}>Red</span> numbers means\n                            machine isn't processing fast enough</Typography>\n                        <Typography variant=\"body1\"><span style={{'color': 'Blue'}}>Blue</span> numbers means the\n                            capacity has been overridden to be Infinite in order to speed up calculation</Typography>\n                    </React.Fragment>\n                }/>\n                {(this.state.selectedNode && this.state.selectedNode.upgradeTypes.length > 1) || (this.state.selectedPath && this.state.selectedPath.upgradeTypes && this.state.selectedPath.upgradeTypes.length > 1) ?\n                    <SelectorPanel label='Tier' graphSvg={this.graphSvg}\n                                   selected={this.state.selectedNode || this.state.selectedPath}/> : null}\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <List>\n                        <Typography variant=\"h5\" className={classes.drawerTitle}>Nodes</Typography>\n                        {this.generateNodeList()}\n                        {this.generateSpringList()}\n                        {this.generateContainerList()}\n                    </List>\n                    <Divider/>\n\n                    <SidebarPanel parentState={this} playerUnlock={this.state.player_unlock}/>\n\n                    <Divider/>\n\n                    <List>\n                        <SidebarPopup Icon={InfoIcon} label='About/Disclaimers' title='About/Disclaimers'>\n                            <Typography variant=\"body1\">Created by <a href=\"https://github.com/tehalexf\">Alex</a> and <a\n                                href=\"https://github.com/thinkaliker\">Adam</a> (<a\n                                href=\"https://twitter.com/thinkaliker\">@thinkaliker</a>).</Typography>\n                            <Typography variant=\"body1\">Not officially affiliated with Satisfactory, Coffee Stain\n                                Studios AB, or THQ Nordic AB.</Typography>\n                            <Typography variant=\"body1\">Images sourced from the Satisfactory Wiki, which is sourced from\n                                Coffee Stain Studios AB's Satisfactory.</Typography>\n                        </SidebarPopup>\n                        <SidebarPopup Icon={WarningIcon} label='Known Issues' title='Known Issues'>\n                            <ul>\n                                <li>Resource nodes do not have purities displayed on the graph</li>\n                                <li>Cyclic graphs are disabled.</li>\n                            </ul>\n                        </SidebarPopup>\n                    </List>\n                </Drawer>\n                <main className={classes.content}>\n                    {this.state.loaded ? <GraphSvg parentAccessor={this} ref={(graphSvg) => {\n                        t.graphSvg = graphSvg;\n                    }}/> : <div/>}\n                </main>\n            </MuiThemeProvider>\n        </div>;\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// PACKAGE DEPENDENCIES\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\nimport './styles/app.scss';\n\n// COMPONENTS\n\n// STYLES\n\n\nReactDOM.render(<App/>, document.getElementById('app'));"],"sourceRoot":""}